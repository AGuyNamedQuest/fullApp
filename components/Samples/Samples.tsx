/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Link, Button } from '@mui/material';
import Link from 'next/link';
import { styled } from '@mui/material/styles';
import Navbar from 'components/Navbar/Navbar';
import Footer from 'components/Footer/Footer';
import { SamplesProps } from 'types';
import useSamples from 'components/Samples/useSamples';

const Property1ReactPageD: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(23, 23, 23, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageT' ? `center` : `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: 'auto',
  width: '100%',
}));

const Navbar1: any = styled(Navbar)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const HeroDesktop: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/Samples_hero_desktop.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `50px 38px 54px 18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `50px 8px 54px 8px`
      : `110px 180px 100px 110px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `435px`,
  margin: `0px`,
  overflow: `hidden`,
}));

const HeroAll: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ActionsIcon: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height: data.currentVariant === 'Property1ReactPageM' ? `24px` : `50px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `24px` : `50px`,
  margin: `0px`,
}));

const HeroContent: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `0px 140px 0px 0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px 0px 0px 14px`,
}));

const TakeDesignToLaunc: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color:
    data.currentVariant === 'Property1ReactPageT'
      ? `rgba(0, 0, 0, 1)`
      : data.currentVariant === 'Property1ReactPageM'
      ? `rgba(0, 0, 0, 1)`
      : `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `78px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `36px`
      : `64px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `72px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `37px`
      : `64px`,
  textTransform:
    data.currentVariant === 'Property1ReactPageT'
      ? `uppercase`
      : data.currentVariant === 'Property1ReactPageM'
      ? `uppercase`
      : `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? `293px`
      : `717px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
  height: data.currentVariant === 'Property1ReactPageM' ? `111px` : 'unset',
}));

const HeroSub: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `14px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `44px 0px 0px 0px`
      : `2px 0px 0px 0px`,
}));

const NeoFromQuestAiEm: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `700`
      : data.currentVariant === 'Property1ReactPageM'
      ? `700`
      : `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `28px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `648px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `243px`
      : `408px`,
  margin: `0px`,
}));

const HeroMobileTablet: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/Samples_hero_mobileTablet.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `50px 38px 54px 18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `50px 8px 54px 8px`
      : `60px 180px 60px 110px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `1440px`,
  margin: `0px`,
  overflow: `hidden`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const HeroAll1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ActionsIcon1: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height: data.currentVariant === 'Property1ReactPageM' ? `24px` : `50px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `24px` : `50px`,
  margin: `0px`,
}));

const HeroContent1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `0px 140px 0px 0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px 0px 0px 14px`,
}));

const TakeDesignToLaunc1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color:
    data.currentVariant === 'Property1ReactPageT'
      ? `rgba(255, 255, 255, 1)`
      : data.currentVariant === 'Property1ReactPageM'
      ? `rgba(255, 255, 255, 1)`
      : `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `50px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `34px`
      : `110px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageM' ? `-1px` : `-2px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `52px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `32px`
      : `96px`,
  textTransform:
    data.currentVariant === 'Property1ReactPageT'
      ? `none`
      : data.currentVariant === 'Property1ReactPageM'
      ? `none`
      : `uppercase`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `stretch`,
  margin: `0px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `555px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `293px`
      : 'unset',
}));

const HeroSub1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1ReactPageT'
      ? `column`
      : data.currentVariant === 'Property1ReactPageM'
      ? `column`
      : `row`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `4px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `6px 0px 0px 0px`
      : `23px 0px 0px 0px`,
}));

const NeoFromQuestAiEm1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `600`
      : data.currentVariant === 'Property1ReactPageM'
      ? `600`
      : `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `20px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `24px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `30px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `24px`
      : `32px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `406px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `243px`
      : `661px`,
  margin: `0px`,
}));

const AllSamples: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/Samples_All_Samples.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `70px 80px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `70px 40px`
      : `70px 170px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Spacer: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `1px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `1px`
      : `4px`,
  margin: `0px`,
  minWidth:
    data.currentVariant === 'Property1ReactPageT'
      ? `unset`
      : data.currentVariant === 'Property1ReactPageM'
      ? `unset`
      : `1094px`,
}));

const Sample1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1ReactPageT'
      ? `column`
      : data.currentVariant === 'Property1ReactPageM'
      ? `column`
      : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `1100px`,
  margin: `80px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const SampleLeft: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `412px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const LeftSide: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TakeDesignToLaunc2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `28px` : `36px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `29px` : `38px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const NeoFromQuestAiEm2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `20px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `18px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageM'
      ? `0.09090909361839294px`
      : `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `24px` : `28px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? 'unset' : `stretch`,
  margin: `14px 0px 0px 0px`,
  width: data.currentVariant === 'Property1ReactPageT' ? `608px` : 'unset',
}));

const Links: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `14px 0px 0px 0px`,
});

const Sample: any = styled('div')({
  borderRadius: `6px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Frame169: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `2px 0px 0px 0px`,
  boxSizing: `border-box`,
  width: `30px`,
  height: `30px`,
  margin: `0px`,
});

const EyeballIcon: any = styled('img')({
  height: `12px`,
  width: `21px`,
  margin: `0px`,
});

const Link1: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `16px` : `20px`,
  letterSpacing: `0px`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 4px`,
}));

const Divider: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(155, 155, 155, 1)`,
  height: `1px`,
  width: `178px`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `10px 0px 0px 0px`
      : `14px 0px 0px 0px`,
}));

const Figma: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `10px 0px 0px 0px`
      : `14px 0px 0px 0px`,
}));

const FigmaIcon: any = styled('img')({
  height: `30px`,
  width: `30px`,
  objectFit: `cover`,
  margin: `0px`,
});

const Link2: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `16px` : `20px`,
  letterSpacing: `0px`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 4px`,
}));

const Code: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `10px 0px 0px 0px`
      : `14px 0px 0px 0px`,
}));

const GithubIcon: any = styled('img')({
  height: `30px`,
  width: `30px`,
  objectFit: `cover`,
  margin: `0px`,
});

const Link3: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `16px` : `20px`,
  letterSpacing: `0px`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 4px`,
}));

const Image1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  background: `linear-gradient(180deg, rgba(254, 254, 254, 1) -3.0616171314629196e-15%, rgba(157, 157, 157, 1) 99.99999999999999%)`,
  borderRadius: `8px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `6px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `6px`
      : `8px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `628px`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `472px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `235px`
      : `359px`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `36px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `36px 0px 0px 0px`
      : `0px 0px 0px 60px`,
  overflow: `hidden`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const Thumb: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/Samples_thumb.png)`,
  backgroundPosition: `center`,
  backgroundSize: `contain`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  alignItems:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  alignSelf: `stretch`,
  flexGrow: `1`,
  margin: `0px`,
}));

const Divider1: any = styled('div')({
  backgroundColor: `rgba(155, 155, 155, 1)`,
  alignSelf: `stretch`,
  height: `1px`,
  margin: `80px 0px 0px 0px`,
});

const Sample2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1ReactPageT'
      ? `column`
      : data.currentVariant === 'Property1ReactPageM'
      ? `column`
      : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `1100px`,
  margin: `80px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const SampleLeft1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `412px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const LeftSide1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TakeDesignToLaunc3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `28px` : `36px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `29px` : `38px`,
  textTransform: `none`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const NeoFromQuestAiEm3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `20px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `18px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageM'
      ? `0.09090909361839294px`
      : `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `24px` : `28px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? 'unset' : `stretch`,
  margin: `14px 0px 0px 0px`,
  width: data.currentVariant === 'Property1ReactPageT' ? `608px` : 'unset',
}));

const Links1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `14px 0px 0px 0px`,
});

const Sample3: any = styled('div')({
  borderRadius: `6px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Frame1691: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `2px 0px 0px 0px`,
  boxSizing: `border-box`,
  width: `30px`,
  height: `30px`,
  margin: `0px`,
});

const EyeballIcon1: any = styled('img')({
  height: `12px`,
  width: `21px`,
  margin: `0px`,
});

const Link4: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `16px` : `20px`,
  letterSpacing: `0px`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 4px`,
}));

const Divider2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(155, 155, 155, 1)`,
  height: `1px`,
  width: `178px`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `10px 0px 0px 0px`
      : `14px 0px 0px 0px`,
}));

const Figma1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `10px 0px 0px 0px`
      : `14px 0px 0px 0px`,
}));

const FigmaIcon1: any = styled('img')({
  height: `30px`,
  width: `30px`,
  objectFit: `cover`,
  margin: `0px`,
});

const Link5: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `16px` : `20px`,
  letterSpacing: `0px`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 4px`,
}));

const Code1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `10px 0px 0px 0px`
      : `14px 0px 0px 0px`,
}));

const GithubIcon1: any = styled('img')({
  height: `30px`,
  width: `30px`,
  objectFit: `cover`,
  margin: `0px`,
});

const Link6: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `16px` : `20px`,
  letterSpacing: `0px`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 4px`,
}));

const Image2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  background:
    data.currentVariant === 'Property1ReactPageM'
      ? `linear-gradient(180deg, rgba(255, 255, 255, 1) -3.0616171314629196e-15%, rgba(151, 151, 151, 1) 99.99999999999997%)`
      : `linear-gradient(180deg, rgba(255, 255, 255, 1) -3.0616171314629196e-15%, rgba(151, 151, 151, 1) 99.99999999999999%)`,
  borderRadius:
    data.currentVariant === 'Property1ReactPageT'
      ? `12px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `12px`
      : `8px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `6px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `6px`
      : `8px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `628px`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `494px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `259px`
      : `451px`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `36px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `36px 0px 0px 0px`
      : `0px 0px 0px 60px`,
  overflow: `hidden`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const Thumb1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/Samples_thumb_1.png)`,
  backgroundPosition: `center`,
  backgroundSize: `contain`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  flexGrow: `1`,
  margin: `0px`,
  overflow: data.currentVariant === 'Property1ReactPageM' ? `hidden` : 'unset',
}));

const Divider3: any = styled('div')({
  backgroundColor: `rgba(155, 155, 155, 1)`,
  alignSelf: `stretch`,
  height: `1px`,
  margin: `80px 0px 0px 0px`,
});

const Sample31: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1ReactPageT'
      ? `column`
      : data.currentVariant === 'Property1ReactPageM'
      ? `column`
      : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `1100px`,
  margin: `80px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const SampleLeft2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `412px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const LeftSide2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TakeDesignToLaunc4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `28px` : `36px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `29px` : `38px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const NeoFromQuestAiEm4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `20px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `18px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageM'
      ? `0.09090909361839294px`
      : `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `24px` : `26px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? 'unset' : `stretch`,
  margin: `14px 0px 0px 0px`,
  width: data.currentVariant === 'Property1ReactPageT' ? `608px` : 'unset',
}));

const Links2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `14px 0px 0px 0px`,
});

const Figma2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const FigmaIcon2: any = styled('img')({
  height: `30px`,
  width: `30px`,
  objectFit: `cover`,
  margin: `0px`,
});

const Link7: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `16px` : `20px`,
  letterSpacing: `0px`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 4px`,
}));

const Image3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  background:
    data.currentVariant === 'Property1ReactPageM'
      ? `linear-gradient(180deg, rgba(255, 255, 255, 1) -3.0616171314629196e-15%, rgba(151, 151, 151, 1) 99.99999999999997%)`
      : `linear-gradient(180deg, rgba(255, 255, 255, 1) -3.0616171314629196e-15%, rgba(151, 151, 151, 1) 99.99999999999999%)`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageT' ? `flex-end` : `center`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `8px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `4px`
      : `10px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `628px`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `498px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `257px`
      : `506px`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `36px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `36px 0px 0px 0px`
      : `0px 0px 0px 60px`,
  overflow: `hidden`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const Thumb2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/Samples_thumb_2.png)`,
  backgroundPosition: `center`,
  backgroundSize: `contain`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageM' ? `center` : `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageM' ? `center` : `flex-start`,
  alignSelf: `stretch`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `506px`,
  margin: `0px`,
  flexGrow:
    data.currentVariant === 'Property1ReactPageT'
      ? `1`
      : data.currentVariant === 'Property1ReactPageM'
      ? `1`
      : 'unset',
  borderRadius:
    data.currentVariant === 'Property1ReactPageM' ? `12px` : 'unset',
  overflow: data.currentVariant === 'Property1ReactPageM' ? `hidden` : 'unset',
}));

const DiscoverSec: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/Samples_Discover_Sec.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px 50px 160px 50px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px 30px 140px 30px`
      : `90px 180px 200px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame127: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px 70px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `0px 100px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Subtitle: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon2: any = styled('img')({
  height: `14px`,
  width: `12.95px`,
  margin: `0px`,
});

const NeoFromQuestAiEm5: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: `385.7px`,
  margin: `0px 0px 0px 6px`,
});

const DiscoverTheSpan1: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `56px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `52px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `56px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
  alignSelf: 'unset',
}));

const DiscoverTheSpan2: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `56px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `52px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `56px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
  alignSelf: 'unset',
}));

const DiscoverTheSpan3: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `56px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `52px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `56px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
  alignSelf: 'unset',
}));

const DiscoverThe: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `56px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `52px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `56px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? 'unset' : `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `20px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `18px 0px 0px 0px`
      : `24px 0px 0px 0px`,
  width: data.currentVariant === 'Property1ReactPageT' ? `668px` : 'unset',
}));

const ImportYourDifferen: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `26px` : `30px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1ReactPageM' ? 'unset' : `622.49px`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `20px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `18px 0px 0px 0px`
      : `24px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? `stretch` : 'unset',
}));

const LearnMore: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `0px 0px 10px 0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `20px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `18px 0px 0px 0px`
      : `24px 0px 0px 0px`,
}));

const About: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `26px` : `30px`,
  textTransform: `none`,
  margin: `0px`,
}));

const Link8: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `26px` : `30px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `0px 0px 0px 6px`
      : `0px 0px 0px 5px`,
}));

const ButtonOutlined: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `20px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `18px 0px 0px 0px`
      : `24px 0px 0px 0px`,
}));

const Footer1: any = styled(Footer, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `stretch`,
  margin: `0px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `768px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `375px`
      : 'unset',
}));

function Samples(props: SamplesProps): JSX.Element {
  const { data } = useSamples();

  return (
    <Property1ReactPageD data={data}>
      <Navbar1 />
      {!(data.currentVariant === 'Property1ReactPageT') &&
        !(data.currentVariant === 'Property1ReactPageM') && (
          <HeroDesktop data={data}>
            <HeroAll>
              <ActionsIcon
                data={data}
                src={`assets/images/Samples_Actions_Icon.png`}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <HeroContent data={data}>
                <TakeDesignToLaunc data={data}>
                  {data.currentVariant === 'Property1ReactPageT'
                    ? `BUILD REACT APPS FASTER 
THAN EVER`
                    : data.currentVariant === 'Property1ReactPageM'
                    ? `BUILD REACT APPS FASTER 
THAN EVER`
                    : `Sample Projects`}
                </TakeDesignToLaunc>
                <HeroSub data={data}>
                  <NeoFromQuestAiEm data={data}>
                    {data.currentVariant === 'Property1ReactPageT'
                      ? `Build as fast as your designer can envision them, with clean and efficient code - as if you hand coded them.`
                      : data.currentVariant === 'Property1ReactPageM'
                      ? `Build as fast as your designer can envision them, with clean and efficient code - as if you hand coded them.`
                      : `Check out some samples built with Quest. See the Figma designs, see the code and see how they all came to life.`}
                  </NeoFromQuestAiEm>
                </HeroSub>
              </HeroContent>
            </HeroAll>
          </HeroDesktop>
        )}
      {(data.currentVariant === 'Property1ReactPageT' ||
        data.currentVariant === 'Property1ReactPageM') && (
        <HeroMobileTablet data={data}>
          <HeroAll1>
            <ActionsIcon1
              data={data}
              src={`assets/images/Samples_Actions_Icon_1.png`}
              loading="lazy"
              alt={'Actions Icon'}
            />
            <HeroContent1 data={data}>
              <TakeDesignToLaunc1 data={data}>
                {data.currentVariant === 'Property1ReactPageT'
                  ? `Sample Projects`
                  : data.currentVariant === 'Property1ReactPageM'
                  ? `Sample Projects`
                  : `BUILD REACT APPS FASTER 
THAN EVER`}
              </TakeDesignToLaunc1>
              <HeroSub1 data={data}>
                <NeoFromQuestAiEm1 data={data}>
                  {data.currentVariant === 'Property1ReactPageT'
                    ? `Check out some samples built with Quest. See the Figma designs, see the code and see how they all came to life.`
                    : data.currentVariant === 'Property1ReactPageM'
                    ? `Check out some samples built with Quest. See the Figma designs, see the code and see how they all came to life.`
                    : `Build as fast as your designer can envision them, with clean and efficient code - as if you hand coded them.`}
                </NeoFromQuestAiEm1>
              </HeroSub1>
            </HeroContent1>
          </HeroAll1>
        </HeroMobileTablet>
      )}
      <AllSamples data={data}>
        <Spacer data={data}></Spacer>
        <Sample1 data={data}>
          <SampleLeft data={data}>
            <LeftSide>
              <TakeDesignToLaunc2 data={data}>
                {`Company Dashboard`}
              </TakeDesignToLaunc2>
              <NeoFromQuestAiEm2 data={data}>
                {`This internal page was designed as 9 components in Figma then combined and set up in Quest to create a fully custom company dashboard from design to done in less than 1 day.`}
              </NeoFromQuestAiEm2>
              <Links>
                <Sample>
                  <Frame169>
                    <EyeballIcon
                      src={`assets/images/Samples_eyeball_icon.png`}
                      loading="lazy"
                      alt={'eyeball icon'}
                    />
                  </Frame169>
                  <Link1
                    href={'https://samples.quest.ai/moonbase/navbar'}
                    underline="hover"
                    data={data}
                  >
                    See the Sample
                  </Link1>
                </Sample>
                <Divider data={data}></Divider>
                <Figma data={data}>
                  <FigmaIcon
                    src={`assets/images/Samples_figma_icon.png`}
                    loading="lazy"
                    alt={'figma icon'}
                  />
                  <Link2
                    href={
                      'https://www.figma.com/community/file/1100540938110115679'
                    }
                    underline="hover"
                    data={data}
                  >
                    View the Figma file
                  </Link2>
                </Figma>
                <Code data={data}>
                  <GithubIcon
                    src={`assets/images/Samples_github_icon.png`}
                    loading="lazy"
                    alt={'github icon'}
                  />
                  <Link3
                    href={
                      'https://github.com/QuestAI/component-samples/tree/main/src/moonbase/dashboard'
                    }
                    underline="hover"
                    data={data}
                  >
                    Get the Code on GitHub
                  </Link3>
                </Code>
              </Links>
            </LeftSide>
          </SampleLeft>
          <Image1 data={data}>
            <Thumb data={data}></Thumb>
          </Image1>
        </Sample1>
        <Divider1></Divider1>
        <Sample2 data={data}>
          <SampleLeft1 data={data}>
            <LeftSide1>
              <TakeDesignToLaunc3 data={data}>
                {`Payment Checkout`}
              </TakeDesignToLaunc3>
              <NeoFromQuestAiEm3 data={data}>
                {`This checkout component was easily setup in Quest and converted to working React code with MUI components copied and pasted from the Material UI Figma Design System.`}
              </NeoFromQuestAiEm3>
              <Links1>
                <Sample3>
                  <Frame1691>
                    <EyeballIcon1
                      src={`assets/images/Samples_eyeball_icon_1.png`}
                      loading="lazy"
                      alt={'eyeball icon'}
                    />
                  </Frame1691>
                  <Link4
                    href={'https://samples.quest.ai/moonbase/payment'}
                    underline="hover"
                    data={data}
                  >
                    See the Sample
                  </Link4>
                </Sample3>
                <Divider2 data={data}></Divider2>
                <Figma1 data={data}>
                  <FigmaIcon1
                    src={`assets/images/Samples_figma_icon_1.png`}
                    loading="lazy"
                    alt={'figma icon'}
                  />
                  <Link5
                    href={
                      'https://www.figma.com/community/file/1100540938110115679'
                    }
                    underline="hover"
                    data={data}
                  >
                    View the Figma file
                  </Link5>
                </Figma1>
                <Code1 data={data}>
                  <GithubIcon1
                    src={`assets/images/Samples_github_icon_1.png`}
                    loading="lazy"
                    alt={'github icon'}
                  />
                  <Link6
                    href={
                      'https://github.com/QuestAI/component-samples/tree/main/src/moonbase/payment'
                    }
                    underline="hover"
                    data={data}
                  >
                    Get the Code on GitHub
                  </Link6>
                </Code1>
              </Links1>
            </LeftSide1>
          </SampleLeft1>
          <Image2 data={data}>
            <Thumb1 data={data}></Thumb1>
          </Image2>
        </Sample2>
        <Divider3></Divider3>
        <Sample31 data={data}>
          <SampleLeft2 data={data}>
            <LeftSide2>
              <TakeDesignToLaunc4 data={data}>
                {`Company Website`}
              </TakeDesignToLaunc4>
              <NeoFromQuestAiEm4 data={data}>
                {`This entire responsive Quest website you’re on right now is made with Quest.`}
              </NeoFromQuestAiEm4>
              <Links2>
                <Figma2>
                  <FigmaIcon2
                    src={`assets/images/Samples_figma_icon_2.png`}
                    loading="lazy"
                    alt={'figma icon'}
                  />
                  <Link7
                    href={
                      'https://www.figma.com/community/file/1100556747304842087'
                    }
                    underline="hover"
                    data={data}
                  >
                    View the Figma file
                  </Link7>
                </Figma2>
              </Links2>
            </LeftSide2>
          </SampleLeft2>
          <Image3 data={data}>
            <Thumb2 data={data}></Thumb2>
          </Image3>
        </Sample31>
      </AllSamples>
      <DiscoverSec data={data}>
        <Frame127 data={data}>
          <Subtitle>
            <ActionsIcon2
              src={`assets/images/Samples_Actions_Icon_2.png`}
              loading="lazy"
              alt={'Actions Icon'}
            />
            <NeoFromQuestAiEm5>
              {data.currentVariant === 'Property1ReactPageT'
                ? `JOIN THE FUTURE`
                : data.currentVariant === 'Property1ReactPageM'
                ? `JOIN THE FUTURE`
                : `THE FUTURE of frontend`}
            </NeoFromQuestAiEm5>
          </Subtitle>
          <DiscoverThe data={data}>
            <DiscoverTheSpan1 data={data}>{`Join the `}</DiscoverTheSpan1>
            <DiscoverTheSpan2 data={data}>{`future`}</DiscoverTheSpan2>
            <DiscoverTheSpan3
              data={data}
            >{` & build products at rapid speed`}</DiscoverTheSpan3>
          </DiscoverThe>
          <ImportYourDifferen data={data}>
            {data.currentVariant === 'Property1ReactPageT'
              ? `The nocode movement is helping companies of all sizes remove redundant work. Quest enables you to build software products faster and true to design.`
              : data.currentVariant === 'Property1ReactPageM'
              ? `The nocode movement is helping companies of all sizes remove redundant work. Quest enables you to build software products faster and true to design.`
              : `The low-code movement is helping companies of all sizes remove redundant work. Quest enables you to build software products faster and go to market faster than ever.`}
          </ImportYourDifferen>
          <LearnMore data={data}>
            <About data={data}>{`Learn more about`}</About>
            <Link href={'/features'} passHref>
              <Link8 underline="hover" data={data}>
                our features.
              </Link8>
            </Link>
          </LearnMore>
          <Link href="/pricing">
            <ButtonOutlined
              variant="outlined"
              size="large"
              color="primary"
              data={data}
            >
              {' '}
              Sign Up Now{' '}
            </ButtonOutlined>
          </Link>
        </Frame127>
      </DiscoverSec>
      <Footer1 data={data} />
    </Property1ReactPageD>
  );
}

export default Samples;
