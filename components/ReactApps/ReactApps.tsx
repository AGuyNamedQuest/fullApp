/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button, Link } from '@mui/material';
import Link from 'next/link';
import { styled } from '@mui/material/styles';
import Navbar from 'components/Navbar/Navbar';
import Video from 'components/Video/Video';
import HowItWorksD from 'components/HowItWorksD/HowItWorksD';
import HowItWorksT from 'components/HowItWorksT/HowItWorksT';
import HowItWorksM from 'components/HowItWorksM/HowItWorksM';
import Footer from 'components/Footer/Footer';
import { ReactAppsProps } from 'types';
import useReactApps from 'components/ReactApps/useReactApps';

const Property1ReactPageD: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(23, 23, 23, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageM' ? `flex-start` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: 'auto',
}));

const Navbar1: any = styled(Navbar)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const HeroDesktop: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/ReactApps_hero_desktop.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `50px 38px 54px 18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `50px 8px 54px 8px`
      : `80px 0px 60px 110px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
}));

const HeroAll: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ActionsIcon: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height: data.currentVariant === 'Property1ReactPageM' ? `24px` : `50px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `24px` : `50px`,
  margin: `0px`,
}));

const HeroContent: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px 0px 0px 14px`,
});

const HeroTitle: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TakeDesignToLaunc: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `78px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `36px`
      : `110px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `72px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `37px`
      : `100px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `946px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const HeroLine: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? 'unset' : `stretch`,
  margin: `0px`,
}));

const TakeDesignToLaunc1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `78px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `36px`
      : `110px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `72px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `37px`
      : `96px`,
  textTransform: `none`,
  background:
    data.currentVariant === 'Property1ReactPageT'
      ? `linear-gradient(90deg, rgba(128, 102, 255, 1) 8.086680734691237%, rgba(254, 136, 136, 1) 50.0000000000002%)`
      : data.currentVariant === 'Property1ReactPageM'
      ? `linear-gradient(90deg, rgba(128, 102, 255, 1) 8.086680734691248%, rgba(254, 136, 136, 1) 50.00000000000021%)`
      : `linear-gradient(90deg, rgba(128, 102, 255, 1) 8.304979279037187%, rgba(128, 102, 255, 1) 31.008027207907073%, rgba(254, 136, 136, 1) 50.0000000000002%)`,
  backgroundClip: `text`,
  WebkitBackgroundClip: `text`,
  WebkitTextFillColor: `transparent`,
  margin: `0px`,
}));

const TakeDesignToLaunc2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `78px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `36px`
      : `110px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `72px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `37px`
      : `96px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `946px`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px 0px 0px 10px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px 0px 0px 4px`
      : `0px 0px 0px 22px`,
}));

const HeroSub: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1ReactPageT'
      ? `column`
      : data.currentVariant === 'Property1ReactPageM'
      ? `column`
      : `row`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `14px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `44px 0px 0px 0px`
      : `23px 0px 0px 0px`,
}));

const NeoFromQuestAiEm: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `24px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `28px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `22px`
      : `32px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `648px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `243px`
      : `661px`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `64px`,
  margin: `0px`,
}));

const ButtonOutlined: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `14px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `44px 0px 0px 0px`
      : `0px 0px 0px 36px`,
}));

const HeroMobileTablet: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/ReactApps_hero_mobileTablet.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `70px 38px 64px 18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `50px 8px 54px 8px`
      : `60px 180px 60px 110px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
}));

const HeroAll1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ActionsIcon1: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height: data.currentVariant === 'Property1ReactPageM' ? `24px` : `50px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `24px` : `50px`,
  margin: `0px`,
}));

const HeroContent1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `0px 140px 0px 0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px 0px 0px 14px`,
  minWidth:
    data.currentVariant === 'Property1ReactPageT'
      ? `592px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `unset`
      : `unset`,
}));

const HeroTitle1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TakeDesignToLaunc3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `36px` : `78px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `37px` : `72px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? 'unset' : `stretch`,
  margin: `0px`,
}));

const HeroLine1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? `stretch` : 'unset',
}));

const TakeDesignToLaunc4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `36px` : `78px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `37px` : `72px`,
  textTransform: `none`,
  background:
    data.currentVariant === 'Property1ReactPageM'
      ? `linear-gradient(90deg, rgba(128, 102, 255, 1) 8.086680734691248%, rgba(254, 136, 136, 1) 50.00000000000021%)`
      : `linear-gradient(90deg, rgba(128, 102, 255, 1) 8.086680734691237%, rgba(254, 136, 136, 1) 50.0000000000002%)`,
  backgroundClip: `text`,
  WebkitBackgroundClip: `text`,
  WebkitTextFillColor: `transparent`,
  margin: `0px`,
}));

const TakeDesignToLaunc5: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `36px` : `78px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `37px` : `72px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `0px 0px 0px 4px`
      : `0px 0px 0px 10px`,
}));

const HeroSub1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1ReactPageT'
      ? `column`
      : data.currentVariant === 'Property1ReactPageM'
      ? `column`
      : `row`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `14px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `20px 0px 0px 0px`
      : `23px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const NeoFromQuestAiEm1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `24px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `28px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `22px`
      : `32px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? `243px`
      : `661px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const ButtonOutlined1: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `28px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `34px 0px 0px 0px`
      : `0px 0px 0px 36px`,
}));

const Sec2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(40, 39, 39, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1ReactPageT'
      ? `column`
      : data.currentVariant === 'Property1ReactPageM'
      ? `column`
      : `row`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `70px 54px 0px 54px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `60px 36px 120px 36px`
      : `40px 180px 0px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  height: data.currentVariant === 'Property1ReactPageM' ? `636px` : 'unset',
}));

const Sec2Sub: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1ReactPageT'
      ? `column`
      : data.currentVariant === 'Property1ReactPageM'
      ? `column`
      : `row`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `1080px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const BuildWithTheTools: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageM' ? `flex-start` : `center`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px 120px 0px 30px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `0px 30px 0px 0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `518px`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `502px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const Frame167: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const TitleSpan1: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const TitleSpan2: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const Title: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? `254px`
      : `488px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const SimplyBring: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? `254px`
      : `488px`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `13px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `13px 0px 0px 0px`
      : `14px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const ButtonOutlined2: any = styled(Button)({
  margin: `26px 0px 0px 0px`,
});

const FigmaToReactWithMui: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `530px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `251px`
      : `502px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `660px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `302.32px`
      : `562px`,
  margin:
    data.currentVariant === 'Property1ReactPageM' ? `17px 0px 0px 0px` : `0px`,
}));

const SecStats: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `60px 50px 20px 50px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `40px 28px`
      : `60px 180px 0px 180px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `1440px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const Divider: any = styled('div')({
  backgroundColor: `rgba(46, 46, 46, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `2px`,
  margin: `0px`,
});

const BuildBoldPoints: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1ReactPageT'
      ? `column`
      : data.currentVariant === 'Property1ReactPageM'
      ? `column`
      : `row`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `space-between`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `50px 0px 0px 0px`
      : `34px 0px 0px 0px`,
}));

const Stat1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : 'unset',
}));

const StatIcon: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `66px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `66px`
      : `76px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `66px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `66px`
      : `76px`,
  margin: `0px`,
}));

const Txt: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px 0px 0px 16px`,
});

const StatNum1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `38px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `34px`
      : `42px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `28px`,
  textTransform: `none`,
  margin: `0px`,
}));

const StatDesc1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `16px` : `20px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageM'
      ? `0.09090909361839294px`
      : `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `22px` : `26px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `4px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `4px 0px 0px 0px`
      : `10px 0px 0px 0px`,
}));

const Stat2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageT'
      ? `center`
      : data.currentVariant === 'Property1ReactPageM'
      ? `center`
      : `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `40px 0px 0px 0px`
      : 'unset',
}));

const StatIcon1: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `66px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `66px`
      : `76px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `66px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `66px`
      : `76px`,
  margin: `0px`,
}));

const Txt1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px 0px 0px 12px`,
});

const StatNum2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `38px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `34px`
      : `42px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `28px`,
  textTransform: `none`,
  margin: `0px`,
}));

const StatDesc2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `16px` : `20px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageM'
      ? `0.09090909361839294px`
      : `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `22px` : `26px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `4px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `4px 0px 0px 0px`
      : `10px 0px 0px 0px`,
}));

const Stat3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `40px 0px 0px 0px`
      : 'unset',
}));

const StatIcon2: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `66px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `66px`
      : `76px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `66px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `66px`
      : `76px`,
  margin: `0px`,
}));

const Txt2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px 0px 0px 12px`,
});

const StatNum3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `38px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `34px`
      : `42px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `28px`,
  textTransform: `none`,
  margin: `0px`,
}));

const StatDesc3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `16px` : `20px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageM'
      ? `0.09090909361839294px`
      : `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `22px` : `26px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `4px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `4px 0px 0px 0px`
      : `10px 0px 0px 0px`,
}));

const Divider1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(46, 46, 46, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `2px`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `50px 0px 0px 0px`
      : `34px 0px 0px 0px`,
}));

const Video1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1ReactPageM'
      ? `50px 0px 70px 0px`
      : `70px 84px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `0px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `375px` : 'unset',
}));

const Subtitle: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  alignItems: `center`,
  padding: data.currentVariant === 'Property1ReactPageM' ? `0px 36px` : `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `stretch`,
  margin: `0px`,
}));

const ActionsIcon2: any = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const NeoFromQuestAiEm2: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  margin: `0px 0px 0px 8px`,
});

const Vid: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `7px 0px 0px 0px`
      : `14px 0px 0px 0px`,
  height: data.currentVariant === 'Property1ReactPageM' ? `195px` : 'unset',
}));

const Video2: any = styled(Video, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `337px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `194px`
      : `607px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `600px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `345px`
      : `1080px`,
  margin: `0px`,
}));

const Sec4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Sec4Text: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px 84px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px 36px`
      : `0px 250px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `1440px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const Subtitle1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon3: any = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const NeoFromQuestAiEm3: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: `153px`,
  margin: `0px 0px 0px 8px`,
});

const GenerateTitleSpan1: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const GenerateTitleSpan2: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const GenerateTitleSpan3: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const GenerateTitle: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? `291px`
      : `568px`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `20px 0px 0px 0px`
      : `16px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const NeoFromQuestAiEm4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? `291px`
      : `660px`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `20px 0px 0px 0px`
      : `16px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const Frame164: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1ReactPageM' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `20px 0px 0px 0px`
      : `16px 0px 0px 0px`,
  minWidth:
    data.currentVariant === 'Property1ReactPageT'
      ? `484px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `unset`
      : `unset`,
}));

const Link1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Link2: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  margin: `0px`,
}));

const With100: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 6px`,
}));

const ReactComponents: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'Property1ReactPageM' ? `0px` : `0px 0px 0px 5px`,
}));

const Sec4Image: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/ReactApps_sec4_Image.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `520px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `275px`
      : `1019px`,
  margin: `44px 0px 0px 0px`,
}));

const Sec5: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage:
    data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `url(assets/images/ReactApps_Sec5.png)`,
  backgroundPosition:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `center`,
  backgroundSize:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `cover`,
  backgroundRepeat:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1ReactPageT'
      ? `column`
      : data.currentVariant === 'Property1ReactPageM'
      ? `column`
      : `row`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageM' ? `flex-start` : `center`,
  alignItems:
    data.currentVariant === 'Property1ReactPageT'
      ? `center`
      : data.currentVariant === 'Property1ReactPageM'
      ? `center`
      : `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `60px 84px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `70px 0px 30px 0px`
      : `100px 180px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `0px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `375px` : 'unset',
}));

const Sec5Text: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px 36px`
      : `0px 30px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `466px`,
  margin: `0px`,
}));

const Frame124: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon4: any = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const NeoFromQuestAiEm5: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  margin: `0px 0px 0px 10px`,
});

const Frame165: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `22px 0px 0px 0px`,
}));

const TakeDesignToLaunc6Span1: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const TakeDesignToLaunc6Span2: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const TakeDesignToLaunc6Span3: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(41, 41, 41, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const TakeDesignToLaunc6Span4: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const TakeDesignToLaunc6: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `0px`,
}));

const NeoFromQuestAiEm6: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `16px 0px 0px 0px`,
}));

const TsAndJs: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height: data.currentVariant === 'Property1ReactPageM' ? `62px` : `70px`,
  width:
    data.currentVariant === 'Property1ReactPageM' ? `150.61px` : `184.33px`,
  margin: `22px 0px 0px 0px`,
}));

const CodeImg: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/ReactApps_code_img.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? `352px`
      : `429px`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `376px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `363px`
      : `444px`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `36px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `29px 0px 0px 0px`
      : `0px 0px 0px 36px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const Sec6: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/ReactApps_Sec_6.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `63px 84px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `63px 36px`
      : `83px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
}));

const IterateText: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `612px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const Subtitle2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon5: any = styled('img')({
  height: `14px`,
  width: `14.74px`,
  margin: `0px`,
});

const NeoFromQuestAiEm7: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  margin: `0px 0px 0px 8px`,
});

const TakeDesignToLaunc7Span1: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  textAlign: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const TakeDesignToLaunc7Span2: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  textAlign: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const TakeDesignToLaunc7: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `stretch`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `51px`,
  margin: `16px 0px 0px 0px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `289px` : 'unset',
}));

const NeoFromQuestAiEm8: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `16px 0px 0px 0px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `303px` : 'unset',
}));

const SecHow: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1ReactPageM' ? `70px 36px` : `70px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Sec2Centered: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.currentVariant === 'Property1ReactPageT' ? `0px 84px` : `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const Logos: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `48px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `29px`
      : `76px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `378.95px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `228.95px`
      : `593.22px`,
  margin: `0px`,
}));

const Titles: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `22px 0px 0px 0px`
      : `34px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? `stretch` : 'unset',
}));

const Subtitle3: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon6: any = styled('img')({
  height: `14px`,
  width: `14.45px`,
  margin: `0px`,
});

const EasyYetFlexible: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: `430.33px`,
  margin: `0px 0px 0px 8px`,
});

const GenerateCustomReactC: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `52px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `50px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1ReactPageM' ? 'unset' : `662px`,
  margin: `24px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? `stretch` : 'unset',
}));

const CreateFully: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `600`
      : data.currentVariant === 'Property1ReactPageM'
      ? `600`
      : `500`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1ReactPageM' ? 'unset' : `575.49px`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `22px 0px 0px 0px`
      : `34px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? `stretch` : 'unset',
}));

const HowItWorksD1: any = styled(HowItWorksD, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `22px 0px 0px 0px`
      : `34px 0px 0px 0px`,
}));

const HowItWorksT1: any = styled(HowItWorksT, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `22px 0px 0px 0px`
      : `34px 0px 0px 0px`,
}));

const HowItWorksM1: any = styled(HowItWorksM, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `22px 0px 0px 0px`
      : `34px 0px 0px 0px`,
}));

const LearnMore: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `22px 0px 0px 0px`
      : `34px 0px 0px 0px`,
}));

const LearnMore1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `600`
      : data.currentVariant === 'Property1ReactPageM'
      ? `600`
      : `500`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  margin: `0px`,
}));

const About: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `600`
      : data.currentVariant === 'Property1ReactPageM'
      ? `600`
      : `500`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 5px`,
}));

const Sec7: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/ReactApps_Sec7.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  padding:
    data.currentVariant === 'Property1ReactPageM'
      ? `70px 3px`
      : `70px 0px 80px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ElevateYour: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageM' ? `0px 36px` : `0px 84px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `688px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const Subtitle4: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon7: any = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const Higher: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  margin: `0px 0px 0px 8px`,
});

const ElevateYour1Span1: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `50px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const ElevateYour1Span2: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `50px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const ElevateYour1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `50px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `6px 0px 0px 0px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `271px` : 'unset',
}));

const Eliminate: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `6px 0px 0px 0px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `303px` : 'unset',
}));

const Frame1241: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageM' ? `flex-start` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `30px 0px 0px 0px`,
}));

const FigmaToReactWithQues: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `380.21px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `201.38px`
      : `596px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `688px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `364.3px`
      : `1078px`,
  objectFit: `cover`,
  margin: `0px`,
}));

const Benefits: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1ReactPageM' ? `column` : `row`,
  justifyContent:
    data.currentVariant === 'Property1ReactPageT'
      ? `center`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `space-between`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px 32px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px 32px`
      : `0px 180px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `1440px`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `36px 0px 0px 0px`
      : `46px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const Txt11: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `330.67px`,
  flexGrow: data.currentVariant === 'Property1ReactPageT' ? `1` : 'unset',
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : 'unset',
}));

const DesignToLiveHtml: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `22px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `22px`
      : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `0px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `229px` : 'unset',
}));

const ImportYourDifferen: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `6px 0px 0px 0px`
      : `4px 0px 0px 0px`,
}));

const Txt21: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `330.67px`,
  flexGrow: data.currentVariant === 'Property1ReactPageT' ? `1` : 'unset',
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px 0px 0px 44px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `44px 0px 0px 0px`
      : 'unset',
}));

const DesignToLiveHtml1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `22px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `22px`
      : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `0px`,
}));

const ImportYourDifferen1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `6px 0px 0px 0px`
      : `4px 0px 0px 0px`,
}));

const Txt3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `330.67px`,
  flexGrow: data.currentVariant === 'Property1ReactPageT' ? `1` : 'unset',
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px 0px 0px 44px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `44px 0px 0px 0px`
      : 'unset',
}));

const DesignToLiveHtml2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `22px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `22px`
      : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `0px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `161px` : 'unset',
}));

const ImportYourDifferen2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `6px 0px 0px 0px`
      : `4px 0px 0px 0px`,
}));

const Sec8: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageM' ? `flex-start` : `center`,
  padding: `46px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
  backgroundImage:
    data.currentVariant === 'Property1ReactPageT'
      ? `url(assets/images/undefined)`
      : data.currentVariant === 'Property1ReactPageM'
      ? `url(assets/images/undefined)`
      : 'unset',
  backgroundPosition:
    data.currentVariant === 'Property1ReactPageT'
      ? `center`
      : data.currentVariant === 'Property1ReactPageM'
      ? `center`
      : 'unset',
  backgroundSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `cover`
      : data.currentVariant === 'Property1ReactPageM'
      ? `cover`
      : 'unset',
  backgroundRepeat:
    data.currentVariant === 'Property1ReactPageT'
      ? `no-repeat`
      : data.currentVariant === 'Property1ReactPageM'
      ? `no-repeat`
      : 'unset',
}));

const Sec8Text: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px 84px 30px 84px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px 36px`
      : `0px 90px 30px 260px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `1110px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const Subtitle5: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon8: any = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const NeoFromQuestAiEm9: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  margin: `0px 0px 0px 10px`,
});

const TakeDesignToLaunc8Span1: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `46px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `47px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const TakeDesignToLaunc8Span2: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `46px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `47px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const TakeDesignToLaunc8Span3: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `46px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `47px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
  width: 'unset',
}));

const TakeDesignToLaunc8: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1ReactPageM' ? `30px` : `46px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `30px` : `47px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `19px 0px 0px 0px`
      : `16px 0px 0px 0px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `302px` : 'unset',
}));

const NeoFromQuestAiEm10: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? `302px`
      : `514px`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `19px 0px 0px 0px`
      : `16px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const FigmaToReactComponen: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `291px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `142.38px`
      : `550px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `768px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `375px`
      : `1440px`,
  objectFit: `cover`,
  margin: `10px 0px 0px 0px`,
}));

const MoreFeatures: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageM' ? `flex-start` : `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `70px 84px 100px 84px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `70px 36px 100px 36px`
      : `70px 180px 100px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const GameChangingFeatur: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `30px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `56px`,
  textTransform: `none`,
  margin: `0px`,
});

const Frame106: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1ReactPageM' ? `column` : `row`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `18px 0px 0px 0px`,
}));

const Frame1061: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? `298px`
      : `515px`,
  margin: `0px`,
  flexGrow: data.currentVariant === 'Property1ReactPageT' ? `1` : 'unset',
}));

const ImportYourDifferen3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Divider2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `6px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
  overflow: `hidden`,
});

const Divider3: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Divider4: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  flexGrow: `1`,
  height: `1px`,
  margin: `0px`,
});

const ImportYourDifferen4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
}));

const Divider5: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `6px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
  overflow: `hidden`,
});

const Divider6: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Divider7: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  flexGrow: `1`,
  height: `1px`,
  margin: `0px`,
});

const ImportYourDifferen5: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
}));

const Divider8: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `6px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
  overflow: `hidden`,
});

const Divider9: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Divider10: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  flexGrow: `1`,
  height: `1px`,
  margin: `0px`,
});

const ImportYourDifferen6: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
}));

const Divider11: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `6px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
  overflow: `hidden`,
});

const Divider12: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Divider13: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  flexGrow: `1`,
  height: `1px`,
  margin: `0px`,
});

const ImportYourDifferen7: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
}));

const Frame1062: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? `298px`
      : `515px`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `20px 0px 0px 0px`
      : `0px 0px 0px 50px`,
  flexGrow: data.currentVariant === 'Property1ReactPageT' ? `1` : 'unset',
}));

const Divider14: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: data.currentVariant === 'Property1ReactPageM' ? 'unset' : `1px`,
  width: `298px`,
  margin:
    data.currentVariant === 'Property1ReactPageM' ? `0px` : `8px 0px 0px 0px`,
  flexGrow: data.currentVariant === 'Property1ReactPageM' ? `1` : 'unset',
}));

const Divider15: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  flexGrow: `1`,
  height: `1px`,
  margin: `0px`,
});

const ImportYourDifferen8: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageM' ? `8px 0px 0px 0px` : `0px`,
}));

const Divider16: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `6px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
  overflow: `hidden`,
});

const Divider17: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Divider18: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  flexGrow: `1`,
  height: `1px`,
  margin: `0px`,
});

const ImportYourDifferen9: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
}));

const Divider19: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `6px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
  overflow: `hidden`,
});

const Divider20: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Divider21: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  flexGrow: `1`,
  height: `1px`,
  margin: `0px`,
});

const ImportYourDifferen10: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
}));

const Divider22: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `6px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
  overflow: `hidden`,
});

const Divider23: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Divider24: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  flexGrow: `1`,
  height: `1px`,
  margin: `0px`,
});

const ImportYourDifferen11: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
}));

const Divider25: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `6px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
  overflow: `hidden`,
});

const Divider26: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Divider27: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  flexGrow: `1`,
  height: `1px`,
  margin: `0px`,
});

const ImportYourDifferen12: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
}));

const Divider28: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `6px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
  overflow: `hidden`,
});

const Divider29: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Divider30: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  flexGrow: `1`,
  height: `1px`,
  margin: `0px`,
});

const ImportYourDifferen13: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `8px 0px 0px 0px`,
}));

const FaQs: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px 84px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px 36px`
      : `100px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const FaQs1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `stretch`,
  margin: `0px`,
}));

const Faq: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `44px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `44px`
      : `56px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: `62px`,
  textTransform: `none`,
  flexGrow:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `1`,
  margin: `0px`,
}));

const FaQs2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageM'
      ? `52px 0px 0px 0px`
      : `32px 0px 0px 0px`,
}));

const Row: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `0px`,
}));

const Frame126: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `0px`,
}));

const GameChangingFeatur1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `28px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `20px`
      : `30px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `32px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `34px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `516px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `303px`
      : `427px`,
  margin: `0px`,
}));

const NeoFromQuestAiEm11: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `24px` : `30px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1ReactPageM' ? `303px` : `572px`,
  margin: `6px 0px 0px 0px`,
}));

const Divider31: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  height: `1px`,
  margin: `30px 0px 0px 0px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `303px` : 'unset',
}));

const Row1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `30px 0px 0px 0px`,
}));

const Frame1261: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `0px`,
}));

const GameChangingFeatur2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `28px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `20px`
      : `30px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `32px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `34px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `516px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `280px`
      : `461px`,
  margin: `0px`,
}));

const NeoFromQuestAiEm12: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `24px` : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? `254px`
      : `572px`,
  margin: `6px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? `stretch` : 'unset',
}));

const Divider32: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  height: `1px`,
  margin: `30px 0px 0px 0px`,
  width: data.currentVariant === 'Property1ReactPageM' ? `303px` : 'unset',
}));

const Row2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `30px 0px 0px 0px`,
}));

const Frame1262: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? 'unset' : `stretch`,
  margin: `0px`,
}));

const GameChangingFeatur3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `28px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `20px`
      : `30px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `32px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `34px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1ReactPageM' ? `245px` : `516px`,
  margin: `0px`,
}));

const NeoFromQuestAiEm13: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `18px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1ReactPageM' ? `24px` : `30px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1ReactPageM' ? `303px` : `572px`,
  margin: `6px 0px 0px 0px`,
}));

const Divider33: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  alignSelf: `stretch`,
  height: `1px`,
  margin: `30px 0px 0px 0px`,
});

const CustomerQuote: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `120px 180px 80px 180px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `80px 180px 0px 180px`
      : `60px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Box: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/ReactApps_box.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  border:
    data.currentVariant === 'Property1ReactPageT'
      ? `1.4635294675827026px solid rgba(46, 46, 46, 1)`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0.8447059392929077px solid rgba(46, 46, 46, 1)`
      : `2px solid rgba(46, 46, 46, 1)`,
  boxSizing: `border-box`,
  borderRadius:
    data.currentVariant === 'Property1ReactPageT'
      ? `8.781176567077637px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `5.068235397338867px`
      : `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `21.95294189453125px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `30px 0px 0px 0px`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `314.66px`
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `430px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `622px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `359px`
      : `850px`,
  margin: `0px`,
  overflow: `hidden`,
}));

const Text: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `29.27058982849121px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `18px 0px 18px 18px`
      : `40px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `411.25px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `167px`
      : `562px`,
  margin: `0px`,
}));

const LeftSide: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Subtitle6: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon9: any = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const CustomerLove: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px 0px 0px 5.8541178703308105px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px 0px 0px 3.378823757171631px`
      : `0px 0px 0px 8px`,
}));

const CustomerQuote1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px 0px 14.635294914245605px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px 0px 8.447059631347656px 0px`
      : `0px 0px 20px 0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `14.635294914245605px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `8.447059631347656px 0px 0px 0px`
      : `20px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? `stretch` : 'unset',
}));

const Quote: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'Property1ReactPageM' ? `700` : `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `12px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `10px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `17.562353134155273px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `24px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `352.71px`
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `482px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? `stretch` : 'unset',
}));

const Company: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `20.489412307739258px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `14px 0px 0px 0px`
      : `28px 0px 0px 0px`,
  width: data.currentVariant === 'Property1ReactPageT' ? `293px` : 'unset',
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? `stretch` : 'unset',
}));

const EnctrLogo: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `19.03px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `15px`
      : `26px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `79.76px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `62.88px`
      : `109px`,
  margin: `0px`,
}));

const Name: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `13.171765327453613px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `8px 0px 0px 0px`
      : `18px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const FullName: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `12px`
      : `23px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `17px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `9.811897277832031px`
      : `24px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `176.36px`
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `241px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? `stretch` : 'unset',
}));

const Title1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(196, 196, 196, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `12px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `9px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `-0.10000000149011612px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `17px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `12px`
      : `24px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `241px`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `4.390588283538818px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `4px 0px 0px 0px`
      : `6px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? `stretch`
      : data.currentVariant === 'Property1ReactPageM'
      ? `stretch`
      : 'unset',
}));

const LearnMore2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `20.489412307739258px 0px 0px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `14px 0px 0px 0px`
      : `28px 0px 0px 0px`,
}));

const About1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `12px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `12px`
      : `18px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `17px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `12px`
      : `24px`,
  textTransform: `none`,
  margin: `0px`,
}));

const Link3: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `11.999999046325684px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `12px`
      : `18px`,
  letterSpacing:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `0.09090909361839294px`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `17px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `12px`
      : `24px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px 0px 0px 3.6588237285614014px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px 0px 0px 2.111764907836914px`
      : `0px 0px 0px 5px`,
}));

const RightSide: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `flex-end`,
  padding:
    data.currentVariant === 'Property1ReactPageM' ? `96px 0px 0px 0px` : `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `292.71px`
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `400px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? `stretch` : 'unset',
}));

const Luka1: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `254.65px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `187.89px`
      : `348px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `269.29px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `192px`
      : `368px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageM' ? `stretch` : 'unset',
  flexGrow: data.currentVariant === 'Property1ReactPageM' ? `1` : 'unset',
}));

const ProductHunt: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `10px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `10px 180px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT'
      ? 'unset'
      : data.currentVariant === 'Property1ReactPageM'
      ? 'unset'
      : `stretch`,
  margin: `34px 0px 0px 0px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `622px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `359px`
      : 'unset',
}));

const PhImage: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/ReactApps_PH_image.png)`,
  backgroundPosition: `center`,
  backgroundSize: `contain`,
  backgroundRepeat: `no-repeat`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  height:
    data.currentVariant === 'Property1ReactPageT'
      ? `113px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `74px`
      : `135px`,
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `428px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `239px`
      : `612px`,
  margin: `0px`,
  overflow: `hidden`,
}));

const DiscoverSec: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1ReactPageT'
      ? `flex-start`
      : data.currentVariant === 'Property1ReactPageM'
      ? `flex-start`
      : `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `70px 84px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `70px 30px`
      : `70px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame127: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `0px`
      : `0px 280px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  minWidth:
    data.currentVariant === 'Property1ReactPageT'
      ? `unset`
      : data.currentVariant === 'Property1ReactPageM'
      ? `unset`
      : `796px`,
}));

const Subtitle7: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon10: any = styled('img')({
  height: `14px`,
  width: `12.95px`,
  margin: `0px`,
});

const NeoFromQuestAiEm14: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: `385.7px`,
  margin: `0px 0px 0px 6px`,
});

const DiscoverTheSpan1: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `54px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `66px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `52px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `62px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const DiscoverTheSpan2: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `54px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `66px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `52px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `62px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const DiscoverTheSpan3: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `54px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `66px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `52px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `62px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const DiscoverThe: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `54px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `66px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `52px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px`
      : `62px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `18px 0px 0px 0px`,
}));

const ImportYourDifferen14: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `500`
      : data.currentVariant === 'Property1ReactPageM'
      ? `500`
      : `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'Property1ReactPageT' ? 'unset' : `stretch`,
  margin: `18px 0px 0px 0px`,
  width: data.currentVariant === 'Property1ReactPageT' ? `473px` : 'unset',
}));

const LearnMore3: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `18px 0px 0px 0px`,
});

const About2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `500`
      : data.currentVariant === 'Property1ReactPageM'
      ? `500`
      : `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  margin: `0px`,
}));

const Link4: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `500`
      : data.currentVariant === 'Property1ReactPageM'
      ? `500`
      : `600`,
  fontSize:
    data.currentVariant === 'Property1ReactPageT'
      ? `16px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  lineHeight:
    data.currentVariant === 'Property1ReactPageT'
      ? `26px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 5px`,
}));

const JoinUs: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1ReactPageT'
      ? `30px 0px 100px 0px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `30px 0px 100px 0px`
      : `80px 0px 160px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const JoinUsOnOurMissi: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `38px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight: `40px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1ReactPageM' ? `249px` : `383px`,
  margin: `0px`,
}));

const ButtonOutlined3: any = styled(Button)({
  margin: `25px 0px 0px 0px`,
});

const Footer1: any = styled(Footer, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  width:
    data.currentVariant === 'Property1ReactPageT'
      ? `768px`
      : data.currentVariant === 'Property1ReactPageM'
      ? `375px`
      : `1440px`,
  margin: `0px`,
}));

function ReactApps(props: ReactAppsProps): JSX.Element {
  const { data } = useReactApps();

  return (
    <Property1ReactPageD data={data}>
      <Navbar1 />
      {!(data.currentVariant === 'Property1ReactPageT') &&
        !(data.currentVariant === 'Property1ReactPageM') && (
          <HeroDesktop data={data}>
            <HeroAll data={data}>
              <ActionsIcon
                data={data}
                src={`assets/images/ReactApps_Actions_Icon.png`}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <HeroContent>
                <HeroTitle>
                  <TakeDesignToLaunc data={data}>
                    {`Build React Apps`}
                  </TakeDesignToLaunc>
                  <HeroLine data={data}>
                    <TakeDesignToLaunc1 data={data}>
                      {`faster`}
                    </TakeDesignToLaunc1>
                    <TakeDesignToLaunc2 data={data}>
                      {`than ever`}
                    </TakeDesignToLaunc2>
                  </HeroLine>
                </HeroTitle>
                <HeroSub data={data}>
                  <NeoFromQuestAiEm data={data}>
                    {data.currentVariant === 'Property1ReactPageT'
                      ? `Build as fast as your designer can envision them, with clean and efficient code - as if you hand coded them.`
                      : data.currentVariant === 'Property1ReactPageM'
                      ? `Build as fast as your designer can envision them, with clean and efficient code - as if you hand coded them.`
                      : `Build as fast as your designer can envision them, with clean and efficient code — as if you hand-coded them.`}
                  </NeoFromQuestAiEm>
                  <Link href="/pricing">
                    <ButtonOutlined
                      variant="outlined"
                      size="large"
                      color="primary"
                      data={data}
                    >
                      {' '}
                      Sign Up Now{' '}
                    </ButtonOutlined>
                  </Link>
                </HeroSub>
              </HeroContent>
            </HeroAll>
          </HeroDesktop>
        )}
      {(data.currentVariant === 'Property1ReactPageT' ||
        data.currentVariant === 'Property1ReactPageM') && (
        <HeroMobileTablet data={data}>
          <HeroAll1>
            <ActionsIcon1
              data={data}
              src={`assets/images/ReactApps_Actions_Icon_1.png`}
              loading="lazy"
              alt={'Actions Icon'}
            />
            <HeroContent1 data={data}>
              <HeroTitle1>
                <TakeDesignToLaunc3 data={data}>
                  {`Build React Apps`}
                </TakeDesignToLaunc3>
                <HeroLine1 data={data}>
                  <TakeDesignToLaunc4 data={data}>
                    {`faster`}
                  </TakeDesignToLaunc4>
                  <TakeDesignToLaunc5 data={data}>
                    {`than ever`}
                  </TakeDesignToLaunc5>
                </HeroLine1>
              </HeroTitle1>
              <HeroSub1 data={data}>
                <NeoFromQuestAiEm1 data={data}>
                  {data.currentVariant === 'Property1ReactPageT'
                    ? `Build as fast as your designer can envision them, with clean and efficient code — as if you hand-coded them.`
                    : data.currentVariant === 'Property1ReactPageM'
                    ? `Build as fast as your designer can envision them, with clean and efficient code — as if you hand-coded them.`
                    : `Build as fast as your designer can envision them, with clean and efficient code - as if you hand coded them.`}
                </NeoFromQuestAiEm1>
                <ButtonOutlined1
                  variant="outlined"
                  size="large"
                  color="primary"
                  data={data}
                >
                  {' '}
                  Sign Up Now{' '}
                </ButtonOutlined1>
              </HeroSub1>
            </HeroContent1>
          </HeroAll1>
        </HeroMobileTablet>
      )}
      <Sec2 data={data}>
        <Sec2Sub data={data}>
          <BuildWithTheTools data={data}>
            <Frame167 data={data}>
              <Title data={data}>
                <TitleSpan1 data={data}>{`Build`}</TitleSpan1>
                <TitleSpan2
                  data={data}
                >{` with the tools you love`}</TitleSpan2>
              </Title>
              <SimplyBring data={data}>
                {`Simply bring your custom Figma designs and design system and generate React components based on Material UI automatically. `}
              </SimplyBring>
            </Frame167>
            <Link href="/pricing">
              <ButtonOutlined2 variant="outlined" size="large" color="primary">
                {' '}
                Sign Up Now{' '}
              </ButtonOutlined2>
            </Link>
          </BuildWithTheTools>
          <FigmaToReactWithMui
            data={data}
            src={`assets/images/ReactApps_Figma_to_React_with_MUI.png`}
            loading="lazy"
            alt={'Figma to React with MUI'}
          />
        </Sec2Sub>
      </Sec2>
      <SecStats data={data}>
        <Divider></Divider>
        <BuildBoldPoints data={data}>
          <Stat1 data={data}>
            <StatIcon
              data={data}
              src={`assets/images/ReactApps_stat_icon.png`}
              loading="lazy"
              alt={'stat_icon'}
            />
            <Txt>
              <StatNum1 data={data}>{`42,214,612`}</StatNum1>
              <StatDesc1 data={data}>{`Lines of code generated`}</StatDesc1>
            </Txt>
          </Stat1>
          <Stat2 data={data}>
            <StatIcon1
              data={data}
              src={`assets/images/ReactApps_stat_icon_1.png`}
              loading="lazy"
              alt={'stat_icon'}
            />
            <Txt1>
              <StatNum2 data={data}>{`153,549`}</StatNum2>
              <StatDesc2 data={data}>{`Projects Built`}</StatDesc2>
            </Txt1>
          </Stat2>
          <Stat3 data={data}>
            <StatIcon2
              data={data}
              src={`assets/images/ReactApps_stat_icon_2.png`}
              loading="lazy"
              alt={'stat_icon'}
            />
            <Txt2>
              <StatNum3 data={data}>{`28,200`}</StatNum3>
              <StatDesc3 data={data}>{`Plugin Users`}</StatDesc3>
            </Txt2>
          </Stat3>
        </BuildBoldPoints>
        <Divider1 data={data}></Divider1>
      </SecStats>
      <Video1 data={data}>
        <Subtitle data={data}>
          <ActionsIcon2
            src={`assets/images/ReactApps_Actions_Icon_2.png`}
            loading="lazy"
            alt={'Actions Icon'}
          />
          <NeoFromQuestAiEm2>{`SEE QUEST IN ACTION`}</NeoFromQuestAiEm2>
        </Subtitle>
        <Vid data={data}>
          <Video2 data={data} />
        </Vid>
      </Video1>
      <Sec4 data={data}>
        <Sec4Text data={data}>
          <Subtitle1>
            <ActionsIcon3
              src={`assets/images/ReactApps_Actions_Icon_3.png`}
              loading="lazy"
              alt={'Actions Icon'}
            />
            <NeoFromQuestAiEm3>{`Easy YET Flexible`}</NeoFromQuestAiEm3>
          </Subtitle1>
          <GenerateTitle data={data}>
            <GenerateTitleSpan1
              data={data}
            >{`Generate custom `}</GenerateTitleSpan1>
            <GenerateTitleSpan2 data={data}>{`React `}</GenerateTitleSpan2>
            <GenerateTitleSpan3 data={data}>{`components`}</GenerateTitleSpan3>
          </GenerateTitle>
          <NeoFromQuestAiEm4 data={data}>
            {`Create fully functional custom components based on your own Figma designs. Create states using variants. Set up props & bindings and export clean React code.`}
          </NeoFromQuestAiEm4>
          <Frame164 data={data}>
            <Link1>
              <Link2
                href={
                  'https://www.figma.com/community/file/1070813315756986339/Quest-Components'
                }
                underline="hover"
                data={data}
              >
                Get started
              </Link2>
              <With100 data={data}>{`with 150+ `}</With100>
            </Link1>
            <ReactComponents data={data}>
              {`React Components made in Figma.`}
            </ReactComponents>
          </Frame164>
        </Sec4Text>
        <Sec4Image data={data}></Sec4Image>
      </Sec4>
      <Sec5 data={data}>
        <Sec5Text data={data}>
          <Frame124>
            <ActionsIcon4
              src={`assets/images/ReactApps_Actions_Icon_4.png`}
              loading="lazy"
              alt={'Actions Icon'}
            />
            <NeoFromQuestAiEm5>{`READY for USe`}</NeoFromQuestAiEm5>
          </Frame124>
          <Frame165 data={data}>
            <TakeDesignToLaunc6 data={data}>
              <TakeDesignToLaunc6Span1
                data={data}
              >{`Export `}</TakeDesignToLaunc6Span1>
              <TakeDesignToLaunc6Span2
                data={data}
              >{`clean`}</TakeDesignToLaunc6Span2>
              <TakeDesignToLaunc6Span3
                data={data}
              >{` `}</TakeDesignToLaunc6Span3>
              <TakeDesignToLaunc6Span4
                data={data}
              >{`code`}</TakeDesignToLaunc6Span4>
            </TakeDesignToLaunc6>
            <NeoFromQuestAiEm6 data={data}>
              {data.currentVariant === 'Property1ReactPageT'
                ? `Clean and efficient code — as if it was hand-coded by a developer. Generated code is production-ready and can be immediately deployed using your existing CI/CD pipeline.`
                : data.currentVariant === 'Property1ReactPageM'
                ? `Clean and efficient code — as if it was hand-coded by a developer. Generated code is production-ready and can be immediately deployed using your existing CI/CD pipeline.`
                : `Clean and efficient code — as if it was hand-coded by a developer. Generated code is production-ready and can be immediately deployed using your existing CI/CD pipeline. Export as either Javascript or Typescript.`}
            </NeoFromQuestAiEm6>
          </Frame165>
          <TsAndJs
            data={data}
            src={`assets/images/ReactApps_ts_and_js.png`}
            loading="lazy"
            alt={'ts and js'}
          />
        </Sec5Text>
        <CodeImg data={data}></CodeImg>
      </Sec5>
      <Sec6 data={data}>
        <IterateText data={data}>
          <Subtitle2>
            <ActionsIcon5
              src={`assets/images/ReactApps_Actions_Icon_5.png`}
              loading="lazy"
              alt={'Actions Icon'}
            />
            <NeoFromQuestAiEm7>{`FASTER INNOVATion`}</NeoFromQuestAiEm7>
          </Subtitle2>
          <TakeDesignToLaunc7 data={data}>
            <TakeDesignToLaunc7Span1
              data={data}
            >{`Iterate`}</TakeDesignToLaunc7Span1>
            <TakeDesignToLaunc7Span2
              data={data}
            >{` rapidly`}</TakeDesignToLaunc7Span2>
          </TakeDesignToLaunc7>
          <NeoFromQuestAiEm8 data={data}>
            {`Your designers and developers can iterate independently. Quest seamlessly brings it all together without any conflicts. For example, if your designer has 3 different ideas for variations, they can build all 3 without any developer involvement.`}
          </NeoFromQuestAiEm8>
        </IterateText>
      </Sec6>
      <SecHow data={data}>
        <Sec2Centered data={data}>
          <Logos
            data={data}
            src={`assets/images/ReactApps_logos.png`}
            loading="lazy"
            alt={'logos'}
          />
          <Titles data={data}>
            <Subtitle3>
              <ActionsIcon6
                src={`assets/images/ReactApps_Actions_Icon_6.png`}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <EasyYetFlexible>{`CONVERT DESIGN INTO CODE`}</EasyYetFlexible>
            </Subtitle3>
            <GenerateCustomReactC data={data}>
              {`How does it work?`}
            </GenerateCustomReactC>
          </Titles>
          <CreateFully data={data}>
            {`Convert custom Figma designs into beautiful React code and go to market faster than ever thought possible. `}
          </CreateFully>
          {!(data.currentVariant === 'Property1ReactPageT') &&
            !(data.currentVariant === 'Property1ReactPageM') && (
              <HowItWorksD1 data={data} />
            )}
          {data.currentVariant === 'Property1ReactPageT' && (
            <HowItWorksT1 data={data} />
          )}
          {data.currentVariant === 'Property1ReactPageM' && (
            <HowItWorksM1 data={data} />
          )}
          <LearnMore data={data}>
            <LearnMore1 ref={'/features'} data={data}>
              {`Learn more`}
            </LearnMore1>
            <About data={data}>{`about our features.`}</About>
          </LearnMore>
        </Sec2Centered>
      </SecHow>
      <Sec7 data={data}>
        <ElevateYour data={data}>
          <Subtitle4>
            <ActionsIcon7
              src={`assets/images/ReactApps_Actions_Icon_7.png`}
              loading="lazy"
              alt={'Actions Icon'}
            />
            <Higher>{`HIGHER QUALITY`}</Higher>
          </Subtitle4>
          <ElevateYour1 data={data}>
            <ElevateYour1Span1 data={data}>{`Elevate`}</ElevateYour1Span1>
            <ElevateYour1Span2 data={data}>{` your product`}</ElevateYour1Span2>
          </ElevateYour1>
          <Eliminate data={data}>
            {`Eliminate the tedium and focus on what matters.`}
          </Eliminate>
        </ElevateYour>
        <Frame1241 data={data}>
          <FigmaToReactWithQues
            data={data}
            src={`assets/images/ReactApps_Figma_to_React_with_Quest.png`}
            loading="lazy"
            alt={'Figma to React with Quest'}
          />
          <Benefits data={data}>
            <Txt11 data={data}>
              <DesignToLiveHtml data={data}>
                {`Better than hand-coded`}
              </DesignToLiveHtml>
              <ImportYourDifferen data={data}>
                {`Generate code that’s clean and efficient, and as good or better than hand-coded.`}
              </ImportYourDifferen>
            </Txt11>
            <Txt21 data={data}>
              <DesignToLiveHtml1 data={data}>
                {`Iterate until it’s right`}
              </DesignToLiveHtml1>
              <ImportYourDifferen1 data={data}>
                {`By removing the back and forth between designer and developer, you can ship high-quality designs faster.`}
              </ImportYourDifferen1>
            </Txt21>
            <Txt3 data={data}>
              <DesignToLiveHtml2 data={data}>
                {`Pixel perfect`}
              </DesignToLiveHtml2>
              <ImportYourDifferen2 data={data}>
                {`Build exactly what your designer envisions with pixel-perfect conversion of your Figma designs.`}
              </ImportYourDifferen2>
            </Txt3>
          </Benefits>
        </Frame1241>
      </Sec7>
      <Sec8 data={data}>
        <Sec8Text data={data}>
          <Subtitle5>
            <ActionsIcon8
              src={`assets/images/ReactApps_Actions_Icon_8.png`}
              loading="lazy"
              alt={'Actions Icon'}
            />
            <NeoFromQuestAiEm9>{`fit your workflow`}</NeoFromQuestAiEm9>
          </Subtitle5>
          <TakeDesignToLaunc8 data={data}>
            <TakeDesignToLaunc8Span1
              data={data}
            >{`Customize your `}</TakeDesignToLaunc8Span1>
            <TakeDesignToLaunc8Span2
              data={data}
            >{`Material UI `}</TakeDesignToLaunc8Span2>
            <TakeDesignToLaunc8Span3
              data={data}
            >{`based design system`}</TakeDesignToLaunc8Span3>
          </TakeDesignToLaunc8>
          <NeoFromQuestAiEm10 data={data}>
            {`Completely & easily style Material UI components in Figma based on our Quest Design Kit. Design custom components using the design system to export React code.`}
          </NeoFromQuestAiEm10>
        </Sec8Text>
        <FigmaToReactComponen
          data={data}
          src={`assets/images/ReactApps_figma_to_react_components_with_quest.png`}
          loading="lazy"
          alt={'figma to react components with quest'}
        />
      </Sec8>
      <MoreFeatures data={data}>
        <GameChangingFeatur>{`Features`}</GameChangingFeatur>
        <Frame106 data={data}>
          <Frame1061 data={data}>
            <ImportYourDifferen3 data={data}>
              {`Convert custom Figma designs into React`}
            </ImportYourDifferen3>
            <Divider2>
              <Divider3>
                <Divider4></Divider4>
              </Divider3>
            </Divider2>
            <ImportYourDifferen4 data={data}>
              {`Fully customize your Design System in Figma`}
            </ImportYourDifferen4>
            <Divider5>
              <Divider6>
                <Divider7></Divider7>
              </Divider6>
            </Divider5>
            <ImportYourDifferen5 data={data}>
              {`Export Figma to see how the working React component will look`}
            </ImportYourDifferen5>
            <Divider8>
              <Divider9>
                <Divider10></Divider10>
              </Divider9>
            </Divider8>
            <ImportYourDifferen6 data={data}>
              {`Support for props, bindings & features`}
            </ImportYourDifferen6>
            <Divider11>
              <Divider12>
                <Divider13></Divider13>
              </Divider12>
            </Divider11>
            <ImportYourDifferen7 data={data}>
              {`Resync design without losing features, props or bindings`}
            </ImportYourDifferen7>
          </Frame1061>
          <Frame1062 data={data}>
            {data.currentVariant === 'Property1ReactPageM' && (
              <Divider14 data={data}>
                <Divider15></Divider15>
              </Divider14>
            )}
            <ImportYourDifferen8 data={data}>
              {`Create states using variants in Figma`}
            </ImportYourDifferen8>
            <Divider16>
              <Divider17>
                <Divider18></Divider18>
              </Divider17>
            </Divider16>
            <ImportYourDifferen9 data={data}>
              {`Support for styled components and emotion`}
            </ImportYourDifferen9>
            <Divider19>
              <Divider20>
                <Divider21></Divider21>
              </Divider20>
            </Divider19>
            <ImportYourDifferen10 data={data}>
              {`Conditional bindings`}
            </ImportYourDifferen10>
            <Divider22>
              <Divider23>
                <Divider24></Divider24>
              </Divider23>
            </Divider22>
            <ImportYourDifferen11 data={data}>
              {`Support for nested components`}
            </ImportYourDifferen11>
            <Divider25>
              <Divider26>
                <Divider27></Divider27>
              </Divider26>
            </Divider25>
            <ImportYourDifferen12 data={data}>
              {`Lists, Dialogs and Popovers`}
            </ImportYourDifferen12>
            <Divider28>
              <Divider29>
                <Divider30></Divider30>
              </Divider29>
            </Divider28>
            <ImportYourDifferen13 data={data}>
              {`Full support for MUI components & bindings`}
            </ImportYourDifferen13>
          </Frame1062>
        </Frame106>
      </MoreFeatures>
      <FaQs data={data}>
        <FaQs1 data={data}>
          <Faq data={data}>{`FAQs`}</Faq>
        </FaQs1>
        <FaQs2 data={data}>
          <Row data={data}>
            <Frame126 data={data}>
              <GameChangingFeatur1 data={data}>
                {`Who owns the code generated by Quest?`}
              </GameChangingFeatur1>
              <NeoFromQuestAiEm11 data={data}>
                {`You do. Export it, share it, deploy it as you want. `}
              </NeoFromQuestAiEm11>
            </Frame126>
            <Divider31 data={data}></Divider31>
          </Row>
          <Row1 data={data}>
            <Frame1261 data={data}>
              <GameChangingFeatur2 data={data}>
                {`How secure is the code generated by Quest?`}
              </GameChangingFeatur2>
              <NeoFromQuestAiEm12 data={data}>
                {`Quest generates clean code to the latest standards. You can then deploy it to your security standards and specifications.`}
              </NeoFromQuestAiEm12>
            </Frame1261>
            <Divider32 data={data}></Divider32>
          </Row1>
          <Row2 data={data}>
            <Frame1262 data={data}>
              <GameChangingFeatur3 data={data}>
                {`How often can I export my code?`}
              </GameChangingFeatur3>
              <NeoFromQuestAiEm13 data={data}>
                {`You can export your code as often as you want. `}
              </NeoFromQuestAiEm13>
            </Frame1262>
            <Divider33></Divider33>
          </Row2>
        </FaQs2>
      </FaQs>
      <CustomerQuote data={data}>
        <Box data={data}>
          <Text data={data}>
            <LeftSide>
              <Subtitle6>
                <ActionsIcon9
                  src={`assets/images/ReactApps_Actions_Icon_9.png`}
                  loading="lazy"
                  alt={'Actions Icon'}
                />
                <CustomerLove data={data}>{`CUSTOMER LOVE`}</CustomerLove>
              </Subtitle6>
              <CustomerQuote1 data={data}>
                <Quote data={data}>
                  {`“Quest allows you to generate pixel perfect code from Figma designs in the fraction of the time that you would previously. Don’t even know why this wasn’t created before. “`}
                </Quote>
                <Company data={data}>
                  <EnctrLogo
                    data={data}
                    src={`assets/images/ReactApps_enctr_logo.png`}
                    loading="lazy"
                    alt={'enctr logo'}
                  />
                  <Name data={data}>
                    <FullName data={data}>{`Luka Antolic-Soban`}</FullName>
                    <Title1 data={data}>
                      {`CEO of Entcr (a web3 company)`}
                    </Title1>
                  </Name>
                </Company>
                <LearnMore2 data={data}>
                  <About1 data={data}>{`Watch the`}</About1>
                  <Link3
                    href={'https://www.youtube.com/watch?v=QJVirLX4mHs'}
                    underline="hover"
                    data={data}
                  >
                    Success Story
                  </Link3>
                </LearnMore2>
              </CustomerQuote1>
            </LeftSide>
          </Text>
          <RightSide data={data}>
            <Luka1
              data={data}
              src={`assets/images/ReactApps_Luka_1.png`}
              loading="lazy"
              alt={'Luka 1'}
            />
          </RightSide>
        </Box>
        <ProductHunt data={data}>
          <PhImage data={data}></PhImage>
        </ProductHunt>
      </CustomerQuote>
      <DiscoverSec data={data}>
        <Frame127 data={data}>
          <Subtitle7>
            <ActionsIcon10
              src={`assets/images/ReactApps_Actions_Icon_10.png`}
              loading="lazy"
              alt={'Actions Icon'}
            />
            <NeoFromQuestAiEm14>{`JOIN THE FUTURE`}</NeoFromQuestAiEm14>
          </Subtitle7>
          <DiscoverThe data={data}>
            <DiscoverTheSpan1 data={data}>{`Discover the `}</DiscoverTheSpan1>
            <DiscoverTheSpan2 data={data}>{`future`}</DiscoverTheSpan2>
            <DiscoverTheSpan3
              data={data}
            >{` of product development`}</DiscoverTheSpan3>
          </DiscoverThe>
          <ImportYourDifferen14 data={data}>
            {`The low-code movement is helping companies of all sizes remove redundant work. Quest enables you to build bold software products, faster and true to design.`}
          </ImportYourDifferen14>
          <LearnMore3>
            <About2 data={data}>
              {data.currentVariant === 'Property1ReactPageT'
                ? `Check out our `
                : `Check out our`}
            </About2>
            <Link href={'/samples'} passHref>
              <Link4 underline="hover" data={data}>
                sample projects.
              </Link4>
            </Link>
          </LearnMore3>
        </Frame127>
      </DiscoverSec>
      <JoinUs data={data}>
        <JoinUsOnOurMissi data={data}>{`Build better`}</JoinUsOnOurMissi>
        <Link href="/pricing">
          <ButtonOutlined3 variant="outlined" size="large" color="primary">
            {' '}
            Sign Up Now{' '}
          </ButtonOutlined3>
        </Link>
      </JoinUs>
      <Footer1 data={data} />
    </Property1ReactPageD>
  );
}

export default ReactApps;
