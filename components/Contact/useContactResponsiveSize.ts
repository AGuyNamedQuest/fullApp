/**********************************************************************
 *
 *   Responsiveness hook generated by Quest
 *
 *   Responsive Logic for the component goes in this hook
 *   If you want to customize the min/max values for the breakpoints, open the component on Quest Editor.
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';

const useContactResponsiveSize = () => {
  const [variant, setVariant] = React.useState<string>(
    'Property1ContactDesktop'
  );

  React.useEffect(() => {
    const handlerProperty1ContactMobile = (e) =>
      setVariant((size: string) =>
        e.matches ? 'Property1ContactMobile' : size
      );
    const Property1ContactMobileSize = window.matchMedia('(max-width: 572px)');
    setVariant((size: string) =>
      Property1ContactMobileSize.matches ? 'Property1ContactMobile' : size
    );
    Property1ContactMobileSize.addEventListener(
      'change',
      handlerProperty1ContactMobile
    );

    const handlerProperty1ContactTablet = (e) =>
      setVariant((size: string) =>
        e.matches ? 'Property1ContactTablet' : size
      );
    const Property1ContactTabletSize = window.matchMedia(
      '(min-width: 572px) and (max-width: 1104px)'
    );
    setVariant((size: string) =>
      Property1ContactTabletSize.matches ? 'Property1ContactTablet' : size
    );
    Property1ContactTabletSize.addEventListener(
      'change',
      handlerProperty1ContactTablet
    );

    const handlerProperty1ContactDesktop = (e) =>
      setVariant((size: string) =>
        e.matches ? 'Property1ContactDesktop' : size
      );
    const Property1ContactDesktopSize = window.matchMedia(
      '(min-width: 1104px)'
    );
    setVariant((size: string) =>
      Property1ContactDesktopSize.matches ? 'Property1ContactDesktop' : size
    );
    Property1ContactDesktopSize.addEventListener(
      'change',
      handlerProperty1ContactDesktop
    );
  }, []);

  return variant;
};

export default useContactResponsiveSize;
