/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button, Link } from '@mui/material';
import { styled } from '@mui/material/styles';
import Navbar from 'components/Navbar/Navbar';
import SwitchMonthlyAnnual from 'components/SwitchMonthlyAnnual/SwitchMonthlyAnnual';
import Footer from 'components/Footer/Footer';
import { PricingProps } from 'types';
import usePricing from 'components/Pricing/usePricing';

const ScreenDesktop: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(23, 23, 23, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'screentablet'
      ? `center`
      : data.currentVariant === 'screenmobile'
      ? `center`
      : `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: 'auto',
}));

const Navbar1: any = styled(Navbar, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  position: `sticky`,
  top: `0`,
  zIndex: `3000`,
}));

const Page: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'screentablet'
      ? `68px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `58px 0px 0px 0px`
      : `0px`,
}));

const HeroDesktop: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/Pricing_hero_desktop.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `80px 0px 0px 5px`
      : data.currentVariant === 'screenmobile'
      ? `80px 0px 0px 5px`
      : `50px 180px 50px 129px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
}));

const HeroAll: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ActionsIcon: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'screentablet'
      ? `20px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `36px`,
  width:
    data.currentVariant === 'screentablet'
      ? `20px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `36px`,
  margin: `0px`,
}));

const HeroContent: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px 0px 0px 14px`,
});

const HeroTitle: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.currentVariant === 'screenmobile' ? `0px 20px 0px 0px` : `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const TakeDesignToLaunc: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `48px`
      : data.currentVariant === 'screenmobile'
      ? `36px`
      : `68px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-1px`
      : data.currentVariant === 'screenmobile'
      ? `-1px`
      : `-2px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `42px`
      : data.currentVariant === 'screenmobile'
      ? `36px`
      : `60px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'screentablet'
      ? `516px`
      : data.currentVariant === 'screenmobile'
      ? `228px`
      : `825px`,
  margin: `0px`,
}));

const HeroSub: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'screentablet'
      ? `row`
      : data.currentVariant === 'screenmobile'
      ? `row`
      : `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'screentablet'
      ? `center`
      : data.currentVariant === 'screenmobile'
      ? `center`
      : `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'screentablet'
      ? `12px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `12px 0px 0px 0px`
      : `23px 0px 0px 0px`,
}));

const PricingMsg: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `16px`
      : data.currentVariant === 'screenmobile'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `26px`
      : data.currentVariant === 'screenmobile'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? `296px`
      : `661px`,
  margin: `0px`,
  flexGrow: data.currentVariant === 'screentablet' ? `1` : 'unset',
}));

const BuildReactTitle: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 40px`
      : data.currentVariant === 'screenmobile'
      ? `0px 32px`
      : `0px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'screentablet'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `30px 0px 0px 0px`
      : `40px 0px 0px 0px`,
}));

const Frame127: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const BuildReactApps: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `40px`
      : data.currentVariant === 'screenmobile'
      ? `34px`
      : `42px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `36px`
      : data.currentVariant === 'screenmobile'
      ? `36px`
      : `40px`,
  textTransform: `none`,
  margin: `0px`,
  width: data.currentVariant === 'screentablet' ? `421px` : 'unset',
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const MonthlyOrAnnual: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'screentablet'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `30px 0px 0px 0px`
      : `40px 0px 0px 0px`,
}));

const SignupSwitch: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 404px 0px 40px`
      : data.currentVariant === 'screenmobile'
      ? `0px 404px 0px 40px`
      : `0px 180px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? `375px`
      : `1440px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screentablet' ? `stretch` : 'unset',
  height: data.currentVariant === 'screenmobile' ? `50px` : 'unset',
}));

const SwitchMonthlyAnnual1: any = styled(SwitchMonthlyAnnual)(
  ({ theme }: any) => ({
    margin: `0px`,
  })
);

const PriceCards: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'screenmobile' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 40px`
      : data.currentVariant === 'screenmobile'
      ? `0px 32px`
      : `0px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `20px 0px 0px 0px`,
  minWidth:
    data.currentVariant === 'screentablet'
      ? `unset`
      : data.currentVariant === 'screenmobile'
      ? `unset`
      : `1408px`,
}));

const PriceCard: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  border: `2px solid rgba(255, 255, 255, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `20px`
      : data.currentVariant === 'screenmobile'
      ? `30px 30px 10px 30px`
      : `30px 40px`,
  flexGrow: data.currentVariant === 'screenmobile' ? 'unset' : `1`,
  height:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `370px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const Top: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `0px 0px 10px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
}));

const Chip: any = styled('div')({
  backgroundColor: `rgba(3, 195, 255, 1)`,
  borderRadius: `50px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 6px`,
  boxSizing: `border-box`,
  height: `22px`,
  margin: `0px`,
});

const Frame1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 5px`,
  boxSizing: `border-box`,
  height: `24px`,
  margin: `0px`,
});

const Text: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `3px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Pro: any = styled('div')({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `0.5px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px`,
});

const Pricing1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `24px 0px 0px 0px`,
});

const BigPrice: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `800`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `42px`
      : data.currentVariant === 'screenmobile'
      ? `42px`
      : `54px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.42px`
      : data.currentVariant === 'screenmobile'
      ? `-0.42px`
      : `-0.54px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `42px`
      : data.currentVariant === 'screenmobile'
      ? `38px`
      : `48px`,
  textTransform: `uppercase`,
  margin: `0px`,
}));

const UnderPrice: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screenmobile'
      ? `8px 0px 0px 0px`
      : `6px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
}));

const PerUser: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'screenmobile' ? `600` : `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `11px`
      : data.currentVariant === 'screenmobile'
      ? `12px`
      : `14px`,
  letterSpacing:
    data.currentVariant === 'screentablet' ? `-0.10000000149011612px` : `0px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `14px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `22px`,
  textTransform: `none`,
  margin: `0px`,
}));

const Trial: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: data.currentVariant === 'screentablet' ? `14px` : `16px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin: `0px`,
}));

const ButtonOutlined: any = styled(Button)({
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const Bullets: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 0px 6px 0px`
      : data.currentVariant === 'screenmobile'
      ? `0px 0px 26px 0px`
      : `0px`,
  boxSizing: `border-box`,
  margin: `12px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'screentablet'
      ? `stretch`
      : data.currentVariant === 'screenmobile'
      ? `stretch`
      : 'unset',
}));

const Apps: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `10px 0px 0px 0px`,
  boxSizing: `border-box`,
  width: data.currentVariant === 'screentablet' ? 'unset' : `212px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screentablet' ? `stretch` : 'unset',
}));

const Bullet1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Ellipse14: any = styled('img')({
  height: `6px`,
  width: `6px`,
  margin: `0px`,
});

const PerUser1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color:
    data.currentVariant === 'screentablet'
      ? `rgba(80, 80, 80, 1)`
      : data.currentVariant === 'screenmobile'
      ? `rgba(80, 80, 80, 1)`
      : `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.12px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `-0.16px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  margin: `0px 0px 0px 5px`,
}));

const Bullet2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'screentablet'
      ? `6px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `6px 0px 0px 0px`
      : `4px 0px 0px 0px`,
}));

const Ellipse141: any = styled('img')({
  height: `6px`,
  width: `6px`,
  margin: `0px`,
});

const PerUser2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color:
    data.currentVariant === 'screentablet'
      ? `rgba(80, 80, 80, 1)`
      : data.currentVariant === 'screenmobile'
      ? `rgba(80, 80, 80, 1)`
      : `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.12px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `-0.16px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  margin: `0px 0px 0px 5px`,
}));

const Bullet3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'screentablet'
      ? `6px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `6px 0px 0px 0px`
      : `4px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'screentablet' ? `stretch` : 'unset',
}));

const Ellipse142: any = styled('img')({
  height: `6px`,
  width: `6px`,
  margin: `0px`,
});

const PerUser3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color:
    data.currentVariant === 'screentablet'
      ? `rgba(80, 80, 80, 1)`
      : data.currentVariant === 'screenmobile'
      ? `rgba(80, 80, 80, 1)`
      : `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.12px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `-0.16px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  margin: `0px 0px 0px 5px`,
  flexGrow: data.currentVariant === 'screentablet' ? `1` : 'unset',
}));

const Divider: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(217, 217, 217, 1)`,
  height: `1px`,
  width:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `211px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `10px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 0px 0px 0px`
      : `12px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'screentablet'
      ? `stretch`
      : data.currentVariant === 'screenmobile'
      ? `stretch`
      : 'unset',
}));

const Bullets1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color:
    data.currentVariant === 'screentablet'
      ? `rgba(80, 80, 80, 1)`
      : data.currentVariant === 'screenmobile'
      ? `rgba(80, 80, 80, 1)`
      : `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `0.09090909361839294px`
      : data.currentVariant === 'screenmobile'
      ? `-0.10000000149011612px`
      : `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'screentablet' ? `18px` : `20px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? `216px`
      : `212px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `10px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 0px 0px 0px`
      : `12px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'screentablet' ? `stretch` : 'unset',
}));

const Bullets2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'screentablet' ? `18px` : `20px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `212px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `10px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 0px 0px 0px`
      : `12px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'screentablet'
      ? `stretch`
      : data.currentVariant === 'screenmobile'
      ? `stretch`
      : 'unset',
}));

const PriceCard1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  border: `2px solid rgba(255, 255, 255, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `20px`
      : data.currentVariant === 'screenmobile'
      ? `30px 30px 10px 30px`
      : `30px 40px`,
  flexGrow: data.currentVariant === 'screenmobile' ? 'unset' : `1`,
  height:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `370px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `0px 0px 0px 36px`
      : data.currentVariant === 'screenmobile'
      ? `36px 0px 0px 0px`
      : `0px 0px 0px 40px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const Top1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `0px 0px 10px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
}));

const Chip1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor:
    data.currentVariant === 'screentablet'
      ? `rgba(254, 136, 136, 1)`
      : data.currentVariant === 'screenmobile'
      ? `rgba(254, 136, 136, 1)`
      : `rgba(255, 136, 136, 1)`,
  borderRadius: `50px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 6px`,
  boxSizing: `border-box`,
  height: `22px`,
  margin: `0px`,
}));

const Frame11: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 5px`,
  boxSizing: `border-box`,
  height: `24px`,
  margin: `0px`,
});

const Text1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `3px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Team: any = styled('div')({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `0.5px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px`,
});

const Pricing2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `24px 0px 0px 0px`,
});

const BigPrice1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `800`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `42px`
      : data.currentVariant === 'screenmobile'
      ? `42px`
      : `54px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.42px`
      : data.currentVariant === 'screenmobile'
      ? `-0.42px`
      : `-0.54px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `42px`
      : data.currentVariant === 'screenmobile'
      ? `38px`
      : `48px`,
  textTransform: `uppercase`,
  margin: `0px`,
}));

const UnderPrice1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screenmobile'
      ? `8px 0px 0px 0px`
      : `6px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
}));

const PerUser4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'screenmobile' ? `600` : `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `11px`
      : data.currentVariant === 'screenmobile'
      ? `12px`
      : `14px`,
  letterSpacing:
    data.currentVariant === 'screentablet' ? `-0.10000000149011612px` : `0px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `14px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `22px`,
  textTransform: `none`,
  margin: `0px`,
}));

const Trial1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: data.currentVariant === 'screentablet' ? `14px` : `16px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin: `0px`,
}));

const ButtonOutlined1: any = styled(Button)({
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const Bullets3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 0px 6px 0px`
      : data.currentVariant === 'screenmobile'
      ? `0px 0px 26px 0px`
      : `0px`,
  boxSizing: `border-box`,
  margin: `12px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'screentablet'
      ? `stretch`
      : data.currentVariant === 'screenmobile'
      ? `stretch`
      : 'unset',
}));

const Apps1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `10px 0px 0px 0px`,
  boxSizing: `border-box`,
  width: data.currentVariant === 'screentablet' ? 'unset' : `212px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screentablet' ? `stretch` : 'unset',
}));

const Bullet11: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Ellipse143: any = styled('img')({
  height: `6px`,
  width: `6px`,
  margin: `0px`,
});

const PerUser5: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color:
    data.currentVariant === 'screentablet'
      ? `rgba(80, 80, 80, 1)`
      : data.currentVariant === 'screenmobile'
      ? `rgba(80, 80, 80, 1)`
      : `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.12px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `-0.16px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  margin: `0px 0px 0px 5px`,
}));

const Bullet21: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'screentablet'
      ? `6px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `6px 0px 0px 0px`
      : `4px 0px 0px 0px`,
}));

const Ellipse144: any = styled('img')({
  height: `6px`,
  width: `6px`,
  margin: `0px`,
});

const PerUser6: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color:
    data.currentVariant === 'screentablet'
      ? `rgba(80, 80, 80, 1)`
      : data.currentVariant === 'screenmobile'
      ? `rgba(80, 80, 80, 1)`
      : `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.12px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `-0.16px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  margin: `0px 0px 0px 5px`,
}));

const Bullet31: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'screentablet'
      ? `6px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `6px 0px 0px 0px`
      : `4px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'screentablet' ? `stretch` : 'unset',
}));

const Ellipse145: any = styled('img')({
  height: `6px`,
  width: `6px`,
  margin: `0px`,
});

const PerUser7: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color:
    data.currentVariant === 'screentablet'
      ? `rgba(80, 80, 80, 1)`
      : data.currentVariant === 'screenmobile'
      ? `rgba(80, 80, 80, 1)`
      : `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.12px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `-0.16px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  margin: `0px 0px 0px 5px`,
  flexGrow: data.currentVariant === 'screentablet' ? `1` : 'unset',
}));

const Divider1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(217, 217, 217, 1)`,
  height: `1px`,
  width:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `211px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `10px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 0px 0px 0px`
      : `12px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'screentablet'
      ? `stretch`
      : data.currentVariant === 'screenmobile'
      ? `stretch`
      : 'unset',
}));

const Bullets4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(80, 80, 80, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screenmobile' ? `0px` : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'screentablet' ? `18px` : `20px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `213px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `10px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 0px 0px 0px`
      : `12px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'screentablet'
      ? `stretch`
      : data.currentVariant === 'screenmobile'
      ? `stretch`
      : 'unset',
}));

const Bullets5: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'screentablet' ? `18px` : `20px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `213px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `10px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 0px 0px 0px`
      : `12px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'screentablet'
      ? `stretch`
      : data.currentVariant === 'screenmobile'
      ? `stretch`
      : 'unset',
}));

const PriceCard2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  border: `2px solid rgba(255, 255, 255, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `20px`
      : data.currentVariant === 'screenmobile'
      ? `30px 30px 10px 30px`
      : `30px 40px`,
  flexGrow: data.currentVariant === 'screenmobile' ? 'unset' : `1`,
  height:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `370px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `0px 0px 0px 36px`
      : data.currentVariant === 'screenmobile'
      ? `36px 0px 0px 0px`
      : `0px 0px 0px 40px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const Top2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `0px 0px 10px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
}));

const Chip2: any = styled('div')({
  backgroundColor: `rgba(128, 102, 255, 1)`,
  borderRadius: `50px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 6px`,
  boxSizing: `border-box`,
  height: `22px`,
  margin: `0px`,
});

const Frame12: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 5px`,
  boxSizing: `border-box`,
  height: `24px`,
  margin: `0px`,
});

const Text2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `3px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Enterprise: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing:
    data.currentVariant === 'screentablet' ? `-0.10000000149011612px` : `0.5px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px`,
}));

const Pricing3: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `24px 0px 0px 0px`,
});

const BigPrice2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `800`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `26px`
      : data.currentVariant === 'screenmobile'
      ? `30px`
      : `38px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.26px`
      : data.currentVariant === 'screenmobile'
      ? `-0.3px`
      : `-0.38px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `42px`
      : data.currentVariant === 'screenmobile'
      ? `38px`
      : `48px`,
  textTransform: `uppercase`,
  margin: `0px`,
}));

const UnderPrice2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screenmobile'
      ? `8px 0px 0px 0px`
      : `6px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
}));

const PerUser8: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'screenmobile' ? `600` : `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `11px`
      : data.currentVariant === 'screenmobile'
      ? `12px`
      : `14px`,
  letterSpacing:
    data.currentVariant === 'screenmobile' ? `-0.4000000059604645px` : `0px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `14px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `22px`,
  textTransform: `none`,
  margin: `0px`,
}));

const Trial2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: data.currentVariant === 'screentablet' ? `14px` : `16px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin: `0px`,
}));

const ButtonOutlined2: any = styled(Button)({
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const Bullets6: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 0px 6px 0px`
      : data.currentVariant === 'screenmobile'
      ? `0px 0px 26px 0px`
      : `0px`,
  boxSizing: `border-box`,
  margin: `12px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'screentablet'
      ? `stretch`
      : data.currentVariant === 'screenmobile'
      ? `stretch`
      : 'unset',
}));

const Apps2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `10px 0px 0px 0px`,
  boxSizing: `border-box`,
  width: data.currentVariant === 'screentablet' ? 'unset' : `212px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screentablet' ? `stretch` : 'unset',
}));

const Bullet12: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Ellipse146: any = styled('img')({
  height: `6px`,
  width: `6px`,
  margin: `0px`,
});

const PerUser9: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color:
    data.currentVariant === 'screentablet'
      ? `rgba(80, 80, 80, 1)`
      : data.currentVariant === 'screenmobile'
      ? `rgba(80, 80, 80, 1)`
      : `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.12px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `-0.16px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  margin: `0px 0px 0px 5px`,
}));

const Bullet22: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'screentablet'
      ? `6px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `6px 0px 0px 0px`
      : `4px 0px 0px 0px`,
}));

const Ellipse147: any = styled('img')({
  height: `6px`,
  width: `6px`,
  margin: `0px`,
});

const PerUser10: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color:
    data.currentVariant === 'screentablet'
      ? `rgba(80, 80, 80, 1)`
      : data.currentVariant === 'screenmobile'
      ? `rgba(80, 80, 80, 1)`
      : `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.12px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `-0.16px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  margin: `0px 0px 0px 5px`,
}));

const Bullet32: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'screentablet'
      ? `6px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `6px 0px 0px 0px`
      : `4px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'screentablet' ? `stretch` : 'unset',
}));

const Ellipse148: any = styled('img')({
  height: `6px`,
  width: `6px`,
  margin: `0px`,
});

const PerUser11: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color:
    data.currentVariant === 'screentablet'
      ? `rgba(80, 80, 80, 1)`
      : data.currentVariant === 'screenmobile'
      ? `rgba(80, 80, 80, 1)`
      : `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.12px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `-0.16px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  margin: `0px 0px 0px 5px`,
  flexGrow: data.currentVariant === 'screentablet' ? `1` : 'unset',
}));

const Divider2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(217, 217, 217, 1)`,
  height: `1px`,
  width:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `211px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `10px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 0px 0px 0px`
      : `12px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'screentablet'
      ? `stretch`
      : data.currentVariant === 'screenmobile'
      ? `stretch`
      : 'unset',
}));

const Bullets7: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screentablet' ? `-0.30000001192092896px` : `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'screentablet' ? `18px` : `20px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `212px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `10px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 0px 0px 0px`
      : `12px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'screentablet'
      ? `stretch`
      : data.currentVariant === 'screenmobile'
      ? `stretch`
      : 'unset',
}));

const Bullets8: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screentablet' ? `-0.6000000238418579px` : `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'screentablet' ? `18px` : `20px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `212px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `10px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 0px 0px 0px`
      : `12px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'screentablet'
      ? `stretch`
      : data.currentVariant === 'screenmobile'
      ? `stretch`
      : 'unset',
}));

const Banner: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 40px`
      : data.currentVariant === 'screenmobile'
      ? `0px 32px`
      : `0px 180px 19px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height:
    data.currentVariant === 'screentablet'
      ? 'unset'
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `161px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `30px 0px 0px 0px`
      : `40px 0px 0px 0px`,
}));

const SpecialPricing: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  background:
    data.currentVariant === 'screentablet'
      ? `linear-gradient(120.7deg, rgba(124, 106, 255, 1) 21.72297747994814%, rgba(6, 193, 255, 1) 93.32172985720506%)`
      : data.currentVariant === 'screenmobile'
      ? `linear-gradient(163.01999999999998deg, rgba(124, 106, 255, 1) -29.80880182282606%, rgba(6, 193, 255, 1) 120.4433927428511%)`
      : `linear-gradient(111.27deg, rgba(124, 106, 255, 1) 26.115965827654886%, rgba(6, 193, 255, 1) 91.01131735313984%)`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'screenmobile' ? `column` : `row`,
  justifyContent:
    data.currentVariant === 'screenmobile' ? `center` : `space-between`,
  alignItems: data.currentVariant === 'screenmobile' ? `flex-start` : `center`,
  padding:
    data.currentVariant === 'screentablet'
      ? `22px`
      : data.currentVariant === 'screenmobile'
      ? `30px`
      : `26px 40px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
}));

const TheProblem: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'screentablet'
      ? `458px`
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `793px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
  margin: data.currentVariant === 'screenmobile' ? `0px` : 'unset',
}));

const TheProblem1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `22px`
      : data.currentVariant === 'screenmobile'
      ? `28px`
      : `26px`,
  letterSpacing: data.currentVariant === 'screenmobile' ? `-1px` : `0px`,
  textDecoration: `none`,
  lineHeight: `32px`,
  textTransform: `none`,
  alignSelf: data.currentVariant === 'screenmobile' ? 'unset' : `stretch`,
  margin: `0px`,
  width: data.currentVariant === 'screenmobile' ? `219px` : 'unset',
}));

const ForAgencies: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `14px`
      : data.currentVariant === 'screenmobile'
      ? `16px`
      : `18px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `0px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `20px`
      : data.currentVariant === 'screenmobile'
      ? `24px`
      : `26px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'screentablet'
      ? `433px`
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `589px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `2px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `8px 0px 0px 0px`
      : `6px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const ButtonOutlined3: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  width:
    data.currentVariant === 'screentablet'
      ? `154px`
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `175px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
  margin: data.currentVariant === 'screenmobile' ? `16px 0px 0px 0px` : 'unset',
}));

const BuildReact: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 40px`
      : data.currentVariant === 'screenmobile'
      ? `0px 32px`
      : `0px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'screentablet'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `30px 0px 0px 0px`
      : `40px 0px 0px 0px`,
}));

const Frame1271: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const Describe: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  overflow: `hidden`,
});

const Describe1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `16px`
      : data.currentVariant === 'screenmobile'
      ? `16px`
      : `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'screenmobile' ? `24px` : `26px`,
  textTransform: `none`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const Ideal: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const IdealForType: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'screenmobile' ? `16px` : `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin: `0px`,
  flexGrow: data.currentVariant === 'screenmobile' ? `1` : 'unset',
}));

const Trial3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `16px`
      : data.currentVariant === 'screenmobile'
      ? `16px`
      : `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin: `0px`,
  width:
    data.currentVariant === 'screentablet'
      ? `553px`
      : data.currentVariant === 'screenmobile'
      ? `235px`
      : 'unset',
}));

const Link1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `20px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `20px 0px 0px 0px`
      : `24px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
}));

const Learn: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'screenmobile' ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px`,
}));

const Link2: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'screenmobile' ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 6px`,
}));

const SecLogos: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'screentablet'
      ? `20px 50px 100px 50px`
      : data.currentVariant === 'screenmobile'
      ? `10px 50px 100px 50px`
      : `0px 180px 100px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'screentablet'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `30px 0px 0px 0px`
      : `40px 0px 0px 0px`,
  minWidth:
    data.currentVariant === 'screentablet'
      ? `unset`
      : data.currentVariant === 'screenmobile'
      ? `unset`
      : `1408px`,
}));

const TopLogoDivider: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const LogoDividerTop1: any = styled('div')({
  backgroundColor: `rgba(46, 46, 46, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  flexGrow: `1`,
  height: `2px`,
  margin: `0px`,
});

const TrustedBy: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px 0px 0px 30px`,
});

const LogoDividerTop2: any = styled('div')({
  backgroundColor: `rgba(46, 46, 46, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  flexGrow: `1`,
  height: `2px`,
  margin: `0px 0px 0px 30px`,
});

const LogosRow1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `space-between`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'screentablet'
      ? `26px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `26px 0px 0px 0px`
      : `32px 0px 0px 0px`,
}));

const Lvmh: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'screentablet'
      ? `19.36px`
      : data.currentVariant === 'screenmobile'
      ? `11.1px`
      : `32px`,
  width:
    data.currentVariant === 'screentablet'
      ? `107.09px`
      : data.currentVariant === 'screenmobile'
      ? `61.41px`
      : `177px`,
  objectFit: `contain`,
}));

const DrReddys: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'screentablet'
      ? `24.07px`
      : data.currentVariant === 'screenmobile'
      ? `13.8px`
      : `39.78px`,
  width:
    data.currentVariant === 'screentablet'
      ? `107.09px`
      : data.currentVariant === 'screenmobile'
      ? `61.41px`
      : `177px`,
  objectFit: `contain`,
}));

const Clickout: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'screentablet'
      ? `22.83px`
      : data.currentVariant === 'screenmobile'
      ? `13.09px`
      : `37.72px`,
  width:
    data.currentVariant === 'screentablet'
      ? `82.89px`
      : data.currentVariant === 'screenmobile'
      ? `47.53px`
      : `137px`,
  objectFit: `contain`,
}));

const Motortrend: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'screentablet'
      ? `20px`
      : data.currentVariant === 'screenmobile'
      ? `12.14px`
      : `26px`,
  width:
    data.currentVariant === 'screentablet'
      ? `108px`
      : data.currentVariant === 'screenmobile'
      ? `61.75px`
      : `178px`,
  objectFit: `contain`,
}));

const LogosRow2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `space-between`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'screentablet'
      ? `26px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `26px 0px 0px 0px`
      : `32px 0px 0px 0px`,
}));

const Doodleblue: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'screentablet'
      ? `18.7px`
      : data.currentVariant === 'screenmobile'
      ? `10.87px`
      : `28px`,
  width:
    data.currentVariant === 'screentablet'
      ? `103.41px`
      : data.currentVariant === 'screenmobile'
      ? `60.14px`
      : `170px`,
  objectFit: `contain`,
}));

const Tapjoy: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'screentablet'
      ? `24.33px`
      : data.currentVariant === 'screenmobile'
      ? `14.15px`
      : `40px`,
  width:
    data.currentVariant === 'screentablet'
      ? `108.28px`
      : data.currentVariant === 'screenmobile'
      ? `62.97px`
      : `178px`,
  objectFit: `contain`,
}));

const StorageDna: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'screentablet'
      ? `23.12px`
      : data.currentVariant === 'screenmobile'
      ? `13.44px`
      : `38px`,
  width:
    data.currentVariant === 'screentablet'
      ? `83.95px`
      : data.currentVariant === 'screenmobile'
      ? `48.82px`
      : `138px`,
  objectFit: `contain`,
}));

const Teespring: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'screentablet'
      ? `21.29px`
      : data.currentVariant === 'screenmobile'
      ? `12.38px`
      : `35px`,
  width:
    data.currentVariant === 'screentablet'
      ? `108.28px`
      : data.currentVariant === 'screenmobile'
      ? `62.97px`
      : `178px`,
  objectFit: `contain`,
}));

const LogoDividerBtm: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(46, 46, 46, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `2px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `26px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `26px 0px 0px 0px`
      : `32px 0px 0px 0px`,
}));

const Neo: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'screenmobile' ? 'unset' : `stretch`,
  margin:
    data.currentVariant === 'screentablet'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `30px 0px 0px 0px`
      : `40px 0px 0px 0px`,
}));

const Or: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'screentablet'
      ? `40px`
      : data.currentVariant === 'screenmobile'
      ? `30px 32px`
      : `40px 180px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'screentablet'
      ? `768px`
      : data.currentVariant === 'screenmobile'
      ? `375px`
      : `1309px`,
  margin: `0px`,
}));

const Divider3: any = styled('div')({
  backgroundColor: `rgba(196, 196, 196, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  flexGrow: `1`,
  height: `1px`,
  margin: `0px`,
});

const Or1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: `19px`,
  letterSpacing: `9px`,
  textDecoration: `none`,
  lineHeight: `50px`,
  textTransform: `uppercase`,
  width: data.currentVariant === 'screenmobile' ? `39px` : `62px`,
  margin:
    data.currentVariant === 'screenmobile'
      ? `0px 0px 0px 20px`
      : `0px 0px 0px 40px`,
}));

const Divider4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(196, 196, 196, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  flexGrow: `1`,
  height: `1px`,
  margin:
    data.currentVariant === 'screenmobile'
      ? `0px 0px 0px 20px`
      : `0px 0px 0px 40px`,
}));

const BuildWebsitesTitle: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 0px 0px 40px`
      : data.currentVariant === 'screenmobile'
      ? `0px 32px`
      : `0px 180px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'screentablet'
      ? `768px`
      : data.currentVariant === 'screenmobile'
      ? `375px`
      : `1440px`,
  margin: `40px 0px 0px 0px`,
}));

const Frame1272: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'screentablet'
      ? `stretch`
      : data.currentVariant === 'screenmobile'
      ? `stretch`
      : 'unset',
}));

const BuildMarketingHtmlWe: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `40px`
      : data.currentVariant === 'screenmobile'
      ? `34px`
      : `42px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `36px`
      : data.currentVariant === 'screenmobile'
      ? `36px`
      : `40px`,
  textTransform: `none`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const PriceCards1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'screenmobile' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 40px`
      : data.currentVariant === 'screenmobile'
      ? `0px 32px`
      : `0px 180px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'screentablet'
      ? `768px`
      : data.currentVariant === 'screenmobile'
      ? `375px`
      : `1440px`,
  margin: `40px 0px 0px 0px`,
}));

const PriceCard3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  border: `2px solid rgba(255, 255, 255, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `22px`
      : data.currentVariant === 'screenmobile'
      ? `30px`
      : `40px`,
  width:
    data.currentVariant === 'screentablet'
      ? `205px`
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `292px`,
  height:
    data.currentVariant === 'screentablet'
      ? `326px`
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `406px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const Top3: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Chip3: any = styled('div')({
  backgroundColor: `rgba(3, 195, 255, 1)`,
  borderRadius: `50px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 6px`,
  boxSizing: `border-box`,
  height: `22px`,
  margin: `0px`,
});

const Frame13: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 5px`,
  boxSizing: `border-box`,
  height: `24px`,
  margin: `0px`,
});

const Text3: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `3px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Badge1: any = styled('div')(({ theme }: any) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `0.5px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px`,
}));

const Pricing4: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `24px 0px 0px 0px`,
});

const BigPrice3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `800`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `42px`
      : data.currentVariant === 'screenmobile'
      ? `42px`
      : `54px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.42px`
      : data.currentVariant === 'screenmobile'
      ? `-0.42px`
      : `-0.54px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `42px`
      : data.currentVariant === 'screenmobile'
      ? `38px`
      : `48px`,
  textTransform: `uppercase`,
  margin: `0px`,
}));

const PerUser12: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'screenmobile' ? `600` : `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `11px`
      : data.currentVariant === 'screenmobile'
      ? `12px`
      : `14px`,
  letterSpacing:
    data.currentVariant === 'screenmobile' ? `-0.4000000059604645px` : `0px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `14px`
      : data.currentVariant === 'screenmobile'
      ? `30px`
      : `22px`,
  textTransform: `none`,
  margin: `0px`,
}));

const ButtonOutlined4: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  alignSelf: `stretch`,
  height:
    data.currentVariant === 'screentablet'
      ? `42px`
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `44px`,
  margin: `12px 0px 0px 0px`,
}));

const Bullets9: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 0px 26px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 30px 26px 0px`
      : `10px 11px 26px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
}));

const Bullets10: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screenmobile' ? `0px` : `-0.30000001192092896px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Bullets11: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screenmobile' ? `0px` : `-0.6000000238418579px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'screentablet'
      ? `10px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 0px 0px 0px`
      : `16px 0px 0px 0px`,
}));

const PriceCard4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  border: `2px solid rgba(255, 255, 255, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `22px`
      : data.currentVariant === 'screenmobile'
      ? `30px`
      : `40px`,
  width:
    data.currentVariant === 'screentablet'
      ? `206px`
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `292px`,
  height:
    data.currentVariant === 'screentablet'
      ? `326px`
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `406px`,
  margin:
    data.currentVariant === 'screenmobile'
      ? `36px 0px 0px 0px`
      : `0px 0px 0px 36px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const Top4: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Chip4: any = styled('div')({
  backgroundColor: `rgba(254, 136, 136, 1)`,
  borderRadius: `50px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 6px`,
  boxSizing: `border-box`,
  height: `22px`,
  margin: `0px`,
});

const Frame14: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 5px`,
  boxSizing: `border-box`,
  height: `24px`,
  margin: `0px`,
});

const Text4: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `3px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Badge2: any = styled('div')(({ theme }: any) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `0.5px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px`,
}));

const Pricing5: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `24px 0px 0px 0px`,
});

const BigPrice4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `800`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `42px`
      : data.currentVariant === 'screenmobile'
      ? `42px`
      : `54px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.42px`
      : data.currentVariant === 'screenmobile'
      ? `-0.42px`
      : `-0.54px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `42px`
      : data.currentVariant === 'screenmobile'
      ? `38px`
      : `48px`,
  textTransform: `uppercase`,
  margin: `0px`,
}));

const PerUser13: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'screenmobile' ? `600` : `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `11px`
      : data.currentVariant === 'screenmobile'
      ? `12px`
      : `14px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `14px`
      : data.currentVariant === 'screenmobile'
      ? `30px`
      : `22px`,
  textTransform: `none`,
  margin: `0px`,
}));

const ButtonOutlined5: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
  height: data.currentVariant === 'screentablet' ? `42px` : 'unset',
}));

const Bullets12: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 0px 26px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 22px 26px 0px`
      : `10px 0px 26px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
}));

const Bullets13: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `0px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `-0.20000000298023224px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Bullets14: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing:
    data.currentVariant === 'screenmobile' ? `0.4000000059604645px` : `0px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'screentablet'
      ? `10px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 0px 0px 0px`
      : `16px 0px 0px 0px`,
}));

const PriceCard5: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  border: `2px solid rgba(255, 255, 255, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `22px`
      : data.currentVariant === 'screenmobile'
      ? `30px`
      : `40px`,
  width:
    data.currentVariant === 'screentablet'
      ? `205px`
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `293px`,
  height:
    data.currentVariant === 'screentablet'
      ? `326px`
      : data.currentVariant === 'screenmobile'
      ? 'unset'
      : `406px`,
  margin:
    data.currentVariant === 'screenmobile'
      ? `36px 0px 0px 0px`
      : `0px 0px 0px 36px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const Top5: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Chip5: any = styled('div')({
  backgroundColor: `rgba(128, 102, 255, 1)`,
  borderRadius: `50px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 6px`,
  boxSizing: `border-box`,
  height: `22px`,
  margin: `0px`,
});

const Frame15: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 5px`,
  boxSizing: `border-box`,
  height: `24px`,
  margin: `0px`,
});

const Text5: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `3px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Badge3: any = styled('div')(({ theme }: any) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `0.5px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px`,
}));

const Pricing6: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `24px 0px 0px 0px`,
});

const BigPrice5: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `800`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `42px`
      : data.currentVariant === 'screenmobile'
      ? `42px`
      : `54px`,
  letterSpacing:
    data.currentVariant === 'screentablet'
      ? `-0.42px`
      : data.currentVariant === 'screenmobile'
      ? `-0.42px`
      : `-0.54px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `42px`
      : data.currentVariant === 'screenmobile'
      ? `38px`
      : `48px`,
  textTransform: `uppercase`,
  margin: `0px`,
}));

const PerUser14: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'screenmobile' ? `600` : `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `11px`
      : data.currentVariant === 'screenmobile'
      ? `12px`
      : `14px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `14px`
      : data.currentVariant === 'screenmobile'
      ? `30px`
      : `22px`,
  textTransform: `none`,
  margin: `0px`,
}));

const ButtonOutlined6: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
  height: data.currentVariant === 'screentablet' ? `42px` : 'unset',
}));

const Bullets15: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 0px 26px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 10px 26px 0px`
      : `10px 0px 26px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
}));

const Bullets16: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(80, 80, 80, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const Bullets17: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(40, 39, 39, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `12px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `16px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'screentablet'
      ? `18px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `22px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'screentablet'
      ? `10px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `10px 0px 0px 0px`
      : `16px 0px 0px 0px`,
}));

const BuildWebsites: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'screentablet'
      ? `0px 40px 80px 40px`
      : data.currentVariant === 'screenmobile'
      ? `0px 32px 60px 32px`
      : `0px 180px 100px 180px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'screentablet'
      ? `768px`
      : data.currentVariant === 'screenmobile'
      ? `375px`
      : `1440px`,
  margin: `40px 0px 0px 0px`,
}));

const Frame1273: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const Details: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  width: data.currentVariant === 'screentablet' ? `505px` : 'unset',
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const NoLonger: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'screenmobile' ? `16px` : `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin: `0px`,
  flexGrow:
    data.currentVariant === 'screentablet'
      ? `1`
      : data.currentVariant === 'screenmobile'
      ? `1`
      : 'unset',
  height:
    data.currentVariant === 'screentablet'
      ? `52px`
      : data.currentVariant === 'screenmobile'
      ? `78px`
      : 'unset',
}));

const Plugins: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `7px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const Bullets18: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin: `0px`,
});

const NoLonger1Span1: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize: `14px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  height: 'unset',
  margin: 'unset',
  flexGrow: 'unset',
}));

const NoLonger1Span2: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `14px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  height: 'unset',
  margin: 'unset',
  flexGrow: 'unset',
}));

const NoLonger1Span3: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize: `14px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  height: 'unset',
  margin: 'unset',
  flexGrow: 'unset',
}));

const NoLonger1Span4: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `14px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  height: 'unset',
  margin: 'unset',
  flexGrow: 'unset',
}));

const NoLonger1Span5: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize: `14px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  height: 'unset',
  margin: 'unset',
  flexGrow: 'unset',
}));

const NoLonger1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: 'unset',
  fontWeight: `400`,
  fontSize: `14px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  width: data.currentVariant === 'screenmobile' ? 'unset' : `512px`,
  height:
    data.currentVariant === 'screentablet'
      ? `52px`
      : data.currentVariant === 'screenmobile'
      ? `75px`
      : `44px`,
  margin:
    data.currentVariant === 'screentablet'
      ? `0px 0px 0px 7px`
      : data.currentVariant === 'screenmobile'
      ? `0px 0px 0px 7px`
      : `0px 0px 0px 5px`,
  flexGrow: data.currentVariant === 'screenmobile' ? `1` : 'unset',
}));

const Ideal1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 0px 20px 0px`,
  boxSizing: `border-box`,
  margin: `7px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const IdealFor: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'screenmobile' ? `14px` : `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin: `0px`,
}));

const IdealForType1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'screenmobile' ? `14px` : `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'screenmobile'
      ? `0px 0px 0px 4px`
      : `0px 0px 0px 8px`,
  flexGrow: data.currentVariant === 'screenmobile' ? `1` : 'unset',
}));

const Link3: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `7px 0px 0px 0px`,
});

const Learn1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'screenmobile' ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px`,
}));

const Link4: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'screenmobile' ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 6px`,
}));

const Footer1: any = styled(Footer, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'screentablet'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'screenmobile'
      ? `30px 0px 0px 0px`
      : `40px 0px 0px 0px`,
}));

function Pricing(props: PricingProps): JSX.Element {
  const { data, fns } = usePricing();

  return (
    <ScreenDesktop data={data}>
      <Navbar1 data={data} />
      <Page data={data}>
        <HeroDesktop data={data}>
          <HeroAll>
            <ActionsIcon
              data={data}
              src={`assets/images/Pricing_Actions_Icon.png`}
              loading="lazy"
              alt={'Actions Icon'}
            />
            <HeroContent>
              <HeroTitle data={data}>
                <TakeDesignToLaunc data={data}>{`Pricing`}</TakeDesignToLaunc>
              </HeroTitle>
              <HeroSub data={data}>
                <PricingMsg data={data}>
                  {`Build in hours and days—not months—for a fraction of the cost.
No Credit Card required to start.`}
                </PricingMsg>
              </HeroSub>
            </HeroContent>
          </HeroAll>
        </HeroDesktop>
        {false && (
          <BuildReactTitle data={data}>
            <Frame127 data={data}>
              <BuildReactApps data={data}>{`Build React Apps`}</BuildReactApps>
            </Frame127>
          </BuildReactTitle>
        )}
        <MonthlyOrAnnual data={data}>
          <SignupSwitch data={data}>
            <SwitchMonthlyAnnual1
              onClick={fns.toggleAnnualMonthly}
              isAnnual={data.isAnnual}
            />
          </SignupSwitch>
          <PriceCards data={data}>
            <PriceCard data={data}>
              <Top data={data}>
                <Chip>
                  <Frame1>
                    <Text>
                      <Pro>{`Pro`}</Pro>
                    </Text>
                  </Frame1>
                </Chip>
                <Pricing1>
                  <BigPrice data={data}>{`$49`}</BigPrice>
                  <UnderPrice data={data}>
                    <PerUser data={data}>{`/mo per workspace user`}</PerUser>
                    <Trial data={data}>
                      {data.currentVariant === 'screentablet'
                        ? `14-day free trial`
                        : data.currentVariant === 'screenmobile'
                        ? `14-day free trial`
                        : `14-day free trial, no card `}
                    </Trial>
                  </UnderPrice>
                </Pricing1>
              </Top>
              <ButtonOutlined variant="outlined" size="medium" color="info">
                {' '}
                Sign Up{' '}
              </ButtonOutlined>
              <Bullets data={data}>
                <Apps data={data}>
                  <Bullet1>
                    <Ellipse14
                      src={`assets/images/Pricing_Ellipse_14.png`}
                      loading="lazy"
                      alt={'Ellipse 14'}
                    />
                    <PerUser1 data={data}>{`Unlimited Workspaces`}</PerUser1>
                  </Bullet1>
                  <Bullet2 data={data}>
                    <Ellipse141
                      src={`assets/images/Pricing_Ellipse_14_1.png`}
                      loading="lazy"
                      alt={'Ellipse 14'}
                    />
                    <PerUser2 data={data}>{`1 App per Workspace`}</PerUser2>
                  </Bullet2>
                  <Bullet3 data={data}>
                    <Ellipse142
                      src={`assets/images/Pricing_Ellipse_14_2.png`}
                      loading="lazy"
                      alt={'Ellipse 14'}
                    />
                    <PerUser3 data={data}>{`3 users per Workspace`}</PerUser3>
                  </Bullet3>
                </Apps>
                {false && <Divider data={data}></Divider>}
                {false && (
                  <Bullets1 data={data}>
                    {`Perfect for small shops and product teams`}
                  </Bullets1>
                )}
                {false && (
                  <Bullets2 data={data}>
                    {`Export unlimited components`}
                  </Bullets2>
                )}
              </Bullets>
            </PriceCard>
            <PriceCard1 data={data}>
              <Top1 data={data}>
                <Chip1 data={data}>
                  <Frame11>
                    <Text1>
                      <Team>{`Team`}</Team>
                    </Text1>
                  </Frame11>
                </Chip1>
                <Pricing2>
                  <BigPrice1 data={data}>{`$79`}</BigPrice1>
                  <UnderPrice1 data={data}>
                    <PerUser4 data={data}>{`/mo per workspace user`}</PerUser4>
                    <Trial1 data={data}>{`14-day free trial`}</Trial1>
                  </UnderPrice1>
                </Pricing2>
              </Top1>
              <ButtonOutlined1 variant="outlined" size="medium" color="warning">
                {' '}
                Sign Up{' '}
              </ButtonOutlined1>
              <Bullets3 data={data}>
                <Apps1 data={data}>
                  <Bullet11>
                    <Ellipse143
                      src={`assets/images/Pricing_Ellipse_14_3.png`}
                      loading="lazy"
                      alt={'Ellipse 14'}
                    />
                    <PerUser5 data={data}>{`Unlimited Workspaces`}</PerUser5>
                  </Bullet11>
                  <Bullet21 data={data}>
                    <Ellipse144
                      src={`assets/images/Pricing_Ellipse_14_4.png`}
                      loading="lazy"
                      alt={'Ellipse 14'}
                    />
                    <PerUser6 data={data}>
                      {data.currentVariant === 'screentablet'
                        ? `1 App per Workspace`
                        : data.currentVariant === 'screenmobile'
                        ? `1 App per Workspace`
                        : `5 Apps per Workspace`}
                    </PerUser6>
                  </Bullet21>
                  <Bullet31 data={data}>
                    <Ellipse145
                      src={`assets/images/Pricing_Ellipse_14_5.png`}
                      loading="lazy"
                      alt={'Ellipse 14'}
                    />
                    <PerUser7 data={data}>
                      {data.currentVariant === 'screentablet'
                        ? `3 users per Workspace`
                        : data.currentVariant === 'screenmobile'
                        ? `3 users per Workspace`
                        : `10 users per Workspace`}
                    </PerUser7>
                  </Bullet31>
                </Apps1>
                {false && <Divider1 data={data}></Divider1>}
                {false && (
                  <Bullets4 data={data}>
                    {`Best for teams with larger products/clients`}
                  </Bullets4>
                )}
                {false && (
                  <Bullets5 data={data}>{`Build projects together`}</Bullets5>
                )}
              </Bullets3>
            </PriceCard1>
            <PriceCard2 data={data}>
              <Top2 data={data}>
                <Chip2>
                  <Frame12>
                    <Text2>
                      <Enterprise data={data}>{`Enterprise`}</Enterprise>
                    </Text2>
                  </Frame12>
                </Chip2>
                <Pricing3>
                  <BigPrice2 data={data}>{`Custom`}</BigPrice2>
                  <UnderPrice2 data={data}>
                    <PerUser8 data={data}>{`/tailored to needs`}</PerUser8>
                    <Trial2 data={data}>{`14-day free trial`}</Trial2>
                  </UnderPrice2>
                </Pricing3>
              </Top2>
              <ButtonOutlined2
                variant="outlined"
                size="medium"
                color="secondary"
              >
                {' '}
                Contact Sales{' '}
              </ButtonOutlined2>
              <Bullets6 data={data}>
                <Apps2 data={data}>
                  <Bullet12>
                    <Ellipse146
                      src={`assets/images/Pricing_Ellipse_14_6.png`}
                      loading="lazy"
                      alt={'Ellipse 14'}
                    />
                    <PerUser9 data={data}>{`Unlimited Workspaces`}</PerUser9>
                  </Bullet12>
                  <Bullet22 data={data}>
                    <Ellipse147
                      src={`assets/images/Pricing_Ellipse_14_7.png`}
                      loading="lazy"
                      alt={'Ellipse 14'}
                    />
                    <PerUser10 data={data}>{`Unlimited Apps`}</PerUser10>
                  </Bullet22>
                  <Bullet32 data={data}>
                    <Ellipse148
                      src={`assets/images/Pricing_Ellipse_14_8.png`}
                      loading="lazy"
                      alt={'Ellipse 14'}
                    />
                    <PerUser11 data={data}>{`Unlimited Users`}</PerUser11>
                  </Bullet32>
                </Apps2>
                {false && <Divider2 data={data}></Divider2>}
                {false && (
                  <Bullets7 data={data}>
                    {`For large companies with custom needs`}
                  </Bullets7>
                )}
                {false && (
                  <Bullets8 data={data}>
                    {`Custom setup, training & support manager`}
                  </Bullets8>
                )}
              </Bullets6>
            </PriceCard2>
          </PriceCards>
        </MonthlyOrAnnual>
        <Banner data={data}>
          <SpecialPricing data={data}>
            <TheProblem data={data}>
              <TheProblem1 data={data}>
                {`Startups & Educators get 80% off`}
              </TheProblem1>
              <ForAgencies data={data}>
                {`Educators using an .edu email or Startups who have raised < $1M USD in funding or have < $500K USD in annual revenues get special pricing`}
              </ForAgencies>
            </TheProblem>
            <ButtonOutlined3
              variant="outlined"
              size="medium"
              color="info"
              data={data}
            >
              {' '}
              Sign Up{' '}
            </ButtonOutlined3>
          </SpecialPricing>
        </Banner>
        <BuildReact data={data}>
          <Frame1271 data={data}>
            <Describe>
              <Describe1 data={data}>
                {`Build web apps, customer facing or internal products, React or NextJS websites. 
Download code or push to your GitHub repository.`}
              </Describe1>
              {false && (
                <Ideal data={data}>
                  <IdealForType data={data}>
                    {`Ideal for: Product development teams & Dev Agencies`}
                  </IdealForType>
                </Ideal>
              )}
              <Trial3 data={data}>
                {`
All plans include a 14-day trial. 
You will be invoiced after the 14-day trial ends.`}
              </Trial3>
              {false && (
                <Link1 data={data}>
                  <Learn data={data}>{`Learn more about`}</Learn>
                  <Link2 href="#" underline="hover" data={data}>
                    React Components.
                  </Link2>
                </Link1>
              )}
            </Describe>
          </Frame1271>
        </BuildReact>
        <SecLogos data={data}>
          <TopLogoDivider>
            <LogoDividerTop1></LogoDividerTop1>
            <TrustedBy>{`TRUSTED BY:`}</TrustedBy>
            <LogoDividerTop2></LogoDividerTop2>
          </TopLogoDivider>
          <LogosRow1 data={data}>
            <Lvmh
              data={data}
              src={`assets/images/Pricing_lvmh.png`}
              loading="lazy"
              alt={'lvmh'}
            />
            <DrReddys
              data={data}
              src={`assets/images/Pricing_drReddys.png`}
              loading="lazy"
              alt={'drReddys'}
            />
            <Clickout
              data={data}
              src={`assets/images/Pricing_clickout.png`}
              loading="lazy"
              alt={'clickout'}
            />
            <Motortrend
              data={data}
              src={`assets/images/Pricing_motortrend.png`}
              loading="lazy"
              alt={'motortrend'}
            />
          </LogosRow1>
          <LogosRow2 data={data}>
            <Doodleblue
              data={data}
              src={`assets/images/Pricing_doodleblue.png`}
              loading="lazy"
              alt={'doodleblue'}
            />
            <Tapjoy
              data={data}
              src={`assets/images/Pricing_tapjoy.png`}
              loading="lazy"
              alt={'tapjoy'}
            />
            <StorageDna
              data={data}
              src={`assets/images/Pricing_storageDNA.png`}
              loading="lazy"
              alt={'storageDNA'}
            />
            <Teespring
              data={data}
              src={`assets/images/Pricing_teespring.png`}
              loading="lazy"
              alt={'teespring'}
            />
          </LogosRow2>
          <LogoDividerBtm data={data}></LogoDividerBtm>
        </SecLogos>
        {false && (
          <Neo data={data}>
            <Or data={data}>
              <Divider3></Divider3>
              <Or1 data={data}>{`or`}</Or1>
              <Divider4 data={data}></Divider4>
            </Or>
            <BuildWebsitesTitle data={data}>
              <Frame1272 data={data}>
                <BuildMarketingHtmlWe data={data}>
                  {`Build Marketing HTML Webpages`}
                </BuildMarketingHtmlWe>
              </Frame1272>
            </BuildWebsitesTitle>
            <PriceCards1 data={data}>
              <PriceCard3 data={data}>
                <Top3>
                  <Chip3>
                    <Frame13>
                      <Text3>
                        <Badge1>
                          {data.currentVariant === 'screentablet'
                            ? `Websites - Free`
                            : data.currentVariant === 'screenmobile'
                            ? `Websites - Free`
                            : `Webpages - Free`}
                        </Badge1>
                      </Text3>
                    </Frame13>
                  </Chip3>
                  <Pricing4>
                    <BigPrice3 data={data}>{`$0`}</BigPrice3>
                    <PerUser12 data={data}>
                      {data.currentVariant === 'screenmobile'
                        ? `/  user forever`
                        : `/ user forever`}
                    </PerUser12>
                  </Pricing4>
                </Top3>
                <ButtonOutlined4
                  variant="outlined"
                  size="medium"
                  color="info"
                  data={data}
                >
                  {' '}
                  Sign Up{' '}
                </ButtonOutlined4>
                <Bullets9 data={data}>
                  <Bullets10 data={data}>
                    {data.currentVariant === 'screentablet'
                      ? `Build, experiment, share with your team or client`
                      : data.currentVariant === 'screenmobile'
                      ? `Build, experiment, share with your team or client`
                      : `Build, experiment, share with your team or client.`}
                  </Bullets10>
                  <Bullets11 data={data}>
                    {data.currentVariant === 'screentablet'
                      ? `No credit card required, 
2 exports per month`
                      : data.currentVariant === 'screenmobile'
                      ? `No credit card required, 2 exports per month`
                      : `No credit card required,  2 exports per month`}
                  </Bullets11>
                </Bullets9>
              </PriceCard3>
              <PriceCard4 data={data}>
                <Top4>
                  <Chip4>
                    <Frame14>
                      <Text4>
                        <Badge2>
                          {data.currentVariant === 'screentablet'
                            ? `Websites - Personal`
                            : data.currentVariant === 'screenmobile'
                            ? `Websites - Personal`
                            : `Webpages - Personal`}
                        </Badge2>
                      </Text4>
                    </Frame14>
                  </Chip4>
                  <Pricing5>
                    <BigPrice4 data={data}>{`$15`}</BigPrice4>
                    <PerUser13 data={data}>{`/ user per month`}</PerUser13>
                  </Pricing5>
                </Top4>
                <ButtonOutlined5
                  variant="outlined"
                  size="medium"
                  color="warning"
                  data={data}
                >
                  {' '}
                  Sign Up{' '}
                </ButtonOutlined5>
                <Bullets12 data={data}>
                  <Bullets13 data={data}>
                    {`For personal projects, portfolios, etc.`}
                  </Bullets13>
                  <Bullets14 data={data}>
                    {`Add your own custom domain, 10 exports per month`}
                  </Bullets14>
                </Bullets12>
              </PriceCard4>
              <PriceCard5 data={data}>
                <Top5>
                  <Chip5>
                    <Frame15>
                      <Text5>
                        <Badge3>
                          {data.currentVariant === 'screentablet'
                            ? `Websites - Pro`
                            : data.currentVariant === 'screenmobile'
                            ? `Websites - Pro`
                            : `Webpages - Pro`}
                        </Badge3>
                      </Text5>
                    </Frame15>
                  </Chip5>
                  <Pricing6>
                    <BigPrice5 data={data}>{`$50`}</BigPrice5>
                    <PerUser14 data={data}>{`/ user per month`}</PerUser14>
                  </Pricing6>
                </Top5>
                <ButtonOutlined6
                  variant="outlined"
                  size="medium"
                  color="secondary"
                  data={data}
                >
                  {' '}
                  Sign Up{' '}
                </ButtonOutlined6>
                <Bullets15 data={data}>
                  <Bullets16 data={data}>
                    {data.currentVariant === 'screentablet'
                      ? `For your business needs`
                      : data.currentVariant === 'screenmobile'
                      ? `For your business needs`
                      : `For your business needs.`}
                  </Bullets16>
                  <Bullets17 data={data}>
                    {`Build more, 30 exports per month, get priority email support`}
                  </Bullets17>
                </Bullets15>
              </PriceCard5>
            </PriceCards1>
            <BuildWebsites data={data}>
              <Frame1273 data={data}>
                <Details data={data}>
                  <NoLonger data={data}>
                    {`Build landing pages and marketing pages easily from Figma. 
Publish live or download the HTML.`}
                  </NoLonger>
                </Details>
                <Plugins data={data}>
                  <Bullets18>{`* `}</Bullets18>
                  <NoLonger1 data={data}>
                    <NoLonger1Span1 data={data}>{`The `}</NoLonger1Span1>
                    <NoLonger1Span2 data={data}>{`Sketch`}</NoLonger1Span2>
                    <NoLonger1Span3 data={data}>{` & `}</NoLonger1Span3>
                    <NoLonger1Span4 data={data}>{`XD`}</NoLonger1Span4>
                    <NoLonger1Span5
                      data={data}
                    >{` plugins are no longer supported.`}</NoLonger1Span5>
                  </NoLonger1>
                </Plugins>
                <Ideal1 data={data}>
                  <IdealFor data={data}>{`Ideal for:`}</IdealFor>
                  <IdealForType1 data={data}>
                    {`Freelancers & Marketing Agencies`}
                  </IdealForType1>
                </Ideal1>
                <Link3>
                  <Learn1 data={data}>{`Learn more about`}</Learn1>
                  <Link4 href="#" underline="hover" data={data}>
                    Quest Webpages.
                  </Link4>
                </Link3>
              </Frame1273>
            </BuildWebsites>
          </Neo>
        )}
        <Footer1 data={data} />
      </Page>
    </ScreenDesktop>
  );
}

export default Pricing;
