/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Link } from '@mui/material';
import { styled } from '@mui/material/styles';
import ProductDrop from 'components/ProductDrop/ProductDrop';
import UseCasesDrop from 'components/UseCasesDrop/UseCasesDrop';
import { NavbarProps } from 'types';
import useNavbar from 'components/Navbar/useNavbar';

const ScreenDesktop: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: data.currentVariant === 'screenmobile' ? `flex-start` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: 'auto',
  minWidth:
    data.currentVariant === 'screentablet'
      ? `722px`
      : data.currentVariant === 'screenmobile'
      ? `unset`
      : `1215px`,
}));

const Nav: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(23, 23, 23, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `space-between`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'screentablet'
      ? `17px 40px`
      : data.currentVariant === 'screenmobile'
      ? `17px 20px`
      : `17px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height: `72px`,
  margin: `0px`,
}));

const LeftSide: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
});

const QuestLogoHeader: any = styled('img')({
  height: `37px`,
  width: `128px`,
  margin: `0px`,
});

const Links: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent:
    data.currentVariant === 'screentablet'
      ? `flex-start`
      : data.currentVariant === 'screenmobile'
      ? `flex-start`
      : `center`,
  alignItems:
    data.currentVariant === 'screentablet'
      ? `flex-start`
      : data.currentVariant === 'screenmobile'
      ? `flex-start`
      : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'screentablet'
      ? `0px 0px 0px 40px`
      : data.currentVariant === 'screenmobile'
      ? `0px 0px 0px 40px`
      : `0px 0px 0px 117px`,
}));

const Product: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: data.currentVariant === 'screenmobile' ? `0px` : `0px 0px 0px 30px`,
  boxSizing: `border-box`,
  margin: `0px`,
}));

const ProductDrop1: any = styled(ProductDrop)(({ theme }: any) => ({
  width: `228px`,
  margin: `0px 0px 0px 8px`,
}));

const Product1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `14px`
      : data.currentVariant === 'screenmobile'
      ? `20px`
      : `18px`,
  letterSpacing: `0.5px`,
  textDecoration: `none`,
  lineHeight: `23px`,
  textTransform: `none`,
  margin: `0px`,
}));

const Triangle: any = styled('img')({
  height: `8px`,
  width: `12px`,
  margin: `0px 0px 0px 8px`,
});

const UseCases: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 0px 0px 30px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'screentablet'
      ? `0px 0px 0px 30px`
      : data.currentVariant === 'screenmobile'
      ? `0px 0px 0px 30px`
      : `0px 0px 0px 39px`,
}));

const UseCasesDrop1: any = styled(UseCasesDrop)(({ theme }: any) => ({
  width: `176px`,
  margin: `0px 0px 0px 8px`,
}));

const UseCases1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `14px`
      : data.currentVariant === 'screenmobile'
      ? `14px`
      : `18px`,
  letterSpacing: `0.5px`,
  textDecoration: `none`,
  lineHeight: `23px`,
  textTransform: `none`,
  margin: `0px`,
}));

const Triangle1: any = styled('img')({
  height: `8px`,
  width: `12px`,
  margin: `0px 0px 0px 8px`,
});

const Pricing: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `14px`
      : data.currentVariant === 'screenmobile'
      ? `16px`
      : `18px`,
  letterSpacing: `0.5px`,
  lineHeight: `23px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'screentablet'
      ? `0px 0px 0px 30px`
      : data.currentVariant === 'screenmobile'
      ? `0px 0px 0px 30px`
      : `0px 0px 0px 39px`,
}));

const RightSide: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent:
    data.currentVariant === 'screentablet' ? `flex-start` : `flex-end`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
}));

const LogIn: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `14px`
      : data.currentVariant === 'screenmobile'
      ? `16px`
      : `18px`,
  letterSpacing: `0.5px`,
  lineHeight: `23px`,
  textTransform: `none`,
  margin: data.currentVariant === 'screenmobile' ? `0px 0px 0px 30px` : `0px`,
}));

const SignUp: any = styled(Link, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'screentablet'
      ? `14px`
      : data.currentVariant === 'screenmobile'
      ? `16px`
      : `18px`,
  letterSpacing: `0.5px`,
  lineHeight: `23px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'screentablet'
      ? `0px 0px 0px 30px`
      : data.currentVariant === 'screenmobile'
      ? `0px 0px 0px 30px`
      : `0px 0px 0px 33px`,
}));

const XBurger: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'screentablet'
      ? `0px 0px 0px 30px`
      : data.currentVariant === 'screenmobile'
      ? `0px`
      : `0px 0px 0px 33px`,
}));

const Hamburger: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height: data.currentVariant === 'screenmobile' ? `26.23px` : `31px`,
  width: data.currentVariant === 'screenmobile' ? `33px` : `39px`,
  margin: `0px`,
}));

const X: any = styled('img')({
  height: `31.17px`,
  width: `31.11px`,
  margin: `0px`,
});

const Menu: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(23, 23, 23, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `35px 36px`,
  boxSizing: `border-box`,
  height: `1043px`,
  width: data.currentVariant === 'screenmobile' ? 'unset' : `375px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'screenmobile' ? `stretch` : 'unset',
}));

const Links1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const LinkFeatures: any = styled(Link)({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `16px`,
  letterSpacing: `0.5px`,
  lineHeight: `21px`,
  textTransform: `none`,
  margin: `0px`,
});

const LinkReact: any = styled(Link)({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `16px`,
  letterSpacing: `0.5px`,
  lineHeight: `21px`,
  textTransform: `none`,
  margin: `15px 0px 0px 0px`,
});

const LinkHtml: any = styled(Link)({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `16px`,
  letterSpacing: `0.5px`,
  lineHeight: `21px`,
  textTransform: `none`,
  margin: `15px 0px 0px 0px`,
});

const LinkPlugin: any = styled(Link)({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `16px`,
  letterSpacing: `0.5px`,
  lineHeight: `21px`,
  textTransform: `none`,
  margin: `15px 0px 0px 0px`,
});

const LinkSamples: any = styled(Link)({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `16px`,
  letterSpacing: `0.5px`,
  lineHeight: `21px`,
  textTransform: `none`,
  margin: `15px 0px 0px 0px`,
});

const LinkDocs: any = styled(Link)({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `16px`,
  letterSpacing: `0.5px`,
  lineHeight: `21px`,
  textTransform: `none`,
  margin: `15px 0px 0px 0px`,
});

const LinkPricing: any = styled(Link)({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `16px`,
  letterSpacing: `0.5px`,
  lineHeight: `21px`,
  textTransform: `none`,
  margin: `15px 0px 0px 0px`,
});

const LinkStartups: any = styled(Link)({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `16px`,
  letterSpacing: `0.5px`,
  lineHeight: `21px`,
  textTransform: `none`,
  margin: `15px 0px 0px 0px`,
});

const LinkAgencies: any = styled(Link)({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `16px`,
  letterSpacing: `0.5px`,
  lineHeight: `21px`,
  textTransform: `none`,
  margin: `15px 0px 0px 0px`,
});

const LinkWeb3: any = styled(Link)({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `16px`,
  letterSpacing: `0.5px`,
  lineHeight: `21px`,
  textTransform: `none`,
  margin: `15px 0px 0px 0px`,
});

const LinkLogIn: any = styled(Link)({
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `16px`,
  letterSpacing: `0.5px`,
  lineHeight: `21px`,
  textTransform: `none`,
  margin: `15px 0px 0px 0px`,
});

const LinkSignUp: any = styled(Link)({
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `16px`,
  letterSpacing: `0.5px`,
  lineHeight: `21px`,
  textTransform: `none`,
  margin: `15px 0px 0px 0px`,
});

function Navbar(props: NavbarProps): JSX.Element {
  const { data } = useNavbar();

  return (
    <ScreenDesktop data={data}>
      <Nav data={data}>
        <LeftSide>
          <QuestLogoHeader
            src={`assets/images/navbar_Quest_Logo_header.png`}
            loading="lazy"
            alt={'Quest Logo header'}
          />
          {!(data.currentVariant === 'screenmobile') && (
            <Links data={data}>
              <Product data={data}>
                {false && <ProductDrop1 />}
                <Product1 data={data}>{`Product`}</Product1>
                <Triangle
                  src={`assets/images/navbar_Triangle.png`}
                  loading="lazy"
                  alt={'Triangle'}
                />
              </Product>
              <UseCases data={data}>
                {false && <UseCasesDrop1 />}
                <UseCases1 data={data}>
                  {data.currentVariant === 'screentablet'
                    ? `Product`
                    : data.currentVariant === 'screenmobile'
                    ? `Product`
                    : `Use Cases`}
                </UseCases1>
                <Triangle1
                  src={`assets/images/navbar_Triangle_1.png`}
                  loading="lazy"
                  alt={'Triangle'}
                />
              </UseCases>
              <Pricing href="#" underline="none" data={data}>
                Pricing
              </Pricing>
            </Links>
          )}
        </LeftSide>
        <RightSide data={data}>
          {!(data.currentVariant === 'screenmobile') && (
            <LogIn href="#" underline="none" data={data}>
              Log In
            </LogIn>
          )}
          {!(data.currentVariant === 'screenmobile') && (
            <SignUp href="#" underline="none" data={data}>
              Sign Up
            </SignUp>
          )}
          {data.currentVariant === 'screenmobile' && (
            <XBurger data={data}>
              <Hamburger
                data={data}
                src={`assets/images/navbar_hamburger.png`}
                loading="lazy"
                alt={'hamburger'}
              />
              {!(data.currentVariant === 'screenmobile') && (
                <X
                  src={`assets/images/navbar_X.png`}
                  loading="lazy"
                  alt={'X'}
                />
              )}
            </XBurger>
          )}
        </RightSide>
      </Nav>
      {false && (
        <Menu data={data}>
          <Links1>
            <LinkFeatures href="#" underline="hover">
              Features
            </LinkFeatures>
            <LinkReact href="#" underline="hover">
              React components
            </LinkReact>
            <LinkHtml href="#" underline="hover">
              HTML Webpages
            </LinkHtml>
            <LinkPlugin href="#" underline="hover">
              Plugin for Figma
            </LinkPlugin>
            <LinkSamples href="#" underline="hover">
              Samples
            </LinkSamples>
            <LinkDocs href="#" underline="hover">
              Docs
            </LinkDocs>
            <LinkPricing href="#" underline="hover">
              Pricing
            </LinkPricing>
            <LinkStartups href="#" underline="hover">
              Quest for Startups
            </LinkStartups>
            <LinkAgencies href="#" underline="hover">
              Quest for Agencies
            </LinkAgencies>
            <LinkWeb3 href="#" underline="hover">
              Quest for Web3
            </LinkWeb3>
            <LinkLogIn href="#" underline="hover">
              Log In
            </LinkLogIn>
            <LinkSignUp href="#" underline="hover">
              Sign Up Now
            </LinkSignUp>
          </Links1>
        </Menu>
      )}
    </ScreenDesktop>
  );
}

export default Navbar;
