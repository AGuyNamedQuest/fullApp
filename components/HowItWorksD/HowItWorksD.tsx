/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import { HowItWorksDProps } from 'types';
import { animated, useSpring, easings } from 'react-spring';
import useHowItWorksD from 'components/HowItWorksD/useHowItWorksD';

const ScreenDesktopStep1: any = styled('div')({
  backgroundColor: `rgba(23, 23, 23, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: 'auto',
});

const D: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Frame122: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const BarHighlight: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Divider: any = styled('div')({
  backgroundColor: `rgba(46, 46, 46, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  height: `2px`,
  width: `1082px`,
  margin: `0px`,
});

const HighlightedBar: any = animated(
  styled('div', {
    shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
  })(({ data }: any) => ({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `flex-start`,
    alignItems: `flex-start`,
    padding: `0px`,
    boxSizing: `border-box`,
    width: `837px`,
    margin: `0px`,
  }))
);

const Rectangle139: any = animated(
  styled('div', {
    shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
  })(({ data }: any) => ({
    backgroundColor: `rgba(254, 136, 136, 0)`,
    width: `1px`,
    height: `3px`,
    margin: `0px`,
  }))
);

const Rectangle141: any = animated(
  styled('div', {
    shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
  })(({ data }: any) => ({
    backgroundColor: `rgba(254, 136, 136, 1)`,
    width: `279px`,
    height: `3px`,
    margin: `0px`,
  }))
);

const TextLinks: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `space-between`,
  alignItems: `flex-start`,
  padding: `0px 10px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const SyncDs: any = animated(
  styled('div', {
    shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
  })(({ data }: any) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    color: `rgba(254, 136, 136, 1)`,
    fontStyle: `normal`,
    fontFamily: `Visby CF`,
    fontWeight: `700`,
    fontSize: `18px`,
    letterSpacing: `2px`,
    textDecoration: `none`,
    textTransform: `uppercase`,
  }))
);

const ExportDesign: any = animated(
  styled('div', {
    shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
  })(({ data }: any) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    color: `rgba(255, 255, 255, 0.5)`,
    fontStyle: `normal`,
    fontFamily: `Visby CF`,
    fontWeight: `700`,
    fontSize: `18px`,
    letterSpacing: `2px`,
    textDecoration: `none`,
    textTransform: `uppercase`,
  }))
);

const SetupInQuest: any = animated(
  styled('div', {
    shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
  })(({ data }: any) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    color: `rgba(255, 255, 255, 0.5)`,
    fontStyle: `normal`,
    fontFamily: `Visby CF`,
    fontWeight: `700`,
    fontSize: `18px`,
    letterSpacing: `2px`,
    textDecoration: `none`,
    textTransform: `uppercase`,
  }))
);

const ExportReact: any = animated(
  styled('div', {
    shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
  })(({ data }: any) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    color: `rgba(255, 255, 255, 0.5)`,
    fontStyle: `normal`,
    fontFamily: `Visby CF`,
    fontWeight: `700`,
    fontSize: `18px`,
    letterSpacing: `2px`,
    textDecoration: `none`,
    textTransform: `uppercase`,
  }))
);

const StepVisual1D: any = styled('img')({
  height: `315px`,
  width: `1082px`,
  objectFit: `cover`,
  margin: `30px 0px 0px 0px`,
});

const StepVisual2D: any = styled('img')({
  height: `315px`,
  width: `1082px`,
  objectFit: `cover`,
  margin: `30px 0px 0px 0px`,
});

const StepVisual3D: any = styled('img')({
  height: `315px`,
  width: `1082px`,
  objectFit: `cover`,
  margin: `30px 0px 0px 0px`,
});

const StepVisual4D: any = styled('img')({
  height: `315px`,
  width: `1082px`,
  objectFit: `cover`,
  margin: `30px 0px 0px 0px`,
});

function HowItWorksD(props: HowItWorksDProps): JSX.Element {
  const { data, fns } = useHowItWorksD();

  const HighlightedBarScreenDesktopStep1 = { width: `837px` };
  const HighlightedBarScreenDesktopStep2 = { width: `837px` };
  const HighlightedBarScreenDesktopStep3 = { width: `837px` };
  const HighlightedBarScreenDesktopStep4 = { width: '1082px' };
  const [HighlightedBarStateStyles, HighlightedBarStateApi] = useSpring(() => ({
    from: eval('HighlightedBar' + data.currentVariant),
    config: { duration: 1000 },
    delay: 500,
  }));

  const Rectangle139ScreenDesktopStep1 = { width: `1px` };
  const Rectangle139ScreenDesktopStep2 = { width: `348px` };
  const Rectangle139ScreenDesktopStep3 = { width: `604px` };
  const Rectangle139ScreenDesktopStep4 = { width: `855px` };
  const [Rectangle139StateStyles, Rectangle139StateApi] = useSpring(() => ({
    from: eval('Rectangle139' + data.currentVariant),
    config: { duration: 1000 },
    delay: 500,
  }));

  const Rectangle141ScreenDesktopStep1 = { width: `279px` };
  const Rectangle141ScreenDesktopStep2 = { width: `182px` };
  const Rectangle141ScreenDesktopStep3 = { width: `176px` };
  const Rectangle141ScreenDesktopStep4 = { width: `227px` };
  const [Rectangle141StateStyles, Rectangle141StateApi] = useSpring(() => ({
    from: eval('Rectangle141' + data.currentVariant),
    config: { duration: 1000 },
    delay: 500,
  }));

  const SyncDsScreenDesktopStep1 = { color: `rgba(254, 136, 136, 1)` };
  const SyncDsScreenDesktopStep2 = { color: `rgba(255, 255, 255, 0.5)` };
  const SyncDsScreenDesktopStep3 = { color: `rgba(255, 255, 255, 0.5)` };
  const SyncDsScreenDesktopStep4 = { color: `rgba(255, 255, 255, 0.5)` };
  const [SyncDsStateStyles, SyncDsStateApi] = useSpring(() => ({
    from: eval('SyncDs' + data.currentVariant),
    config: { duration: 1000 },
    delay: 500,
  }));

  const ExportDesignScreenDesktopStep1 = { color: `rgba(255, 255, 255, 0.5)` };
  const ExportDesignScreenDesktopStep2 = { color: `rgba(254, 136, 136, 1)` };
  const ExportDesignScreenDesktopStep3 = { color: `rgba(255, 255, 255, 0.5)` };
  const ExportDesignScreenDesktopStep4 = { color: `rgba(255, 255, 255, 0.5)` };
  const [ExportDesignStateStyles, ExportDesignStateApi] = useSpring(() => ({
    from: eval('ExportDesign' + data.currentVariant),
    config: { duration: 1000 },
    delay: 500,
  }));

  const SetupInQuestScreenDesktopStep1 = { color: `rgba(255, 255, 255, 0.5)` };
  const SetupInQuestScreenDesktopStep2 = { color: `rgba(255, 255, 255, 0.5)` };
  const SetupInQuestScreenDesktopStep3 = { color: `rgba(254, 136, 136, 1)` };
  const SetupInQuestScreenDesktopStep4 = { color: `rgba(255, 255, 255, 0.5)` };
  const [SetupInQuestStateStyles, SetupInQuestStateApi] = useSpring(() => ({
    from: eval('SetupInQuest' + data.currentVariant),
    config: { duration: 1000 },
    delay: 500,
  }));

  const ExportReactScreenDesktopStep1 = { color: `rgba(255, 255, 255, 0.5)` };
  const ExportReactScreenDesktopStep2 = { color: `rgba(255, 255, 255, 0.5)` };
  const ExportReactScreenDesktopStep3 = { color: `rgba(255, 255, 255, 0.5)` };
  const ExportReactScreenDesktopStep4 = { color: `rgba(254, 136, 136, 1)` };
  const [ExportReactStateStyles, ExportReactStateApi] = useSpring(() => ({
    from: eval('ExportReact' + data.currentVariant),
    config: { duration: 1000 },
    delay: 500,
  }));

  const switchStateToScreenDesktopStep1: (
    duration: number,
    delay: number,
    easing: string
  ) => void = (
    duration: number = 0,
    delay: number = 0,
    easing: string = 'linear'
  ) => {
    HighlightedBarStateApi.start({
      ...HighlightedBarScreenDesktopStep1,
      delay,
      config: { duration, easing: easings[easing] },
    });
    Rectangle139StateApi.start({
      ...Rectangle139ScreenDesktopStep1,
      delay,
      config: { duration, easing: easings[easing] },
    });
    Rectangle141StateApi.start({
      ...Rectangle141ScreenDesktopStep1,
      delay,
      config: { duration, easing: easings[easing] },
    });
    SyncDsStateApi.start({
      ...SyncDsScreenDesktopStep1,
      delay,
      config: { duration, easing: easings[easing] },
    });
    ExportDesignStateApi.start({
      ...ExportDesignScreenDesktopStep1,
      delay,
      config: { duration, easing: easings[easing] },
    });
    SetupInQuestStateApi.start({
      ...SetupInQuestScreenDesktopStep1,
      delay,
      config: { duration, easing: easings[easing] },
    });
    ExportReactStateApi.start({
      ...ExportReactScreenDesktopStep1,
      delay,
      config: { duration, easing: easings[easing] },
    });
  };

  const switchStateToScreenDesktopStep2: (
    duration: number,
    delay: number,
    easing: string
  ) => void = (
    duration: number = 0,
    delay: number = 0,
    easing: string = 'linear'
  ) => {
    HighlightedBarStateApi.start({
      ...HighlightedBarScreenDesktopStep2,
      delay,
      config: { duration, easing: easings[easing] },
    });
    Rectangle139StateApi.start({
      ...Rectangle139ScreenDesktopStep2,
      delay,
      config: { duration, easing: easings[easing] },
    });
    Rectangle141StateApi.start({
      ...Rectangle141ScreenDesktopStep2,
      delay,
      config: { duration, easing: easings[easing] },
    });
    SyncDsStateApi.start({
      ...SyncDsScreenDesktopStep2,
      delay,
      config: { duration, easing: easings[easing] },
    });
    ExportDesignStateApi.start({
      ...ExportDesignScreenDesktopStep2,
      delay,
      config: { duration, easing: easings[easing] },
    });
    SetupInQuestStateApi.start({
      ...SetupInQuestScreenDesktopStep2,
      delay,
      config: { duration, easing: easings[easing] },
    });
    ExportReactStateApi.start({
      ...ExportReactScreenDesktopStep2,
      delay,
      config: { duration, easing: easings[easing] },
    });
  };

  const switchStateToScreenDesktopStep3: (
    duration: number,
    delay: number,
    easing: string
  ) => void = (
    duration: number = 0,
    delay: number = 0,
    easing: string = 'linear'
  ) => {
    HighlightedBarStateApi.start({
      ...HighlightedBarScreenDesktopStep3,
      delay,
      config: { duration, easing: easings[easing] },
    });
    Rectangle139StateApi.start({
      ...Rectangle139ScreenDesktopStep3,
      delay,
      config: { duration, easing: easings[easing] },
    });
    Rectangle141StateApi.start({
      ...Rectangle141ScreenDesktopStep3,
      delay,
      config: { duration, easing: easings[easing] },
    });
    SyncDsStateApi.start({
      ...SyncDsScreenDesktopStep3,
      delay,
      config: { duration, easing: easings[easing] },
    });
    ExportDesignStateApi.start({
      ...ExportDesignScreenDesktopStep3,
      delay,
      config: { duration, easing: easings[easing] },
    });
    SetupInQuestStateApi.start({
      ...SetupInQuestScreenDesktopStep3,
      delay,
      config: { duration, easing: easings[easing] },
    });
    ExportReactStateApi.start({
      ...ExportReactScreenDesktopStep3,
      delay,
      config: { duration, easing: easings[easing] },
    });
  };

  const switchStateToScreenDesktopStep4: (
    duration: number,
    delay: number,
    easing: string
  ) => void = (
    duration: number = 0,
    delay: number = 0,
    easing: string = 'linear'
  ) => {
    HighlightedBarStateApi.start({
      ...HighlightedBarScreenDesktopStep4,
      delay,
      config: { duration, easing: easings[easing] },
    });
    Rectangle139StateApi.start({
      ...Rectangle139ScreenDesktopStep4,
      delay,
      config: { duration, easing: easings[easing] },
    });
    Rectangle141StateApi.start({
      ...Rectangle141ScreenDesktopStep4,
      delay,
      config: { duration, easing: easings[easing] },
    });
    SyncDsStateApi.start({
      ...SyncDsScreenDesktopStep4,
      delay,
      config: { duration, easing: easings[easing] },
    });
    ExportDesignStateApi.start({
      ...ExportDesignScreenDesktopStep4,
      delay,
      config: { duration, easing: easings[easing] },
    });
    SetupInQuestStateApi.start({
      ...SetupInQuestScreenDesktopStep4,
      delay,
      config: { duration, easing: easings[easing] },
    });
    ExportReactStateApi.start({
      ...ExportReactScreenDesktopStep4,
      delay,
      config: { duration, easing: easings[easing] },
    });
  };
  return (
    <ScreenDesktopStep1>
      <D>
        <Frame122>
          <BarHighlight>
            <Divider></Divider>
            <HighlightedBar
              data={data}
              style={{ ...HighlightedBarStateStyles }}
            >
              <Rectangle139
                data={data}
                style={{ ...Rectangle139StateStyles }}
              ></Rectangle139>
              <Rectangle141
                data={data}
                style={{ ...Rectangle141StateStyles }}
              ></Rectangle141>
            </HighlightedBar>
          </BarHighlight>
          <TextLinks>
            <SyncDs
              data={data}
              onClick={() => {
                switchStateToScreenDesktopStep1(500, 0, 'easeOutQuart');
                fns.setCurrentVariant('ScreenDesktopStep1');
              }}
              style={{ ...SyncDsStateStyles }}
            >
              {`Sync MUI Design System`}
            </SyncDs>
            <ExportDesign
              data={data}
              onClick={() => {
                switchStateToScreenDesktopStep2(500, 0, 'easeOutQuart');
                fns.setCurrentVariant('ScreenDesktopStep2');
              }}
              style={{ ...ExportDesignStateStyles }}
            >
              {`EXPORT DESIGN`}
            </ExportDesign>
            <SetupInQuest
              data={data}
              onClick={() => {
                switchStateToScreenDesktopStep3(500, 0, 'easeOutQuart');
                fns.setCurrentVariant('ScreenDesktopStep3');
              }}
              style={{ ...SetupInQuestStateStyles }}
            >
              {`SETUP IN QUEST`}
            </SetupInQuest>
            <ExportReact
              data={data}
              onClick={() => {
                switchStateToScreenDesktopStep4(500, 0, 'easeOutQuart');
                fns.setCurrentVariant('ScreenDesktopStep4');
              }}
              style={{ ...ExportReactStateStyles }}
            >
              {`EXPORT REACT CODE`}
            </ExportReact>
          </TextLinks>
        </Frame122>
        {!(data.currentVariant === 'ScreenDesktopStep2') &&
          !(data.currentVariant === 'ScreenDesktopStep3') &&
          !(data.currentVariant === 'ScreenDesktopStep4') && (
            <StepVisual1D
              src={`assets/images/HowitworksD_Step_Visual_1___D.png`}
              loading="lazy"
              alt={'Step Visual 1 - D'}
            />
          )}
        {data.currentVariant === 'ScreenDesktopStep2' && (
          <StepVisual2D
            src={`assets/images/HowitworksD_Step_Visual_2___D.png`}
            loading="lazy"
            alt={'Step Visual 2 - D'}
          />
        )}
        {data.currentVariant === 'ScreenDesktopStep3' && (
          <StepVisual3D
            src={`assets/images/HowitworksD_Step_Visual_3___D.png`}
            loading="lazy"
            alt={'Step Visual 3 - D'}
          />
        )}
        {data.currentVariant === 'ScreenDesktopStep4' && (
          <StepVisual4D
            src={`assets/images/HowitworksD_Step_Visual_4___D.png`}
            loading="lazy"
            alt={'Step Visual 4 - D'}
          />
        )}
      </D>
    </ScreenDesktopStep1>
  );
}

export default HowItWorksD;
