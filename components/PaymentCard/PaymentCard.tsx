/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import { TextField, Button, SvgIcon } from '@mui/material';
import { ReactComponent as ArrowForwardFilled1 } from 'assets/images/ArrowForwardFilled_2.svg';
import { ReactComponent as CheckCircleFilled1 } from 'assets/images/CheckCircleFilled_2.svg';
import { styled } from '@mui/material/styles';
import { PaymentCardProps } from 'types';

 
const ScreenDesktop: any = styled("div")({  
  backgroundColor: `rgba(255, 255, 255, 1)`,  
  boxShadow: `0px 8px 20px rgba(0, 0, 0, 0.25)`,  
  borderRadius: `10px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  width: `728px`,  
  height: `574px`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `40px`,  
  boxSizing: `border-box`,  
  overflow: `hidden`,  
});
  
const Image: any = styled("div")({  
  backgroundImage: `url(assets/images/PaymentCard_image.png)`,  
  backgroundPosition: `center`,  
  backgroundSize: `cover`,  
  backgroundRepeat: `no-repeat`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  alignSelf: `stretch`,  
  width: `304px`,  
  margin: `0px`,  
});
  
const Form: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `space-between`,  
  alignItems: `flex-end`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  width: `304px`,  
  margin: `0px 0px 0px 40px`,  
});
  
const Frame1: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
});
  
const TextTop: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  width: `304px`,  
  margin: `0px`,  
});
  
const TopRow: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `space-between`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const Text: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
});
  
const ConfirmPurchase: any = styled("div")(({ theme }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,  
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,  
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,  
  fontSize: theme.typography["Typography"]["H5"].fontSize,  
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,  
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,  
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,  
  textTransform: theme.typography["Typography"]["H5"].textTransform,  
  margin: `0px`,  
}));
  
const ItemName: any = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `20px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `2px 0px 0px 0px`,  
});
  
const ItemPrice: any = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `18px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `2px 0px 0px 0px`,  
});
  
const X: any = styled("img")({  
  height: `12px`,  
  width: `12px`,  
});
  
const Frame3: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  width: `304px`,  
  margin: `24px 0px 0px 0px`,  
});
  
const Row1: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const TextFieldStandard: any = styled(TextField)({  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const TextFieldStandard1: any = styled(TextField)({  
  alignSelf: `stretch`,  
  margin: `30px 0px 0px 0px`,  
});
  
const Row2: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `40px 0px 0px 0px`,  
});
  
const TextFieldStandard2: any = styled(TextField)({  
  width: `58px`,  
  margin: `0px`,  
});
  
const TextFieldStandard3: any = styled(TextField)({  
  flexGrow: `1`,  
  margin: `0px 0px 0px 30px`,  
});
  
const Q123: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-end`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
});
  
const AutoAddedFrame: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-end`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const ButtonContained: any = styled(Button)({  
  margin: `0px`,  
});
  
const Success: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `center`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  width: `304px`,  
  margin: `0px 0px 0px 40px`,  
});
  
const Text1: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Frame2: any = styled("div")({  
  borderRadius: `40px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `center`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  height: `30px`,  
  width: `30px`,  
  margin: `0px`,  
  overflow: `hidden`,  
});
  
const Icon1: any = styled(SvgIcon)(({ theme }: any) =>({  
  color: theme.palette["Action"]["Active (54p)"],  
  margin: `0px`,  
}));
  
const Frame11: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `14px 0px 0px 0px`,  
});
  
const PaymentConfirmed: any = styled("div")(({ theme }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,  
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,  
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,  
  fontSize: theme.typography["Typography"]["H5"].fontSize,  
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,  
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,  
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,  
  textTransform: theme.typography["Typography"]["H5"].textTransform,  
  margin: `0px`,  
}));
  
const AConfirmationEmailHa: any = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `18px`,  
  letterSpacing: `0.36px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `4px 0px 0px 0px`,  
});
  
const Text2: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `60px 0px 0px 0px`,  
});
  
const OrderReference: any = styled("div")(({ theme }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,  
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,  
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,  
  fontSize: theme.typography["Typography"]["H5"].fontSize,  
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,  
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,  
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,  
  textTransform: theme.typography["Typography"]["H5"].textTransform,  
  margin: `0px`,  
}));
  
const Q0021488192: any = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `18px`,  
  letterSpacing: `0.36px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `4px 0px 0px 0px`,  
});
  
const TopRow1: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `space-between`,  
  alignItems: `flex-start`,  
  alignSelf: `stretch`,  
  height: `94px`,  
  margin: `4px 0px 0px 0px`,  
});
 
function PaymentCard(props: PaymentCardProps): JSX.Element {
  return (
    <ScreenDesktop className={props.className} >
      <Image >
      </Image>
      <Form >
        <Frame1 >
          <TextTop >
            <TopRow >
              <Text >
                <ConfirmPurchase >
                  {`Confirm Purchase`}
                    </ConfirmPurchase>
                <ItemName >
                  {`Moonbase Outfit`}
                    </ItemName>
                <ItemPrice >
                  {`$29.00`}
                    </ItemPrice>
              </Text>
              <X  src={`assets/images/PaymentCard_x.png`} alt={"x"}/>
            </TopRow>
          </TextTop>
          <Frame3 >
            <Row1 >
              <TextFieldStandard variant="standard" size="small"  label={`Name on Card`} helperText="Helper text"    />
              <TextFieldStandard1 variant="standard" size="small"  label={`Card Number`} helperText="Helper text"    />
            </Row1>
            <Row2 >
              <TextFieldStandard2 variant="standard" size="small"  label={`CVV`} helperText="Helper"    />
              <TextFieldStandard3 variant="standard" size="small"  label={`Valid Through`} helperText="Helper"    />
            </Row2>
          </Frame3>
        </Frame1>
        <Q123 >
          <AutoAddedFrame >
            <ButtonContained variant="contained" size="large" color="primary"   endIcon={ <SvgIcon sx={{width: "18px", height: "22px"}} component = { ArrowForwardFilled1 } />}  > BUY </ButtonContained>
          </AutoAddedFrame>
        </Q123>
      </Form>
      {false &&
        <Success >
          <Text1 >
            <Frame2 >
              <Icon1    fontSize = { "large"}  component = { CheckCircleFilled1}/>
            </Frame2>
            <Frame11 >
              <PaymentConfirmed >
                {`Payment Confirmed!`}
                  </PaymentConfirmed>
              <AConfirmationEmailHa >
                {`A confirmation email 
has been sent.`}
                  </AConfirmationEmailHa>
            </Frame11>
          </Text1>
          <Text2 >
            <OrderReference >
              {`Order Reference #`}
                </OrderReference>
            <Q0021488192 >
              {`0021488192`}
                </Q0021488192>
            <TopRow1 >
            </TopRow1>
          </Text2>
        </Success>
      }
    </ScreenDesktop>
  );
}

export default PaymentCard;
