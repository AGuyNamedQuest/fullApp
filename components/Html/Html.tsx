/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button } from '@mui/material';
import Link from 'next/link';
import { styled } from '@mui/material/styles';
import Navbar from 'components/Navbar/Navbar';
import Footer from 'components/Footer/Footer';
import { HtmlProps } from 'types';
import useHtml from 'components/Html/useHtml';

const Property1HtmlD: any = styled('div')({
  backgroundColor: `rgba(23, 23, 23, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: 'auto',
});

const Navbar1: any = styled(Navbar)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Page: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const HeroD: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/HTML_hero___d.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1HTMLT'
      ? `flex-start`
      : data.currentVariant === 'Property1HTMLM'
      ? `flex-start`
      : `center`,
  padding: `80px 180px 0px 131px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `520px`
      : data.currentVariant === 'Property1HTMLM'
      ? `520px`
      : `466px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `50px 0px 0px 0px`
      : `0px`,
  overflow: `hidden`,
}));

const HeroAll: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent:
    data.currentVariant === 'Property1HTMLT'
      ? `flex-start`
      : data.currentVariant === 'Property1HTMLM'
      ? `flex-start`
      : `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? 'unset'
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `1129px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1HTMLT'
      ? `stretch`
      : data.currentVariant === 'Property1HTMLM'
      ? `stretch`
      : 'unset',
}));

const ActionsIcon: any = styled('img')({
  height: `49px`,
  width: `49px`,
  margin: `0px`,
});

const HeroContent: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px 0px 0px 3px`,
});

const HeroTxtSpan1: any = styled('span')({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `110px`,
  letterSpacing: `-3px`,
  textDecoration: `none`,
  lineHeight: `92px`,
  textTransform: `none`,
  textAlign: 'unset',
  margin: 'unset',
});

const HeroTxtSpan2: any = styled('span')({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `110px`,
  letterSpacing: `-3px`,
  textDecoration: `none`,
  lineHeight: `92px`,
  textTransform: `none`,
  textAlign: 'unset',
  margin: 'unset',
});

const HeroTxtSpan3: any = styled('span')({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `110px`,
  letterSpacing: `-3px`,
  textDecoration: `none`,
  lineHeight: `92px`,
  textTransform: `none`,
  textAlign: 'unset',
  margin: 'unset',
});

const HeroTxt: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `110px`,
  letterSpacing: `-3px`,
  textDecoration: `none`,
  lineHeight: `92px`,
  textTransform: `none`,
  margin: `0px`,
});

const Frame173: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `38px 0px 0px 0px`,
});

const HeroSub: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight:
    data.currentVariant === 'Property1HTMLT'
      ? `700`
      : data.currentVariant === 'Property1HTMLM'
      ? `700`
      : `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  width: `400px`,
  margin: `0px`,
}));

const ButtonOutlined: any = styled(Button)({
  margin: `0px 0px 0px 25px`,
});

const Hero: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/HTML_hero.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1HTMLT'
      ? `center`
      : data.currentVariant === 'Property1HTMLM'
      ? `center`
      : `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `80px 180px 20px 154px`
      : data.currentVariant === 'Property1HTMLM'
      ? `50px 8px 54px 8px`
      : `80px 180px 20px 44px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px`
      : `50px 0px 0px 0px`,
  overflow: `hidden`,
}));

const HeroAll1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent:
    data.currentVariant === 'Property1HTMLT' ? `center` : `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `652px`
      : data.currentVariant === 'Property1HTMLM'
      ? `359px`
      : 'unset',
}));

const ActionsIcon1: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height: data.currentVariant === 'Property1HTMLM' ? `24px` : `36px`,
  width: data.currentVariant === 'Property1HTMLM' ? `24px` : `36px`,
  margin: `0px`,
}));

const HeroContent1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px 0px 0px 3px`,
  flexGrow: data.currentVariant === 'Property1HTMLM' ? `1` : 'unset',
}));

const HeroTxt1Span1: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `46px` : `68px`,
  letterSpacing: data.currentVariant === 'Property1HTMLM' ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `42px` : `60px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
}));

const HeroTxt1Span2: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `46px` : `68px`,
  letterSpacing: data.currentVariant === 'Property1HTMLM' ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `42px` : `60px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
}));

const HeroTxt1Span3: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `46px` : `68px`,
  letterSpacing: data.currentVariant === 'Property1HTMLM' ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `42px` : `60px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
}));

const HeroTxt1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `46px` : `68px`,
  letterSpacing: data.currentVariant === 'Property1HTMLM' ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `42px` : `60px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? `296px` : `613px`,
  margin: `0px`,
}));

const HeroSub1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `28px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? `243px` : `468px`,
  margin: `25px 0px 0px 0px`,
}));

const ButtonOutlined1: any = styled(Button)({
  margin: `25px 0px 0px 0px`,
});

const Sec2A: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
});

const Banner: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const SpecialPricing: any = styled('div')({
  border: `2px solid rgba(88, 88, 88, 1)`,
  boxSizing: `border-box`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `19px 24px`,
  flexGrow: `1`,
  margin: `0px`,
});

const TheProblem: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1HTMLM' ? `column` : `row`,
  justifyContent:
    data.currentVariant === 'Property1HTMLM' ? `center` : `flex-start`,
  alignItems:
    data.currentVariant === 'Property1HTMLM' ? `flex-start` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
}));

const ThisWebsite: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px`,
});

const QuestPlusNext: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1HTMLM'
      ? `16px 0px 0px 0px`
      : `0px 0px 0px 16px`,
}));

const Quest23: any = styled('img')({
  height: `27.4px`,
  width: `111.67px`,
  objectFit: `cover`,
  margin: `0px`,
});

const Plus: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: `34.052730560302734px`,
  letterSpacing: `0.14071376621723175px`,
  textDecoration: `none`,
  lineHeight: `40.244136810302734px`,
  textTransform: `none`,
  margin: `0px 0px 0px 13.391745567321777px`,
});

const NextjsIcon: any = styled('img')({
  height: `19.73px`,
  width: `97.87px`,
  margin: `0px 0px 0px 13.391745567321777px`,
});

const Sec2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(40, 39, 39, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1HTMLT'
      ? `column`
      : data.currentVariant === 'Property1HTMLM'
      ? `column`
      : `row`,
  justifyContent:
    data.currentVariant === 'Property1HTMLT'
      ? `flex-start`
      : data.currentVariant === 'Property1HTMLM'
      ? `flex-start`
      : `center`,
  alignItems:
    data.currentVariant === 'Property1HTMLT'
      ? `center`
      : data.currentVariant === 'Property1HTMLM'
      ? `center`
      : `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `70px 54px 0px 54px`
      : data.currentVariant === 'Property1HTMLM'
      ? `60px 36px 120px 36px`
      : `40px 180px 0px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  height: data.currentVariant === 'Property1HTMLM' ? `709px` : 'unset',
}));

const Sec2Sub: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1HTMLT'
      ? `column`
      : data.currentVariant === 'Property1HTMLM'
      ? `column`
      : `row`,
  justifyContent:
    data.currentVariant === 'Property1HTMLT'
      ? `flex-start`
      : data.currentVariant === 'Property1HTMLM'
      ? `flex-start`
      : `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? 'unset'
      : data.currentVariant === 'Property1HTMLM'
      ? `302.32px`
      : `1080px`,
  margin: `0px`,
}));

const BuildWithTheTools: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent:
    data.currentVariant === 'Property1HTMLM' ? `flex-start` : `center`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 120px 0px 30px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px`
      : `0px 30px 0px 0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `660px`
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `518px`,
  height:
    data.currentVariant === 'Property1HTMLT'
      ? 'unset'
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `502px`,
  margin: `0px`,
}));

const Frame167: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLT' ? `stretch` : 'unset',
}));

const Title: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `52px`
      : data.currentVariant === 'Property1HTMLM'
      ? `30px`
      : `50px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `30px` : `52px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? 'unset'
      : data.currentVariant === 'Property1HTMLM'
      ? `254px`
      : `488px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLT' ? `stretch` : 'unset',
}));

const SimplyBring: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `26px` : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? 'unset'
      : data.currentVariant === 'Property1HTMLM'
      ? `254px`
      : `488px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `13px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `13px 0px 0px 0px`
      : `14px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'Property1HTMLT' ? `stretch` : 'unset',
}));

const ButtonOutlined2: any = styled(Button)({
  margin: `26px 0px 0px 0px`,
});

const FigmaToReactWithMui: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `530px`
      : data.currentVariant === 'Property1HTMLM'
      ? `251px`
      : `502px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `660px`
      : data.currentVariant === 'Property1HTMLM'
      ? `302.32px`
      : `562px`,
  margin: data.currentVariant === 'Property1HTMLM' ? `17px 0px 0px 0px` : `0px`,
}));

const Benefits: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1HTMLM' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 36px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 36px`
      : `0px 184px 60px 184px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
  minWidth:
    data.currentVariant === 'Property1HTMLT'
      ? `unset`
      : data.currentVariant === 'Property1HTMLM'
      ? `unset`
      : `1219px`,
}));

const DesignWithoutLimits: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flexGrow: data.currentVariant === 'Property1HTMLM' ? 'unset' : `1`,
  margin: `0px`,
}));

const DesignToLiveHtml: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ImportYourDifferen: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLM' ? `0px` : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `26px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const ExportToCode: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flexGrow: data.currentVariant === 'Property1HTMLM' ? 'unset' : `1`,
  margin:
    data.currentVariant === 'Property1HTMLM'
      ? `44px 0px 0px 0px`
      : `0px 0px 0px 44px`,
}));

const DesignToLiveHtml1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ImportYourDifferen1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `26px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const LaunchAndDone: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flexGrow: data.currentVariant === 'Property1HTMLM' ? 'unset' : `1`,
  margin:
    data.currentVariant === 'Property1HTMLM'
      ? `44px 0px 0px 0px`
      : `0px 0px 0px 44px`,
}));

const DesignToLiveHtml2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ImportYourDifferen2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLM' ? `0px` : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `26px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Sec8: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1HTMLT'
      ? `column`
      : data.currentVariant === 'Property1HTMLM'
      ? `column`
      : `row`,
  justifyContent:
    data.currentVariant === 'Property1HTMLT'
      ? `flex-start`
      : data.currentVariant === 'Property1HTMLM'
      ? `flex-start`
      : `center`,
  alignItems:
    data.currentVariant === 'Property1HTMLT'
      ? `center`
      : data.currentVariant === 'Property1HTMLM'
      ? `center`
      : `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 100px 80px 100px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 36px 50px 36px`
      : `80px 100px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const SecText: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px 30px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1HTMLT'
      ? 'unset'
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `stretch`,
  width: `466px`,
  margin: `0px`,
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `1px`
      : data.currentVariant === 'Property1HTMLM'
      ? `1px`
      : 'unset',
}));

const Txt: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `22px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px 0px 0px 0px`
      : `0px`,
}));

const TakeDesignToLaunc: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `42px`
      : data.currentVariant === 'Property1HTMLM'
      ? `42px`
      : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: `54px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const NeoFromQuestAiEm: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `28px`
      : data.currentVariant === 'Property1HTMLM'
      ? `28px`
      : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? 'unset'
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `406px`,
  margin: `16px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1HTMLT'
      ? `stretch`
      : data.currentVariant === 'Property1HTMLM'
      ? `stretch`
      : 'unset',
}));

const Card: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height: data.currentVariant === 'Property1HTMLM' ? `231.83px` : `347px`,
  width: data.currentVariant === 'Property1HTMLM' ? `329.37px` : `493px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `36px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `36px 0px 0px 0px`
      : `0px 0px 0px 36px`,
}));

const SecText1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px 30px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'Property1HTMLT' ? 'unset' : `stretch`,
  width: data.currentVariant === 'Property1HTMLM' ? 'unset' : `466px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `36px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `36px 0px 0px 0px`
      : `0px 0px 0px 36px`,
}));

const Txt1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TakeDesignToLaunc1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `42px`
      : data.currentVariant === 'Property1HTMLM'
      ? `30px`
      : `52px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `30px` : `54px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const NeoFromQuestAiEm1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `24px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `30px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `36px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `16px 0px 0px 0px`,
}));

const Sec4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 80px 20px 80px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 30px 20px 30px`
      : `0px 180px 20px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Divider: any = styled('div')({
  backgroundColor: `rgba(46, 46, 46, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `2px`,
  margin: `0px`,
});

const TheProblem1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `34px`
      : data.currentVariant === 'Property1HTMLM'
      ? `32px`
      : `36px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT' ? `0px` : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `36px`
      : data.currentVariant === 'Property1HTMLM'
      ? `32px`
      : `38px`,
  textTransform: `none`,
  alignSelf: data.currentVariant === 'Property1HTMLT' ? 'unset' : `stretch`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `42px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `42px 0px 0px 0px`
      : `62px 0px 0px 0px`,
  width: data.currentVariant === 'Property1HTMLT' ? `483px` : 'unset',
}));

const Bullets: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `607px`
      : data.currentVariant === 'Property1HTMLM'
      ? `315px`
      : `1010px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `42px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `42px 0px 0px 0px`
      : `62px 0px 0px 0px`,
}));

const BulletsRow: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1HTMLM' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1HTMLM' ? `center` : `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const BulletsRow2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  border: `2px solid rgba(88, 88, 88, 1)`,
  boxSizing: `border-box`,
  borderRadius:
    data.currentVariant === 'Property1HTMLT'
      ? `7.211881637573242px`
      : data.currentVariant === 'Property1HTMLM'
      ? `7.211881637573242px`
      : `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `24.03960418701172px 18.02970314025879px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24.03960418701172px 18.02970314025879px`
      : `40px 30px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `294.49px`
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `490px`,
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `105.17px`
      : data.currentVariant === 'Property1HTMLM'
      ? `130px`
      : `175px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const TheProblem2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `143.04px`
      : data.currentVariant === 'Property1HTMLM'
      ? `143.04px`
      : `238px`,
  margin: `0px`,
}));

const TheProblem3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `28px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `0.054635465145111084px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0.054635465145111084px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `18.02970314025879px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18.02970314025879px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ForAgencies: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `12px`
      : data.currentVariant === 'Property1HTMLM'
      ? `12px`
      : `18px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `15px`
      : data.currentVariant === 'Property1HTMLM'
      ? `15px`
      : `26px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `119px`
      : data.currentVariant === 'Property1HTMLM'
      ? `119px`
      : `198px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `4.807920932769775px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `4.807920932769775px 0px 0px 0px`
      : `8px 0px 0px 0px`,
}));

const Devices: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `8.366911888122559px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `8.366911888122559px 0px`
      : `13.921879768371582px 0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 0px 0px 2.4039604663848877px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 0px 0px 2.4039604663848877px`
      : `0px 0px 0px 4px`,
}));

const RouteSettings: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `61.3px`
      : data.currentVariant === 'Property1HTMLM'
      ? `61.3px`
      : `102px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `115.99px`
      : data.currentVariant === 'Property1HTMLM'
      ? `115.99px`
      : `193px`,
  objectFit: `cover`,
  margin: `0px`,
}));

const BulletPoint1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  border: `2px solid rgba(88, 88, 88, 1)`,
  boxSizing: `border-box`,
  borderRadius:
    data.currentVariant === 'Property1HTMLT'
      ? `7.211881637573242px`
      : data.currentVariant === 'Property1HTMLM'
      ? `7.211881637573242px`
      : `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `24.03960418701172px 18.02970314025879px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24.03960418701172px 18.02970314025879px`
      : `40px 30px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `294.49px`
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `490px`,
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `105.17px`
      : data.currentVariant === 'Property1HTMLM'
      ? `105.17px`
      : `175px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 0px 0px 18.630693435668945px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18.630693435668945px 0px 0px 0px`
      : `0px 0px 0px 31px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const Group127: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `55.29px`
      : data.currentVariant === 'Property1HTMLM'
      ? `55.29px`
      : `92px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `55.29px`
      : data.currentVariant === 'Property1HTMLM'
      ? `55.29px`
      : `92px`,
  margin: `0px`,
}));

const TheProblem4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 0px 0px 19.2316837310791px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 0px 0px 19.2316837310791px`
      : `0px 0px 0px 32px`,
}));

const TheProblem5: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `28px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `0.054635465145111084px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0.054635465145111084px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `18.02970314025879px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18.02970314025879px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ForAgencies1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `12px`
      : data.currentVariant === 'Property1HTMLM'
      ? `12px`
      : `18px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `15px`
      : data.currentVariant === 'Property1HTMLM'
      ? `15px`
      : `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `3.5702381134033203px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `3.5702381134033203px 0px 0px 0px`
      : `5.940593719482422px 0px 0px 0px`,
}));

const BulletsRow1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1HTMLM' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1HTMLM' ? `center` : `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `18.02970314025879px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18.02970314025879px 0px 0px 0px`
      : `30px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const BulletsRow21: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  border: `2px solid rgba(88, 88, 88, 1)`,
  boxSizing: `border-box`,
  borderRadius:
    data.currentVariant === 'Property1HTMLT'
      ? `7.211881637573242px`
      : data.currentVariant === 'Property1HTMLM'
      ? `7.211881637573242px`
      : `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `24.03960418701172px 18.02970314025879px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24.03960418701172px 18.02970314025879px`
      : `40px 30px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `294.49px`
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `490px`,
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `136.42px`
      : data.currentVariant === 'Property1HTMLM'
      ? `136.42px`
      : `227px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const TheProblem6: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `134.02px`
      : data.currentVariant === 'Property1HTMLM'
      ? `134.02px`
      : `223px`,
  margin: `0px`,
}));

const TheProblem7: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `28px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `0.054635465145111084px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0.054635465145111084px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `18.02970314025879px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18.02970314025879px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ForAgencies2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `12px`
      : data.currentVariant === 'Property1HTMLM'
      ? `12px`
      : `18px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `15px`
      : data.currentVariant === 'Property1HTMLM'
      ? `15px`
      : `26px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `121.4px`
      : data.currentVariant === 'Property1HTMLM'
      ? `121.4px`
      : `202px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `4.807920932769775px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `4.807920932769775px 0px 0px 0px`
      : `8px 0px 0px 0px`,
}));

const Devices1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `8.366911888122559px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `8.366911888122559px 0px`
      : `13.921879768371582px 0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 0px 0px 2.4039604663848877px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 0px 0px 2.4039604663848877px`
      : `0px 0px 0px 4px`,
}));

const Mobile: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `35.64px`
      : data.currentVariant === 'Property1HTMLM'
      ? `35.64px`
      : `59.3px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `21.38px`
      : data.currentVariant === 'Property1HTMLM'
      ? `21.38px`
      : `35.58px`,
  margin: `0px`,
}));

const Tablet: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `42.76px`
      : data.currentVariant === 'Property1HTMLM'
      ? `42.76px`
      : `71.16px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `32.07px`
      : data.currentVariant === 'Property1HTMLM'
      ? `32.07px`
      : `53.37px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 0px 0px 10.817822456359863px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 0px 0px 10.817822456359863px`
      : `0px 0px 0px 18px`,
}));

const Desktop: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `33.85px`
      : data.currentVariant === 'Property1HTMLM'
      ? `33.85px`
      : `56.33px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `42.76px`
      : data.currentVariant === 'Property1HTMLM'
      ? `42.76px`
      : `71.16px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 0px 0px 10.817822456359863px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 0px 0px 10.817822456359863px`
      : `0px 0px 0px 18px`,
}));

const BulletPoint11: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  border: `2px solid rgba(88, 88, 88, 1)`,
  boxSizing: `border-box`,
  borderRadius:
    data.currentVariant === 'Property1HTMLT'
      ? `7.211881637573242px`
      : data.currentVariant === 'Property1HTMLM'
      ? `7.211881637573242px`
      : `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `24.03960418701172px 18.02970314025879px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24.03960418701172px 18.02970314025879px`
      : `40px 30px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `294.49px`
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `490px`,
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `136.42px`
      : data.currentVariant === 'Property1HTMLM'
      ? `136.42px`
      : `227px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 0px 0px 18.630693435668945px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18.630693435668945px 0px 0px 0px`
      : `0px 0px 0px 31px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const AnimIconHolder: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `41px`
      : data.currentVariant === 'Property1HTMLM'
      ? `40px`
      : `66px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `66px`
      : data.currentVariant === 'Property1HTMLM'
      ? `67px`
      : `111px`,
  margin: `0px`,
}));

const TheProblem8: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 0px 0px 19.2316837310791px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 0px 0px 19.2316837310791px`
      : `0px 0px 0px 32px`,
}));

const TheProblem9: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `28px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `0.054635465145111084px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0.054635465145111084px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `18.02970314025879px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18.02970314025879px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ForAgencies3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `12px`
      : data.currentVariant === 'Property1HTMLM'
      ? `12px`
      : `18px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `15px`
      : data.currentVariant === 'Property1HTMLM'
      ? `15px`
      : `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `3.5702381134033203px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `3.5702381134033203px 0px 0px 0px`
      : `5.940593719482422px 0px 0px 0px`,
}));

const BulletsRow3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1HTMLM' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1HTMLM' ? `center` : `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `18.02970314025879px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18.02970314025879px 0px 0px 0px`
      : `30px 0px 0px 0px`,
}));

const BulletPoint4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  border: `2px solid rgba(88, 88, 88, 1)`,
  boxSizing: `border-box`,
  borderRadius:
    data.currentVariant === 'Property1HTMLT'
      ? `7.211881637573242px`
      : data.currentVariant === 'Property1HTMLM'
      ? `7.211881637573242px`
      : `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `18.02970314025879px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18.02970314025879px`
      : `30px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `294.49px`
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `490px`,
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `229px`
      : data.currentVariant === 'Property1HTMLM'
      ? `229px`
      : `347px`,
  margin: `0px`,
  overflow: `hidden`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const ImgGooglefonts: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `85.94px`
      : data.currentVariant === 'Property1HTMLM'
      ? `85.94px`
      : `143px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `219.96px`
      : data.currentVariant === 'Property1HTMLM'
      ? `219.96px`
      : `366px`,
  objectFit: `contain`,
  margin: `0px`,
}));

const TheProblem10: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `12.01980209350586px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `12.01980209350586px 0px 0px 0px`
      : `20px 0px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `1.2019802331924438px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `1.2019802331924438px 0px 0px 0px`
      : `-12px 0px 0px 0px`,
}));

const TheProblem11: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `28px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `0.054635465145111084px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0.054635465145111084px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `18.02970314025879px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18.02970314025879px`
      : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `221.77px`
      : data.currentVariant === 'Property1HTMLM'
      ? `221.77px`
      : `369px`,
  margin: `0px`,
}));

const ForAgencies4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `12px`
      : data.currentVariant === 'Property1HTMLM'
      ? `12px`
      : `18px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `15px`
      : data.currentVariant === 'Property1HTMLM'
      ? `15px`
      : `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `4.206930637359619px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `4.206930637359619px 0px 0px 0px`
      : `7px 0px 0px 0px`,
}));

const BulletPoint6: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  border: `2px solid rgba(88, 88, 88, 1)`,
  boxSizing: `border-box`,
  borderRadius:
    data.currentVariant === 'Property1HTMLT'
      ? `7.211881637573242px`
      : data.currentVariant === 'Property1HTMLM'
      ? `7.211881637573242px`
      : `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `18.02970314025879px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18.02970314025879px`
      : `30px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `294.49px`
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `490px`,
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `229px`
      : data.currentVariant === 'Property1HTMLM'
      ? `216px`
      : `347px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 0px 0px 18.02970314025879px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18.02970314025879px 0px 0px 0px`
      : `0px 0px 0px 30px`,
  overflow: `hidden`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const PinIcon2: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `88.31px`
      : data.currentVariant === 'Property1HTMLM'
      ? `90.77px`
      : `125px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `88.31px`
      : data.currentVariant === 'Property1HTMLM'
      ? `90.77px`
      : `125px`,
  margin: `0px`,
}));

const TheProblem12: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `12.01980209350586px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `12.01980209350586px 0px 0px 0px`
      : `20px 0px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `1.2019802331924438px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `1.2019802331924438px 0px 0px 0px`
      : `5px 0px 0px 0px`,
}));

const TheProblem13: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `28px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `0.054635465145111084px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0.054635465145111084px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `18.02970314025879px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18.02970314025879px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ForAgencies5: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `12px`
      : data.currentVariant === 'Property1HTMLM'
      ? `12px`
      : `18px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px`
      : `-0.4000000059604645px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `15px`
      : data.currentVariant === 'Property1HTMLM'
      ? `15px`
      : `26px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `243px`
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `370px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `4.206930637359619px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `4.206930637359619px 0px 0px 0px`
      : `7px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const FaQs: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 84px`
      : data.currentVariant === 'Property1HTMLM'
      ? `60px 36px 0px 36px`
      : `100px 221px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const FaQs1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Faq: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `44px`
      : data.currentVariant === 'Property1HTMLM'
      ? `44px`
      : `56px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: `62px`,
  textTransform: `none`,
  flexGrow: data.currentVariant === 'Property1HTMLM' ? 'unset' : `1`,
  margin: `0px`,
}));

const FaQs2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1HTMLM' ? `flex-start` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1HTMLM'
      ? `52px 0px 0px 0px`
      : `32px 0px 0px 0px`,
}));

const Row: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Frame126: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const GameChangingFeatur: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `28px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `32px`
      : data.currentVariant === 'Property1HTMLM'
      ? `26px`
      : `34px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `516px`
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `427px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const NeoFromQuestAiEm2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `24px` : `30px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? 'unset' : `572px`,
  margin: `6px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const Divider1: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  alignSelf: `stretch`,
  height: `1px`,
  margin: `30px 0px 0px 0px`,
});

const Row1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Frame1261: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const GameChangingFeatur1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `28px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `32px`
      : data.currentVariant === 'Property1HTMLM'
      ? `26px`
      : `34px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `516px`
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `461px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const NeoFromQuestAiEm3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `24px` : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? 'unset'
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `572px`,
  margin: `6px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1HTMLT'
      ? `stretch`
      : data.currentVariant === 'Property1HTMLM'
      ? `stretch`
      : 'unset',
}));

const Divider2: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  alignSelf: `stretch`,
  height: `1px`,
  margin: `30px 0px 0px 0px`,
});

const Row2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Frame1262: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const GameChangingFeatur2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `28px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `32px`
      : data.currentVariant === 'Property1HTMLM'
      ? `26px`
      : `34px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? 'unset' : `516px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const NeoFromQuestAiEm4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `24px` : `30px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? 'unset' : `572px`,
  margin: `6px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const Divider3: any = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  alignSelf: `stretch`,
  height: `1px`,
  margin: `30px 0px 0px 0px`,
});

const DiscoverSec: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `70px 84px 50px 84px`
      : data.currentVariant === 'Property1HTMLM'
      ? `70px 30px 40px 30px`
      : `70px 300px 60px 300px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Frame127: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `600px`
      : data.currentVariant === 'Property1HTMLM'
      ? `315px`
      : `840px`,
  margin: `0px`,
}));

const Subtitle: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon2: any = styled('img')({
  height: `14px`,
  width: `12.95px`,
  margin: `0px`,
});

const NeoFromQuestAiEm5: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: `385.7px`,
  margin: `0px 0px 0px 6px`,
});

const DiscoverTheSpan1: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `54px`
      : data.currentVariant === 'Property1HTMLM'
      ? `30px`
      : `66px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `52px`
      : data.currentVariant === 'Property1HTMLM'
      ? `30px`
      : `62px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const DiscoverTheSpan2: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `54px`
      : data.currentVariant === 'Property1HTMLM'
      ? `30px`
      : `66px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `52px`
      : data.currentVariant === 'Property1HTMLM'
      ? `30px`
      : `62px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const DiscoverTheSpan3: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `54px`
      : data.currentVariant === 'Property1HTMLM'
      ? `30px`
      : `66px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `52px`
      : data.currentVariant === 'Property1HTMLM'
      ? `30px`
      : `62px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const DiscoverThe: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `54px`
      : data.currentVariant === 'Property1HTMLM'
      ? `30px`
      : `66px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `52px`
      : data.currentVariant === 'Property1HTMLM'
      ? `30px`
      : `62px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `18px 0px 0px 0px`,
}));

const ImportYourDifferen3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight:
    data.currentVariant === 'Property1HTMLT'
      ? `500`
      : data.currentVariant === 'Property1HTMLM'
      ? `500`
      : `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `26px`
      : data.currentVariant === 'Property1HTMLM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `473px`
      : data.currentVariant === 'Property1HTMLM'
      ? `266px`
      : `634px`,
  margin: `18px 0px 0px 0px`,
}));

const JoinUs: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 0px 100px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 0px 100px 0px`
      : `0px 0px 160px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const JoinUsOnOurMissi: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `38px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight: `40px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? `249px` : `383px`,
  margin: `0px`,
}));

const ButtonOutlined3: any = styled(Button)({
  margin: `25px 0px 0px 0px`,
});

const Footer1: any = styled(Footer, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `768px`
      : data.currentVariant === 'Property1HTMLM'
      ? `375px`
      : `1440px`,
  margin: `50px 0px 0px 0px`,
}));

function Html(props: HtmlProps): JSX.Element {
  const { data } = useHtml();

  return (
    <Property1HtmlD>
      <Navbar1 />
      <Page>
        {!(data.currentVariant === 'Property1HTMLT') &&
          !(data.currentVariant === 'Property1HTMLM') && (
            <HeroD data={data}>
              <HeroAll data={data}>
                <ActionsIcon
                  src={`assets/images/HTML_Actions_Icon.png`}
                  loading="lazy"
                  alt={'Actions Icon'}
                />
                <HeroContent>
                  <HeroTxt>
                    <HeroTxtSpan1>{`Convert your design
into a `}</HeroTxtSpan1>
                    <HeroTxtSpan2>{`launch
`}</HeroTxtSpan2>
                    <HeroTxtSpan3>{`ready website`}</HeroTxtSpan3>
                  </HeroTxt>
                  <Frame173>
                    <HeroSub data={data}>
                      {`Design what you want and automatically bring pixel-perfect, responsive sites to life.`}
                    </HeroSub>
                    <Link href="/pricing">
                      <ButtonOutlined
                        variant="outlined"
                        size="large"
                        color="primary"
                      >
                        {' '}
                        Build for Free{' '}
                      </ButtonOutlined>
                    </Link>
                  </Frame173>
                </HeroContent>
              </HeroAll>
            </HeroD>
          )}
        {(data.currentVariant === 'Property1HTMLT' ||
          data.currentVariant === 'Property1HTMLM') && (
          <Hero data={data}>
            <HeroAll1 data={data}>
              <ActionsIcon1
                data={data}
                src={`assets/images/HTML_Actions_Icon_1.png`}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <HeroContent1 data={data}>
                <HeroTxt1 data={data}>
                  <HeroTxt1Span1
                    data={data}
                  >{`Convert your design into a `}</HeroTxt1Span1>
                  <HeroTxt1Span2 data={data}>{`launch `}</HeroTxt1Span2>
                  <HeroTxt1Span3 data={data}>{`ready website`}</HeroTxt1Span3>
                </HeroTxt1>
                <HeroSub1 data={data}>
                  {`Design what you want and automatically bring pixel-perfect, responsive sites to life. `}
                </HeroSub1>
                <Link href="/pricing">
                  <ButtonOutlined1
                    variant="outlined"
                    size="large"
                    color="primary"
                  >
                    {' '}
                    Build for Free{' '}
                  </ButtonOutlined1>
                </Link>
              </HeroContent1>
            </HeroAll1>
          </Hero>
        )}
        <Sec2A>
          <Banner>
            <SpecialPricing>
              <TheProblem data={data}>
                <ThisWebsite>{`*This website was built with`}</ThisWebsite>
                <QuestPlusNext data={data}>
                  <Quest23
                    src={`assets/images/HTML_Quest2_3.png`}
                    loading="lazy"
                    alt={'Quest2 3'}
                  />
                  <Plus>{`+`}</Plus>
                  <NextjsIcon
                    src={`assets/images/HTML_nextjs_icon.png`}
                    loading="lazy"
                    alt={'nextjs-icon'}
                  />
                </QuestPlusNext>
              </TheProblem>
            </SpecialPricing>
          </Banner>
          <Sec2 data={data}>
            <Sec2Sub data={data}>
              <BuildWithTheTools data={data}>
                <Frame167 data={data}>
                  <Title data={data}>{`Figma to Responsive Webpages`}</Title>
                  <SimplyBring data={data}>
                    {`Convert your Figma into a pixel-perfect webpage. Use Auto layout to make things fully responsive. Use variants for different screen sizes. Because it is React, you can also use nested child components as well that come from Figma.`}
                  </SimplyBring>
                </Frame167>
                <Link href="/pricing">
                  <ButtonOutlined2
                    variant="outlined"
                    size="large"
                    color="primary"
                  >
                    {' '}
                    Sign Up Now{' '}
                  </ButtonOutlined2>
                </Link>
              </BuildWithTheTools>
              <FigmaToReactWithMui
                data={data}
                src={`assets/images/HTML_Figma_to_React_with_MUI.png`}
                loading="lazy"
                alt={'Figma to React with MUI'}
              />
            </Sec2Sub>
          </Sec2>
        </Sec2A>
        <Benefits data={data}>
          <DesignWithoutLimits data={data}>
            <DesignToLiveHtml data={data}>
              {`Design without limits`}
            </DesignToLiveHtml>
            <ImportYourDifferen data={data}>
              {`Generate code that’s clean and efficient, and as good or better than hand-coded.`}
            </ImportYourDifferen>
          </DesignWithoutLimits>
          <ExportToCode data={data}>
            <DesignToLiveHtml1 data={data}>
              {`Export to code`}
            </DesignToLiveHtml1>
            <ImportYourDifferen1 data={data}>
              {`By removing the back and forth between designer and developer, your product will no longer be just “good enough”.`}
            </ImportYourDifferen1>
          </ExportToCode>
          <LaunchAndDone data={data}>
            <DesignToLiveHtml2 data={data}>
              {`Launch and done`}
            </DesignToLiveHtml2>
            <ImportYourDifferen2 data={data}>
              {`Build exactly what your designer envisions with pixel-perfect conversion of your Figma designs.`}
            </ImportYourDifferen2>
          </LaunchAndDone>
        </Benefits>
        <Sec8 data={data}>
          <SecText data={data}>
            {!(data.currentVariant === 'Property1HTMLT') &&
              !(data.currentVariant === 'Property1HTMLM') && (
                <Txt data={data}>
                  <TakeDesignToLaunc data={data}>
                    {`Native support for NextJS`}
                  </TakeDesignToLaunc>
                  <NeoFromQuestAiEm data={data}>
                    {`Export your entire website in the NextJS format. Push it to your Vercel connected repo and have your website live without writing a single line of code.`}
                  </NeoFromQuestAiEm>
                </Txt>
              )}
          </SecText>
          <Card
            data={data}
            src={`assets/images/HTML_card.png`}
            loading="lazy"
            alt={'card'}
          />
          {(data.currentVariant === 'Property1HTMLT' ||
            data.currentVariant === 'Property1HTMLM') && (
            <SecText1 data={data}>
              <Txt1>
                <TakeDesignToLaunc1 data={data}>
                  {`Native support for NextJS`}
                </TakeDesignToLaunc1>
                <NeoFromQuestAiEm1 data={data}>
                  {data.currentVariant === 'Property1HTMLT'
                    ? `Export your entire website in the NextJS format. Push it to your Vercel connected repo and have your website live without writing a single line of code.`
                    : data.currentVariant === 'Property1HTMLM'
                    ? `Export your entire website in the NextJS format. Push it to your Vercel connected repo and have your website live without writing a single line of code.`
                    : `NextJS format. Push it to your Vercel connected repo and have your website live without writing a single line of code.`}
                </NeoFromQuestAiEm1>
              </Txt1>
            </SecText1>
          )}
        </Sec8>
        <Sec4 data={data}>
          <Divider></Divider>
          <TheProblem1 data={data}>
            {`Features that supercharge your workflow`}
          </TheProblem1>
          <Bullets data={data}>
            <BulletsRow data={data}>
              <BulletsRow2 data={data}>
                <TheProblem2 data={data}>
                  <TheProblem3 data={data}>{`Page Routes`}</TheProblem3>
                  <ForAgencies data={data}>
                    {`Export your entire app with page routes for CRA or Next JS`}
                  </ForAgencies>
                </TheProblem2>
                <Devices data={data}>
                  <RouteSettings
                    data={data}
                    src={`assets/images/HTML_route_Settings.png`}
                    loading="lazy"
                    alt={'route Settings'}
                  />
                </Devices>
              </BulletsRow2>
              <BulletPoint1 data={data}>
                <Group127
                  data={data}
                  src={`assets/images/HTML_Group_127.png`}
                  loading="lazy"
                  alt={'Group 127'}
                />
                <TheProblem4 data={data}>
                  <TheProblem5 data={data}>{`Accessibility`}</TheProblem5>
                  <ForAgencies1 data={data}>
                    {`Support for Aria labels and HTML tags for screen readers  support .`}
                  </ForAgencies1>
                </TheProblem4>
              </BulletPoint1>
            </BulletsRow>
            <BulletsRow1 data={data}>
              <BulletsRow21 data={data}>
                <TheProblem6 data={data}>
                  <TheProblem7 data={data}>{`Design responsively`}</TheProblem7>
                  <ForAgencies2 data={data}>
                    {`Support for multi-screen experiences without any coding`}
                  </ForAgencies2>
                </TheProblem6>
                <Devices1 data={data}>
                  <Mobile
                    data={data}
                    src={`assets/images/HTML_mobile.png`}
                    loading="lazy"
                    alt={'mobile'}
                  />
                  <Tablet
                    data={data}
                    src={`assets/images/HTML_tablet.png`}
                    loading="lazy"
                    alt={'tablet'}
                  />
                  <Desktop
                    data={data}
                    src={`assets/images/HTML_desktop.png`}
                    loading="lazy"
                    alt={'desktop'}
                  />
                </Devices1>
              </BulletsRow21>
              <BulletPoint11 data={data}>
                <AnimIconHolder
                  data={data}
                  src={`assets/images/HTML_anim_icon_holder.png`}
                  loading="lazy"
                  alt={'anim icon holder'}
                />
                <TheProblem8 data={data}>
                  <TheProblem9 data={data}>
                    {`Interactive and page load animations`}
                  </TheProblem9>
                  <ForAgencies3 data={data}>
                    {`Easily create any kind of animation that are triggered numerous ways.`}
                  </ForAgencies3>
                </TheProblem8>
              </BulletPoint11>
            </BulletsRow1>
            <BulletsRow3 data={data}>
              <BulletPoint4 data={data}>
                <ImgGooglefonts
                  data={data}
                  src={`${
                    data.currentVariant === 'Property1HTMLT'
                      ? 'assets/images/HTML_img_googlefonts_1.png'
                      : data.currentVariant === 'Property1HTMLM'
                      ? 'assets/images/HTML_img_googlefonts_2.png'
                      : 'assets/images/HTML_img_googlefonts.png'
                  }`}
                  loading="lazy"
                  alt={'img:googlefonts'}
                />
                <TheProblem10 data={data}>
                  <TheProblem11 data={data}>
                    {`Support for Google and custom fonts`}
                  </TheProblem11>
                  <ForAgencies4 data={data}>
                    {`Organize your team into workspaces and collaborate better with internal or external teams`}
                  </ForAgencies4>
                </TheProblem10>
              </BulletPoint4>
              <BulletPoint6 data={data}>
                <PinIcon2
                  data={data}
                  src={`assets/images/HTML_Pin_icon_2.png`}
                  loading="lazy"
                  alt={'Pin icon 2'}
                />
                <TheProblem12 data={data}>
                  <TheProblem13 data={data}>{`Sticky Position`}</TheProblem13>
                  <ForAgencies5 data={data}>
                    {`Easily set up sticky nav bars or sidebars while a user scrolls through the page`}
                  </ForAgencies5>
                </TheProblem12>
              </BulletPoint6>
            </BulletsRow3>
          </Bullets>
        </Sec4>
        <FaQs data={data}>
          <FaQs1>
            <Faq data={data}>{`FAQs`}</Faq>
          </FaQs1>
          <FaQs2 data={data}>
            <Row>
              <Frame126>
                <GameChangingFeatur data={data}>
                  {`Who owns the code generated by Quest?`}
                </GameChangingFeatur>
                <NeoFromQuestAiEm2 data={data}>
                  {`You do. Export it, share it, deploy it as you want. `}
                </NeoFromQuestAiEm2>
              </Frame126>
              <Divider1></Divider1>
            </Row>
            <Row1>
              <Frame1261>
                <GameChangingFeatur1 data={data}>
                  {`How secure is the code generated by Quest?`}
                </GameChangingFeatur1>
                <NeoFromQuestAiEm3 data={data}>
                  {`Quest generates clean code to the latest standards. You can then deploy it to your security standards and specifications.`}
                </NeoFromQuestAiEm3>
              </Frame1261>
              <Divider2></Divider2>
            </Row1>
            <Row2>
              <Frame1262>
                <GameChangingFeatur2 data={data}>
                  {`How often can I export my code?`}
                </GameChangingFeatur2>
                <NeoFromQuestAiEm4 data={data}>
                  {`You can export your code as often as you want. `}
                </NeoFromQuestAiEm4>
              </Frame1262>
              <Divider3></Divider3>
            </Row2>
          </FaQs2>
        </FaQs>
        <DiscoverSec data={data}>
          <Frame127 data={data}>
            <Subtitle>
              <ActionsIcon2
                src={`assets/images/HTML_Actions_Icon_2.png`}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <NeoFromQuestAiEm5>{`JOIN THE FUTURE`}</NeoFromQuestAiEm5>
            </Subtitle>
            <DiscoverThe data={data}>
              <DiscoverTheSpan1 data={data}>{`Discover the `}</DiscoverTheSpan1>
              <DiscoverTheSpan2 data={data}>{`future`}</DiscoverTheSpan2>
              <DiscoverTheSpan3
                data={data}
              >{` of website development`}</DiscoverTheSpan3>
            </DiscoverThe>
            <ImportYourDifferen3 data={data}>
              {`The low-code movement is helping companies of all sizes remove redundant work. Quest enables you to build bold websites, faster and true to design.`}
            </ImportYourDifferen3>
          </Frame127>
        </DiscoverSec>
        <JoinUs data={data}>
          <JoinUsOnOurMissi data={data}>{`Build better`}</JoinUsOnOurMissi>
          <Link href="/pricing">
            <ButtonOutlined3 variant="outlined" size="large" color="primary">
              {' '}
              Sign Up Now{' '}
            </ButtonOutlined3>
          </Link>
        </JoinUs>
        <Footer1 data={data} />
      </Page>
    </Property1HtmlD>
  );
}

export default Html;
